{"version":3,"file":"src_app_routes_area-amministrativa_area-amministrativa_module_ts.js","mappings":"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","sources":["./src/app/routes/area-amministrativa/area-amministrativa-routing.module.ts","./src/app/routes/area-amministrativa/area-amministrativa.module.ts","./src/app/routes/area-amministrativa/comunicazioni/comunicazione-aggiorna/comunicazione-aggiorna.component.ts","./src/app/routes/area-amministrativa/comunicazioni/comunicazione-aggiorna/comunicazione-aggiorna.component.html","./src/app/routes/area-amministrativa/comunicazioni/comunicazione-nuova/comunicazione-nuova.component.ts","./src/app/routes/area-amministrativa/comunicazioni/comunicazione-nuova/comunicazione-nuova.component.html","./src/app/routes/area-amministrativa/comunicazioni/comunicazioni.component.ts","./src/app/routes/area-amministrativa/comunicazioni/comunicazioni.component.html","./src/app/routes/area-amministrativa/lista-utenti-modifica/lista-utenti-modifica.component.ts","./src/app/routes/area-amministrativa/lista-utenti-modifica/lista-utenti-modifica.component.html","./src/app/routes/area-amministrativa/lista-utenti/lista-utenti.component.ts","./src/app/routes/area-amministrativa/lista-utenti/lista-utenti.component.html","./src/app/routes/area-amministrativa/log-applicativo-dialog/log-applicativo-dialog.component.ts","./src/app/routes/area-amministrativa/log-applicativo-dialog/log-applicativo-dialog.component.html","./src/app/routes/area-amministrativa/log-applicativo/log-applicativo.component.ts","./src/app/routes/area-amministrativa/log-applicativo/log-applicativo.component.html","./src/app/shared/models/ruoli-comunicazioni.module.ts","./src/app/shared/models/ruolo.model.ts","./src/app/shared/services/logs.service.ts","./src/app/shared/services/tipi-comunicazione.service.ts","./src/app/shared/services/user.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LogApplicativoComponent } from './log-applicativo/log-applicativo.component';\r\nimport { ComunicazioniComponent } from './comunicazioni/comunicazioni.component';\r\nimport { ListaUtentiComponent } from './lista-utenti/lista-utenti.component';\r\nimport { AuthGuard } from '@core';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'comunicazioni',\r\n    pathMatch: 'full' },\r\n\r\n  {\r\n    path: 'comunicazioni',\r\n    canActivate: [AuthGuard],\r\n    data:{role: [ \"P12689\",\r\n                  \"P12689; P12690\",\r\n                  \"P12689; P12799\",\r\n                  \"P12689; P12800\",\r\n                  \"P12689; P12801\",\r\n                  \"P12689; P12690; P12799\",\r\n                  \"P12689; P12690; P12800\",\r\n                  \"P12689; P12690; P12801\",\r\n                  \"P12689; P12799; P12800\",\r\n                  \"P12689; P12799; P12801\",\r\n                  \"P12689; P12800; P12801\",\r\n                  \"P12689; P12690; P12799; P12800\",\r\n                  \"P12689; P12690; P12799; P12801\",\r\n                  \"P12689; P12690; P12800; P12801\",\r\n                  \"P12689; P12799; P12800; P12801\",\r\n                  \"P12689; P12690; P12799; P12800; P12801\"]},\r\n    component: ComunicazioniComponent\r\n  },\r\n  {\r\n    path: 'gestione-log',\r\n    canActivate:[AuthGuard],\r\n    data:{role: [ \"P12689\",\r\n                  \"P12689; P12690\",\r\n                  \"P12689; P12799\",\r\n                  \"P12689; P12800\",\r\n                  \"P12689; P12801\",\r\n                  \"P12689; P12690; P12799\",\r\n                  \"P12689; P12690; P12800\",\r\n                  \"P12689; P12690; P12801\",\r\n                  \"P12689; P12799; P12800\",\r\n                  \"P12689; P12799; P12801\",\r\n                  \"P12689; P12800; P12801\",\r\n                  \"P12689; P12690; P12799; P12800\",\r\n                  \"P12689; P12690; P12799; P12801\",\r\n                  \"P12689; P12690; P12800; P12801\",\r\n                  \"P12689; P12799; P12800; P12801\",\r\n                  \"P12689; P12690; P12799; P12800; P12801\"]},\r\n    component: LogApplicativoComponent},\r\n  {\r\n    path: 'lista-utenti',\r\n    canActivate:[AuthGuard],\r\n    data:{role: [ \"P12689\",\r\n                  \"P12689; P12690\",\r\n                  \"P12689; P12799\",\r\n                  \"P12689; P12800\",\r\n                  \"P12689; P12801\",\r\n                  \"P12689; P12690; P12799\",\r\n                  \"P12689; P12690; P12800\",\r\n                  \"P12689; P12690; P12801\",\r\n                  \"P12689; P12799; P12800\",\r\n                  \"P12689; P12799; P12801\",\r\n                  \"P12689; P12800; P12801\",\r\n                  \"P12689; P12690; P12799; P12800\",\r\n                  \"P12689; P12690; P12799; P12801\",\r\n                  \"P12689; P12690; P12800; P12801\",\r\n                  \"P12689; P12799; P12800; P12801\",\r\n                  \"P12689; P12690; P12799; P12800; P12801\"]},\r\n    component: ListaUtentiComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AreaAmministrativaRoutingModule { }\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LogApplicativoComponent } from './log-applicativo/log-applicativo.component';\r\nimport { AreaAmministrativaRoutingModule } from './area-amministrativa-routing.module';\r\nimport { LogApplicativoDialogComponent } from './log-applicativo-dialog/log-applicativo-dialog.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ComunicazioniComponent } from './comunicazioni/comunicazioni.component';\r\nimport { ComunicazioneNuovaComponent } from './comunicazioni/comunicazione-nuova/comunicazione-nuova.component';\r\nimport { ComunicazioneAggiornaComponent } from './comunicazioni/comunicazione-aggiorna/comunicazione-aggiorna.component';\r\nimport { ListaUtentiComponent } from './lista-utenti/lista-utenti.component';\r\nimport { GestioneSegnalazioneGerarchicoComponent } from '../organizzazione/rilevazioni/gestione-segnalazione-gerarchico/gestione-segnalazione-gerarchico.component';\r\nimport { DettaglioComunicazioneComponent } from './dettaglio-comunicazione/dettaglio-comunicazione.component';\r\nimport { ListaUtentiModificaComponent } from './lista-utenti-modifica/lista-utenti-modifica.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n    ComunicazioniComponent,\r\n    ComunicazioneAggiornaComponent,\r\n    ComunicazioneNuovaComponent,\r\n    LogApplicativoComponent,\r\n    LogApplicativoDialogComponent,\r\n    ListaUtentiComponent,\r\n    DettaglioComunicazioneComponent,\r\n    ListaUtentiModificaComponent,\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n  imports: [SharedModule,\r\n    CommonModule,\r\n    AreaAmministrativaRoutingModule\r\n\r\n  ],\r\n})\r\nexport class AreaAmministrativaModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Comunicazione } from '@shared/models/comunicazione.model';\r\nimport { ComunicazioniService } from '@shared/services/comunicazioni.service';\r\nimport { TipoComunicazione } from '@shared/models/tipo-comunicazione.model';\r\nimport { TipiComunicazioneService } from '@shared/services/tipi-comunicazione.service';\r\nimport { Ruolo, Ruoli } from '@shared/models/ruolo.model';\r\nimport { RuoloService } from '@shared/services/ruolo.service';\r\nimport { RuoloComunicazione } from '@shared/models/ruolo-comunicazione.model';\r\nimport { RuoloComunicazioneService } from '@shared/services/ruolo-comunicazione.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { formatDate } from '@angular/common';\r\nimport { MatListOption } from '@angular/material/list';\r\nimport { Comunicazioni } from '@shared/models/comunicazioni.model';\r\nimport { RuoliComunicazioni } from '@shared/models/ruoli-comunicazioni.module';\r\nimport * as moment from 'moment';\r\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\r\n\r\nexport interface DialogData {\r\n  id: number\r\n}\r\n\r\n@Component({\r\n  selector: 'app-comunicazione-aggiorna',\r\n  templateUrl: './comunicazione-aggiorna.component.html',\r\n  styleUrls: ['./comunicazione-aggiorna.component.scss']\r\n})\r\n\r\nexport class ComunicazioneAggiornaComponent implements OnInit {\r\n  isOggettoFocused: boolean = false;\r\n  isSubmitting: boolean = false;\r\n  listaTipiComunicazione: TipoComunicazione[] = [];\r\n  comunicazione: Comunicazioni = new Comunicazioni();\r\n  ruolo: Ruolo = new Ruolo();\r\n  ruoliList: Ruoli[] = [\r\n    { codice: 'P12689', nome: 'Amministratore'},\r\n    { codice: 'P12800', nome: 'Operatore Centrale'},\r\n    { codice: 'P12690', nome: 'Referente Centrale'},\r\n    { codice: 'P12801', nome: 'Referente Territoriale'},\r\n    { codice: 'P12799', nome: 'Referente Regionale'}\r\n  ];\r\n  ruoliComunicazione: RuoliComunicazioni[] = [];    //ruoli associati alla comunicazione letti dal db\r\n  ruoliModificati: boolean = false;\r\n  ruoloSelezionato: boolean = true;\r\n  idComunicazione: number = 0;\r\n  buttonClicked = '';\r\n  deleteButton = false;\r\n  allRolesSelected: boolean = false;\r\n\r\n  snackBarQueue: { message: string, action: string, duration: number }[] = [];\r\n  snackBarRef: MatSnackBarRef<any> | null = null;\r\n\r\n  constructor(private formBuilder: FormBuilder, private comunicazioneSrv: ComunicazioniService,\r\n    private tipiComunicazioneSrv: TipiComunicazioneService, private ruoloComunicazioneSrv: RuoloComunicazioneService,\r\n    public dialogRef: MatDialogRef<ComunicazioneAggiornaComponent>, public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData, private snackBar: MatSnackBar) { }\r\n\r\n    form1 = this.formBuilder.group({\r\n      inputOggetto: ['', [Validators.required, Validators.maxLength(250)]],\r\n      inputTipo: ['', Validators.required],\r\n      inputMessaggio: ['', Validators.required],\r\n      validitaDal: ['', Validators.required],\r\n      validitaAl: ['', Validators.required],\r\n      selectedRole:[''],\r\n    });\r\n\r\n  ngOnInit(): void {\r\n    this.idComunicazione = <any>this.data as number;\r\n    this.loadData();\r\n\r\n    if (this.form1.get('inputOggetto')?.value) {\r\n      this.isOggettoFocused = false;\r\n    }\r\n  }\r\n\r\n  loadData() {\r\n    let tipiComunicazione = this.tipiComunicazioneSrv.getTipiComunicazioni();\r\n    let comunicazione = this.comunicazioneSrv.newGetComunicazioneById(this.idComunicazione);\r\n    let ruoloComunicazione = this.ruoloComunicazioneSrv.newGetRuoliByComunicazioneId(this.idComunicazione);\r\n\r\n    forkJoin([tipiComunicazione, comunicazione, ruoloComunicazione]).subscribe({\r\n        next: (results) => {\r\n          this.listaTipiComunicazione = results[0];\r\n          this.comunicazione = results[1];\r\n          this.ruoliComunicazione = results[2];\r\n          this.form1.controls[\"inputOggetto\"].setValue(this.comunicazione.oggetto);\r\n          if (this.comunicazione.idTipoComunicazione){\r\n            this.form1.controls[\"inputTipo\"].setValue(this.comunicazione.idTipoComunicazione);\r\n          }\r\n          this.form1.controls[\"inputMessaggio\"].setValue(this.comunicazione.messaggio);\r\n          this.form1.controls[\"validitaDal\"].setValue(formatDate(this.comunicazione.dataInizio, 'yyyy-MM-dd', 'en-US'));\r\n          this.form1.controls[\"validitaAl\"].setValue(formatDate(this.comunicazione.dataFine, 'yyyy-MM-dd', 'en-US'));\r\n        },\r\n        error: (e: HttpErrorResponse) => {\r\n            console.error(e);\r\n        },\r\n    });\r\n  }\r\n\r\n  isChecked(cod: string): boolean {\r\n    const exists = this.ruoliComunicazione.some(x => x.ruolo.includes(cod));\r\n    return exists;\r\n  }\r\n\r\n  onSelectionChange(options: MatListOption[]) {\r\n    //serve per capire se è stata modificata la selezione: se non è stata modificata in fase di salvataggio non effettuo le verifiche dei ruoli\r\n    //questo perchè se non veniva modificata la selezione non veniva riportata la situazione iniziale (probabile bug) e quindi erano cancellati tutti i ruoli\r\n    const selectedRoles = this.form1.get('selectedRole')!.value || [];\r\n    this.allRolesSelected = selectedRoles.length === this.ruoliList.length;\r\n    this.ruoliModificati = true;\r\n\r\n    if (options.length == 0){\r\n      this.ruoloSelezionato = false;\r\n    }\r\n  }\r\n\r\n  showSnackBar(message: string, action: string, duration: number = 3000) {\r\n    this.snackBarQueue.push({ message, action, duration });\r\n\r\n    if (!this.snackBarRef) {\r\n      this.openNextSnackBar();\r\n    }\r\n  }\r\n\r\n  openNextSnackBar() {\r\n    if (this.snackBarQueue.length > 0) {\r\n      const { message, action, duration } = this.snackBarQueue.shift()!;\r\n      this.snackBarRef = this.snackBar.open(message, action, { duration });\r\n\r\n      this.snackBarRef.afterDismissed().subscribe(() => {\r\n        this.snackBarRef = null;\r\n        this.openNextSnackBar();\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.isSubmitting = true;\r\n    if (this.buttonClicked === 'modifica') {\r\n      this.comunicazione.oggetto = this.form1.value.inputOggetto;\r\n      this.comunicazione.idTipoComunicazione = +this.form1.get('inputTipo')?.value;\r\n      this.comunicazione.messaggio = this.form1.value.inputMessaggio;\r\n\r\n      const validitaDal = moment(this.form1.value.validitaDal).startOf('day').format('YYYY-MM-DD');\r\n      const validitaAl = moment(this.form1.value.validitaAl).startOf('day').format('YYYY-MM-DD');\r\n\r\n      this.comunicazione.dataInizio = validitaDal;\r\n      this.comunicazione.dataFine = validitaAl;\r\n\r\n      this.comunicazioneSrv.newAggiornaComunicazione(this.comunicazione).subscribe(\r\n        data => {\r\n          // Controlla se ci sono ruoli da aggiungere\r\n          const ruoliDaAggiungere = this.form1.value.selectedRole.filter((ruolo: string) => {\r\n            return !this.ruoliComunicazione.some(rc => rc.ruolo.includes(ruolo));\r\n          });\r\n\r\n          // Aggiungi ruoli se necessario\r\n          if (ruoliDaAggiungere.length > 0) {\r\n            const ruoliComunicazioneToAdd = ruoliDaAggiungere.map((role: string) => ({\r\n              idComunicazione: data.idComunicazione,\r\n              ruolo: role\r\n            }));\r\n            this.ruoloComunicazioneSrv.newInserisciRuoloComunicazione(ruoliComunicazioneToAdd).subscribe({\r\n              next: () => {\r\n                this.showSnackBar('Ruoli aggiunti con successo', 'Chiudi');\r\n                this.isSubmitting = false;\r\n              },\r\n              error: (error) => {\r\n                this.showSnackBar('Errore durante l\\'aggiunta dei ruoli', 'Chiudi');\r\n                console.error('Errore durante l\\'aggiunta dei ruoli:', error);\r\n                this.isSubmitting = false;\r\n              }\r\n            });\r\n          }\r\n\r\n          // Controlla se ci sono ruoli da rimuovere\r\n          const ruoliDaRimuovere = this.ruoliComunicazione.filter(rc => {\r\n            return !this.form1.value.selectedRole.includes(rc.ruolo);\r\n          });\r\n\r\n          // Prepara l'array di ruoli da rimuovere\r\n          if (ruoliDaRimuovere.length > 0) {\r\n            const ruoliComunicazioneToRemove = ruoliDaRimuovere.map((role: any) => ({\r\n              idComunicazione: this.comunicazione.id,\r\n              ruolo: role.ruolo\r\n            }));\r\n\r\n            this.ruoloComunicazioneSrv.newDeleteRuoliComunicazioni(ruoliComunicazioneToRemove).subscribe(\r\n              () => {\r\n                this.showSnackBar('Ruoli rimossi con successo', 'Chiudi');\r\n              },\r\n              error => {\r\n                this.showSnackBar('Errore durante la rimozione dei ruoli', 'Chiudi');\r\n                console.error('Errore durante la rimozione dei ruoli:', error);\r\n              }\r\n            );\r\n          }\r\n\r\n          // Chiudi la dialog e mostra un messaggio di successo per la comunicazione\r\n          this.dialogRef.close();\r\n          this.showSnackBar('Comunicazione aggiornata con successo', 'Chiudi');\r\n        },\r\n        error => {\r\n          // Mostra un messaggio di errore in caso di fallimento dell'aggiornamento\r\n          this.showSnackBar('Errore durante l\\'aggiornamento della comunicazione', 'Chiudi');\r\n          console.error('Errore durante l\\'aggiornamento della comunicazione:', error);\r\n        }\r\n      );\r\n      this.buttonClicked = '';\r\n    }\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n  }\r\n\r\n  clickDelete(){\r\n    this.deleteButton = !this.deleteButton;\r\n  }\r\n\r\n  elimina(){\r\n    this.delay(1);\r\n        this.comunicazioneSrv.newDeleteComunicazione(this.comunicazione.id).subscribe(\r\n          () => {\r\n            this.dialogRef.close();\r\n        });\r\n  }\r\n\r\n  toggleAllRoles(checked: boolean) {\r\n    this.allRolesSelected = checked;\r\n    if (checked) {\r\n      const allRoles = this.ruoliList.map(ruolo => ruolo.codice);\r\n      this.form1.get('selectedRole')!.setValue(allRoles);\r\n    } else {\r\n      this.form1.get('selectedRole')!.setValue([]);\r\n    }\r\n  }\r\n}\r\n","<p><mat-icon class=\"main-ico\">build</mat-icon>Modifica Comunicazione</p>\r\n<form class=\"form\" [formGroup]=\"form1\" (ngSubmit)=\"onSubmit()\">\r\n  <!-- oggetto -->\r\n  <mat-form-field appearance=\"fill\" >\r\n    <mat-label>Oggetto</mat-label>\r\n    <input matInput\r\n      placeholder=\"Oggetto\"\r\n      formControlName=\"inputOggetto\"\r\n      maxlength=\"250\"\r\n      (focus)=\"isOggettoFocused = true\"\r\n      (blur)=\"isOggettoFocused = false\"\r\n    >\r\n    <mat-hint align=\"end\" *ngIf=\"isOggettoFocused\">\r\n      {{ form1.get('inputOggetto')?.value?.length || 0 }}/250\r\n    </mat-hint>\r\n    <mat-error *ngIf=\"form1.get('inputOggetto')?.hasError('maxlength')\">\r\n      L'oggetto non può superare 250 caratteri.\r\n    </mat-error>\r\n  </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n  <!-- tipo -->\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Tipo</mat-label>\r\n    <mat-select\r\n            required\r\n            placeolder=\"Tipo\"\r\n            formControlName=\"inputTipo\" >\r\n      <mat-option *ngFor=\"let tipocomunicazione of listaTipiComunicazione\" [value]=\"tipocomunicazione.id\">\r\n        {{tipocomunicazione.nome}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <br>\r\n\r\n  <!-- messaggio -->\r\n  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n    <mat-label>Messaggio</mat-label>\r\n    <textarea matInput\r\n          [style.width.px]=\"550\"\r\n          [style.height.px]=\"100\"\r\n          [rows]=\"10\"\r\n          [cols]=\"40\"\r\n          resize=\"none\"\r\n          formControlName=\"inputMessaggio\"\r\n          >\r\n    </textarea>\r\n  </mat-form-field>\r\n\r\n  <br>\r\n\r\n  <!-- periodo validità -->\r\n  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n    <mat-label>Periodo di validità *</mat-label>\r\n    <mat-date-range-input [rangePicker]=\"picker\" (click)=\"picker.open()\">\r\n      <input matStartDate matInput placeholder=\"Dal\" formControlName=\"validitaDal\" >\r\n      <input matEndDate matInput placeholder=\"Al\" formControlName=\"validitaAl\" >\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\" [disabled]=\"false\">\r\n      <mat-icon matDatepickerToggleIcon>\r\n        date_range\r\n      </mat-icon>\r\n    </mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker [disabled]=\"false\"></mat-date-range-picker>\r\n  </mat-form-field>\r\n  <br>\r\n\r\n  <div class=\"full-width\" appearance=\"fill\" >\r\n    <mat-label>Ruoli destinatari: *</mat-label>\r\n    <span class=\"toggleAll\">\r\n      <mat-checkbox [checked]=\"allRolesSelected\" (change)=\"toggleAllRoles($event.checked)\">Seleziona tutti</mat-checkbox>\r\n    </span>\r\n    <div class=\"scrollable-list\">\r\n      <mat-selection-list #ruoliLista\r\n        formControlName=\"selectedRole\"\r\n        (selectionChange)=\"onSelectionChange(ruoliLista.selectedOptions.selected)\">\r\n        <mat-list-option checkboxPosition=\"before\" *ngFor=\"let ruolo of ruoliList\" [value]=\"ruolo.codice\" [selected]=\"isChecked(ruolo.codice)\">\r\n          {{ruolo.nome}}\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n    </div>\r\n  </div>\r\n  <br>\r\n\r\n  <mat-dialog-actions class=\"btn-box\" align=\"center\">\r\n    <button mat-button mat-dialog-close class=\"btn-back\"><mat-icon>arrow_back</mat-icon>Chiudi</button>\r\n\r\n    <button type=\"submit\" mat-button class=\"btn-mod\" (click)=\"buttonClicked = 'modifica'\" [disabled]=\"!form1.valid || !this.ruoloSelezionato || isSubmitting\">\r\n      <mat-icon>edit</mat-icon>Modifica\r\n    </button>\r\n\r\n    <div class=\"btn-dlt-container tooltip\">\r\n      <button mat-button class=\"btn-dlt\" (click)=\"clickDelete()\" [disabled]=\"!form1.valid || !this.ruoloSelezionato\">\r\n          <mat-icon>delete</mat-icon>\r\n      </button>\r\n      <span *ngIf=\"deleteButton\" class=\"tooltiptext\" [ngClass]=\"deleteButton ? 'opacity-100' : ''\">\r\n          Eliminare definitivamente?<br>\r\n              <button class=\"btn-def btn-def-yes\" (click)=\"elimina()\" [disabled]=\"!form1.valid || !this.ruoloSelezionato\">si</button>\r\n              <button class=\"btn-def btn-def-no\" (click)=\"clickDelete()\" [disabled]=\"!form1.valid || !this.ruoloSelezionato\">no</button>\r\n      </span>\r\n  </div>\r\n</mat-dialog-actions>\r\n\r\n</form>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ComunicazioniService } from '@shared/services/comunicazioni.service';\r\nimport { TipoComunicazione } from '@shared/models/tipo-comunicazione.model';\r\nimport { TipiComunicazioneService } from '@shared/services/tipi-comunicazione.service';\r\nimport { Ruoli } from '@shared/models/ruolo.model';\r\nimport { RuoloComunicazioneService } from '@shared/services/ruolo-comunicazione.service';\r\nimport { Comunicazioni } from '@shared/models/comunicazioni.model';\r\nimport { RuoliComunicazioni } from '@shared/models/ruoli-comunicazioni.module';\r\nimport * as moment from 'moment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-comunicazione-nuova',\r\n  templateUrl: './comunicazione-nuova.component.html',\r\n  styleUrls: ['./comunicazione-nuova.component.scss']\r\n})\r\nexport class ComunicazioneNuovaComponent implements OnInit {\r\n  isOggettoFocused: boolean = false;\r\n  isSubmitting: boolean = false;\r\n  allRolesSelected: boolean = false\r\n  listaTipiComunicazione: TipoComunicazione[] = [];\r\n  ruoliList: Ruoli[] = [\r\n    { codice: 'P12689', nome: 'Amministratore'},\r\n    { codice: 'P12800', nome: 'Operatore Centrale'},\r\n    { codice: 'P12690', nome: 'Referente Centrale'},\r\n    { codice: 'P12801', nome: 'Referente Territoriale'},\r\n    { codice: 'P12799', nome: 'Referente Regionale'}\r\n  ];\r\n  comunicazione: Comunicazioni = new Comunicazioni();\r\n  ruoloComunic = new RuoliComunicazioni();\r\n  today: Date =  new Date();\r\n\r\n  constructor(private formBuilder: FormBuilder,private comunicazioneSrv: ComunicazioniService,\r\n    private tipiComunicazioneSrv: TipiComunicazioneService, private ruoloComunicazioneSrv: RuoloComunicazioneService,\r\n    private snackBar: MatSnackBar,public dialogRef: MatDialogRef<ComunicazioneNuovaComponent>) {\r\n    }\r\n\r\n  form1 = this.formBuilder.group({\r\n    inputOggetto: ['', [Validators.required, Validators.maxLength(250)]],\r\n    inputTipo: ['', Validators.required],\r\n    inputMessaggio: ['', Validators.required],\r\n    validitaDal: [null, Validators.required],\r\n    validitaAl: [null, Validators.required],\r\n    selectedRole:[[], Validators.required]\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.getTipiComunicazione();\r\n\r\n    if (this.form1.get('inputOggetto')?.value) {\r\n      this.isOggettoFocused = false;\r\n    }\r\n  }\r\n\r\n  salvaComunicazione() {\r\n    this.isSubmitting = true;\r\n    this.comunicazione.oggetto = this.form1.value.inputOggetto;\r\n    this.comunicazione.idTipoComunicazione = +this.form1.get('inputTipo')?.value;\r\n    this.comunicazione.messaggio = this.form1.value.inputMessaggio;\r\n\r\n    const validitaDal = moment(this.form1.value.validitaDal).startOf('day').format('YYYY-MM-DD');\r\n    const validitaAl = moment(this.form1.value.validitaAl).startOf('day').format('YYYY-MM-DD');\r\n\r\n    this.comunicazione.dataInizio = validitaDal;\r\n    this.comunicazione.dataFine = validitaAl;\r\n\r\n    // Inserimento della comunicazione\r\n    this.comunicazioneSrv.newInserisciComunicazione(this.comunicazione).subscribe(\r\n      data => {\r\n        const ruoliComunicazioniArray = this.form1.value.selectedRole.map((role: any) => {\r\n          return {\r\n            idComunicazione: data.idComunicazione,\r\n            ruolo: role\r\n          };\r\n        });\r\n\r\n        // Inserimento dei ruoli associati alla comunicazione\r\n        this.ruoloComunicazioneSrv.newInserisciRuoloComunicazione(ruoliComunicazioniArray).subscribe(\r\n          () => {\r\n            this.dialogRef.close();\r\n            this.snackBar.open('Comunicazione inserita con successo!', 'Chiudi', { duration: 3000 });\r\n            this.isSubmitting = false;\r\n          },\r\n          error => {\r\n            console.error('Errore durante l\\'inserimento dei ruoli comunicazione:', error);\r\n            this.snackBar.open('Errore durante l\\'inserimento dei ruoli comunicazione. Riprova.', 'Chiudi', { duration: 5000 });\r\n            this.isSubmitting = false;\r\n          }\r\n        );\r\n      },\r\n      error => {\r\n        // console.error('Errore durante l\\'inserimento della comunicazione:', error);\r\n        this.snackBar.open('Errore durante l\\'inserimento della comunicazione. Riprova.', 'Chiudi', { duration: 5000 });\r\n        this.isSubmitting = false;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  getTipiComunicazione(){\r\n    this.tipiComunicazioneSrv.getTipiComunicazioni().subscribe(data => {\r\n      this.listaTipiComunicazione = data;\r\n    });\r\n  }\r\n\r\n  toggleAllRoles(checked: boolean) {\r\n    this.allRolesSelected = checked;\r\n    if (checked) {\r\n      const allRoles = this.ruoliList.map(ruolo => ruolo.codice);\r\n      this.form1.get('selectedRole')!.setValue(allRoles);\r\n    } else {\r\n      this.form1.get('selectedRole')!.setValue([]);\r\n    }\r\n  }\r\n\r\n  onSelectionChange() {\r\n    const selectedRoles = this.form1.get('selectedRole')!.value || [];\r\n    this.allRolesSelected = selectedRoles.length === this.ruoliList.length;\r\n  }\r\n}\r\n","<p><mat-icon class=\"main-ico\">build</mat-icon>Nuova Comunicazione</p>\r\n<form class=\"form\" [formGroup]=\"form1\" (ngSubmit)=\"salvaComunicazione()\">\r\n  <!-- oggetto -->\r\n  <mat-form-field appearance=\"fill\" >\r\n    <mat-label>Oggetto</mat-label>\r\n    <input matInput\r\n      placeholder=\"Oggetto\"\r\n      formControlName=\"inputOggetto\"\r\n      maxlength=\"250\"\r\n      (focus)=\"isOggettoFocused = true\"\r\n      (blur)=\"isOggettoFocused = false\"\r\n    >\r\n    <mat-hint align=\"end\" *ngIf=\"isOggettoFocused\">\r\n      {{ form1.get('inputOggetto')?.value?.length || 0 }}/250\r\n    </mat-hint>\r\n    <mat-error *ngIf=\"form1.get('inputOggetto')?.hasError('maxlength')\">\r\n      L'oggetto non può superare 250 caratteri.\r\n    </mat-error>\r\n  </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n  <!-- tipo -->\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Tipo</mat-label>\r\n    <mat-select\r\n            required\r\n            placeolder=\"Tipo\"\r\n            formControlName=\"inputTipo\" >\r\n      <mat-option *ngFor=\"let tipocomunicazione of listaTipiComunicazione\" [value]=\"tipocomunicazione.id\">\r\n          {{tipocomunicazione.nome}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <br>\r\n\r\n  <!-- messaggio -->\r\n  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n    <mat-label>Messaggio</mat-label>\r\n    <textarea matInput\r\n          [style.width.px]=\"550\"\r\n          [style.height.px]=\"100\"\r\n          [rows]=\"10\"\r\n          [cols]=\"40\"\r\n          resize=\"none\"\r\n          formControlName=\"inputMessaggio\"\r\n          >\r\n    </textarea>\r\n  </mat-form-field>\r\n\r\n  <br>\r\n\r\n  <!-- periodo validità -->\r\n  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n    <mat-label>Periodo di validità *</mat-label>\r\n    <mat-date-range-input [rangePicker]=\"picker\" [min]=\"today\" (click)=\"picker.open()\">\r\n      <input matStartDate matInput placeholder=\"Dal\" formControlName=\"validitaDal\">\r\n      <input matEndDate matInput placeholder=\"Al\" formControlName=\"validitaAl\">\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\" [disabled]=\"false\">\r\n      <mat-icon matDatepickerToggleIcon>\r\n        date_range\r\n      </mat-icon>\r\n    </mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker [disabled]=\"false\"></mat-date-range-picker>\r\n  </mat-form-field>\r\n  <br>\r\n\r\n  <div class=\"full-width\" appearance=\"fill\">\r\n    <mat-label>Ruoli destinatari: *</mat-label>\r\n    <span class=\"toggleAll\">\r\n      <mat-checkbox [checked]=\"allRolesSelected\" (change)=\"toggleAllRoles($event.checked)\">Seleziona tutti</mat-checkbox>\r\n    </span>\r\n    <div class=\"scrollable-list\">\r\n      <mat-selection-list\r\n        formControlName=\"selectedRole\"\r\n        (selectionChange)=\"onSelectionChange()\">\r\n        <mat-list-option checkboxPosition=\"before\" *ngFor=\"let ruolo of ruoliList\" [value]=\"ruolo.codice\">\r\n          {{ruolo.nome}}\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n    </div>\r\n  </div>\r\n  <br>\r\n\r\n\r\n  <mat-dialog-actions class=\"btn-box\" align=\"center\">\r\n    <button mat-button mat-dialog-close class=\"btn btn-back\"><mat-icon>arrow_back</mat-icon>Chiudi</button>\r\n    <button type=\"submit\" mat-button class=\"btn btn-mod\" [disabled]=\"!form1.valid || isSubmitting\">\r\n      <mat-icon>add</mat-icon> Aggiungi\r\n    </button>\r\n  </mat-dialog-actions>\r\n\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Sort } from '@angular/material/sort';\r\nimport { ComunicazioniService } from '@shared/services/comunicazioni.service';\r\nimport { ComunicazioneNuovaComponent } from './comunicazione-nuova/comunicazione-nuova.component';\r\nimport { ComunicazioneAggiornaComponent } from './comunicazione-aggiorna/comunicazione-aggiorna.component';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-comunicazioni',\r\n  templateUrl: './comunicazioni.component.html',\r\n  styleUrls: ['./comunicazioni.component.scss']\r\n})\r\nexport class ComunicazioniComponent implements OnInit {\r\n\r\n  private searchSubject = new Subject<string>();\r\n  displayedColumns: string[] = ['oggetto', 'nome', 'messaggio', 'dataInizio', 'dataFine'];\r\n  dataSource: any[] = [];\r\n  filtroStringa = '';\r\n\r\n  // Proprietà per paginazione e ordinamento\r\n  pageDim = '20';\r\n  pageCurr = 1;  // Pagina corrente\r\n  pageNum = 0;   // Numero di pagine\r\n  elemNum = 0;   // Numero di elementi totali\r\n  base = 1;      // Base per creazione layout\r\n  layoutDim = 6; // Elementi paginazione\r\n  layoutNumbers: number[] = []; // Numeri del paginatore\r\n  numPages = ['5', '10', '20', '50', '100'];  // Possibili righe di paginazione\r\n  ordine = '';\r\n  errorMessage: string = '';\r\n\r\n  constructor(public dialog: MatDialog, private comunicazioniSrv: ComunicazioniService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.inizializzaPaginazione();\r\n\r\n    this.searchSubject.pipe(\r\n      debounceTime(500)\r\n    ).subscribe(searchTerm => {\r\n      this.filtroStringa = searchTerm;\r\n      this.pageCurr = 1;\r\n      this.base = 1;\r\n      this.layoutNumbers = [];\r\n      this.inizializzaPaginazione();\r\n    });\r\n  }\r\n\r\n  modificaDialog(id: number) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.width = '600px';\r\n    dialogConfig.data = id;\r\n    const dialogRef = this.dialog.open(ComunicazioneAggiornaComponent, dialogConfig);\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.inizializzaPaginazione();\r\n    });\r\n  }\r\n\r\n  nuovaDialog() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = 0;\r\n    dialogConfig.width = '600px';\r\n    dialogConfig.height = 'auto';\r\n    const dialogRef = this.dialog.open(ComunicazioneNuovaComponent, dialogConfig);\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.ordine = '';\r\n      this.inizializzaPaginazione();\r\n    });\r\n  }\r\n\r\n  popolaTabella() {\r\n    this.comunicazioniSrv.newGetComunicazioniConPaginazione(Number(this.pageDim),this.ordine,this.pageCurr - 1,this.filtroStringa).subscribe\r\n    (data => {\r\n        this.dataSource = data;\r\n      },\r\n      () => {\r\n        this.errorMessage = 'Error fetching data';\r\n        this.dataSource = [];\r\n      });\r\n  }\r\n\r\n  azzeraFiltro() {\r\n    this.filtroStringa = '';\r\n    this.pageCurr = 1;\r\n    this.base = 1;\r\n    this.layoutNumbers = [];\r\n    this.inizializzaPaginazione();\r\n  }\r\n\r\n  onInputChange(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    this.searchSubject.next(input.value);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.ordine = '';\r\n    if (sort.direction)\r\n      this.ordine = sort.active + '-' + sort.direction;\r\n    this.popolaTabella();\r\n  }\r\n\r\n  pageNext() {\r\n    if (this.pageCurr < this.pageNum) {\r\n      this.pageCurr++;\r\n      this.scorriLayout();\r\n      this.popolaTabella();\r\n    }\r\n  }\r\n\r\n  pagePrev() {\r\n    if (this.pageCurr > 1) {\r\n      this.pageCurr--;\r\n      this.scorriLayout();\r\n      this.popolaTabella();\r\n    }\r\n  }\r\n\r\n  setPageCurr(page: number) {\r\n    this.pageCurr = page;\r\n    this.popolaTabella();\r\n  }\r\n\r\n  resetPaginazione() {\r\n    this.pageCurr = 1;  // Pagina corrente\r\n    this.base = 1; // Base per creazione layout\r\n    this.layoutDim = 6; // Elementi paginazione\r\n    this.layoutNumbers = []; // Numeri del paginatore\r\n  }\r\n\r\n  inizializzaPaginazione() {\r\n    this.resetPaginazione();\r\n\r\n    this.comunicazioniSrv.newContaComunicazioni(this.filtroStringa).subscribe(data => {\r\n      this.elemNum = data.count;\r\n      this.pageNum = Math.floor(this.elemNum / Number(this.pageDim));\r\n      if ((this.elemNum % Number(this.pageDim)) > 0) this.pageNum++;\r\n      for (let i = 1; i <= 6; i++) {\r\n        if (i <= this.pageNum) {\r\n          this.layoutNumbers.push(i);\r\n        }\r\n      }\r\n      this.popolaTabella();\r\n    },\r\n    error => {\r\n      console.error('Errore nel conta della paginazione:', error);\r\n      this.elemNum = 0;\r\n      this.pageNum = 0;\r\n      this.dataSource = [];\r\n    });\r\n  }\r\n\r\n  scorriLayout() {\r\n    if ((this.pageCurr >= this.layoutNumbers[this.layoutNumbers.length - 1]) && this.pageCurr < this.pageNum) {\r\n      this.base = this.base + (this.layoutDim - 1);\r\n      this.layoutNumbers = [];\r\n      for (let i = this.base; i < this.base + 6; i++) {\r\n        if (i <= this.pageNum) {\r\n          this.layoutNumbers.push(i);\r\n        }\r\n      }\r\n    } else if ((this.pageCurr <= this.layoutNumbers[0]) && this.pageCurr > 1) {\r\n      this.base = this.base - (this.layoutDim - 1);\r\n      this.layoutNumbers = [];\r\n      for (let i = this.base; i < this.base + 6; i++) {\r\n        if (i <= this.pageNum) {\r\n          this.layoutNumbers.push(i);\r\n        }\r\n      }\r\n    }\r\n    else if (this.pageCurr === 1) {\r\n      this.base = 1;\r\n    }\r\n  }\r\n\r\n  pageFirst() {\r\n    if (this.pageCurr > 1) {\r\n      this.pageCurr = 1;\r\n      this.base = 1;\r\n      this.layoutNumbers = Array.from({ length: Math.min(6, this.pageNum) }, (_, i) => i + 1);\r\n      this.popolaTabella();\r\n    }\r\n  }\r\n\r\n  pageLast() {\r\n    if (this.pageCurr < this.pageNum) {\r\n      this.pageCurr = this.pageNum;\r\n      this.base = Math.max(1, this.pageNum - 5);\r\n      this.layoutNumbers = Array.from({ length: 6 }, (_, i) => this.base + i).filter(\r\n        k => k <= this.pageNum\r\n      );\r\n      this.popolaTabella();\r\n    }\r\n  }\r\n}\r\n","<page-header></page-header>\r\n<mat-card-actions align=\"end\" class=\"container-cards-buttons\">\r\n  <button mat-raised-button type=\"button\" class=\"child-buttons-conferma\" (click)=\"nuovaDialog()\">\r\n    <mat-icon class=\"new-ico\">add</mat-icon>&nbsp;Nuova\r\n  </button>\r\n</mat-card-actions>\r\n<br>\r\n<br>\r\n<br>\r\n<p class=\"section-title\">Comunicazioni | {{elemNum}} risultati</p>\r\n<div class=\"section-filtro-att\" *ngIf=\"filtroStringa\">&nbsp;per il filtro: <div class=\"box-filtro\">{{filtroStringa}}\r\n    <mat-icon class=\"clear-filter-ico\" (click)=\"azzeraFiltro()\">clear</mat-icon>\r\n  </div>\r\n</div>\r\n<div class=\"section-filtro-att\" *ngIf=\"!filtroStringa\">&nbsp;su {{elemNum}}</div>\r\n<!-- <input type=\"text\" align=\"end\" class=\"ricerca\" [(ngModel)]=\"filtroStringa\" (keyup)=\"chiamaFiltro()\"> -->\r\n<input type=\"text\" align=\"end\" class=\"ricerca\" [(ngModel)]=\"filtroStringa\" (input)=\"onInputChange($event)\" placeholder=\"Cerca...\">\r\n<mat-icon class=\"filter-ico\">filter_list</mat-icon>\r\n<div *ngIf=\"dataSource.length>0; else nessunRisultato\">\r\n  <table mat-table matSort (matSortChange)=\"sortData($event)\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    <ng-container matColumnDef=\"oggetto\">\r\n      <th mat-header-cell mat-sort-header=\"oggetto\" *matHeaderCellDef> Oggetto </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"modificaDialog(element.id)\"> {{element.oggetto}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"nome\">\r\n      <th mat-header-cell mat-sort-header=\"nome\" *matHeaderCellDef> Tipo </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"modificaDialog(element.id)\"> {{element.nome}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"messaggio\">\r\n      <th mat-header-cell mat-sort-header=\"messaggio\" *matHeaderCellDef> Messaggio </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"modificaDialog(element.id)\" [matTooltip]=\"element.messaggio\"> {{ element.messaggio ? element.messaggio.substring(0,50) + '...' : '' }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dataInizio\">\r\n      <th mat-header-cell mat-sort-header=\"dataInizio\" *matHeaderCellDef> Valido dal </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"modificaDialog(element.id)\"> {{element.dataInizio | date: 'dd/MM/yyyy'}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dataFine\">\r\n      <th mat-header-cell mat-sort-header=\"dataFine\" *matHeaderCellDef> Valido al </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"modificaDialog(element.id)\"> {{element.dataFine | date: 'dd/MM/yyyy'}} </td>\r\n    </ng-container>\r\n  </table>\r\n\r\n  <div class=\"mat-paginator-mod\">\r\n    <div class=\"pagination\">\r\n      <a *ngIf=\"pageCurr > 1\" (click)=\"pageFirst()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">first_page</mat-icon></a>\r\n      <a (click)=\"pagePrev()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">keyboard_arrow_left</mat-icon></a>\r\n      <a *ngFor=\"let ln of layoutNumbers\" [ngClass]=\"ln === pageCurr ? 'active' : ''\" (click)=\"setPageCurr(ln)\">{{ln}}</a>\r\n      <a (click)=\"pageNext()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">keyboard_arrow_right</mat-icon></a>\r\n      <a *ngIf=\"pageCurr < pageNum\" (click)=\"pageLast()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">last_page</mat-icon></a>\r\n    </div>\r\n    <div class=\"paginator-numelem\">\r\n      <mat-select class=\"paginator-numelem-select\" [(ngModel)]=\"pageDim\">\r\n        <mat-option *ngFor=\"let num of numPages\" value=\"{{num}}\" (click)=\"inizializzaPaginazione()\">{{num}}</mat-option>\r\n      </mat-select>\r\n    </div>\r\n    <div class=\"paginator-info\">Pagina {{pageCurr}} di {{pageNum}}</div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #nessunRisultato>\r\n  <br>\r\n  <br>\r\n  <div class=\"rotation-div\">\r\n    <h1 class=\"nessuna-corr\">\r\n      <mat-icon class=\"rotation\">cached</mat-icon>\r\n    </h1>\r\n  </div>\r\n</ng-template>\r\n\r\n","  import { Component, OnInit } from '@angular/core';\r\n  import { FormBuilder, Validators } from '@angular/forms';\r\n  import { MatDialog } from '@angular/material/dialog';\r\n  import { UserService } from '@shared/services/user.service';\r\n  import { PopupErroreInserimentoComponent } from 'app/routes/popup-errore-inserimento/popup-errore-inserimento.component';\r\n\r\n  @Component({\r\n    selector: 'app-lista-utenti-modifica',\r\n    templateUrl: './lista-utenti-modifica.component.html',\r\n    styleUrls: ['./lista-utenti-modifica.component.scss']\r\n  })\r\n  export class ListaUtentiModificaComponent implements OnInit {\r\n\r\n    data: any;\r\n    idTab!: number;\r\n    listaEmail: string[] = [];\r\n    emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\n    form = this.formBuilder.group({\r\n      emailField: ['', [Validators.required, Validators.maxLength(50), Validators.pattern(this.emailPattern)]],\r\n    });\r\n\r\n    constructor(\r\n      private formBuilder: FormBuilder,\r\n      public dialog: MatDialog,\r\n      private utentiSrv: UserService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n      this.data = this.utentiSrv.datiUtente$.value.row;\r\n      this.idTab = this.utentiSrv.datiUtente$.value.selectedTab;\r\n      // this.loadListaEmailUtenti(this.data.matricola);   // Trasmetto la matricola per raccogliere solo gli indirizzi email associati ad altri utenti\r\n\r\n      // if (this.data.email != null && this.data.email != undefined && this.data.email.trim() != '') {\r\n      //   this.form.patchValue({\r\n      //     emailField: this.data.email.trim()\r\n      //   });\r\n      // }\r\n    }\r\n\r\n    // loadListaEmailUtenti(matricola: string) {\r\n    //   this.utentiSrv.getAllEmailUtenti(matricola).subscribe((result: string[]) => {\r\n    //     this.listaEmail = result;\r\n    //   });\r\n    // }\r\n\r\n    // modifica() {\r\n    //   // Verifica se il form è valido\r\n    //   if (this.form.invalid) {\r\n    //     const errors = this.form.get('emailField')?.errors;\r\n\r\n    //     if (errors?.required) {\r\n    //       return this.openErrorDialog(\"Errore:\", \"L'indirizzo email è obbligatorio.\");\r\n    //     }\r\n\r\n    //     if (errors?.maxlength) {\r\n    //       return this.openErrorDialog(\"Errore:\", \"L'indirizzo email non può superare i 50 caratteri.\");\r\n    //     }\r\n\r\n    //     if (errors?.pattern) {\r\n    //       return this.openErrorDialog(\"Errore:\", \"Inserire un indirizzo email valido.\");\r\n    //     }\r\n\r\n    //     // Se ci sono altri errori, mostra un messaggio generico\r\n    //     return this.openErrorDialog(\"Errore:\", \"Verificare i dati inseriti.\");\r\n    //   }\r\n\r\n    //   const emailFieldTrimmed = this.form.value.emailField.trim();\r\n\r\n    //   // Verifica se l'email è già presente nella lista\r\n    //   if (this.listaEmail.includes(emailFieldTrimmed)) {\r\n    //     return this.openErrorDialog(\"Errore:\", \"L'indirizzo e-mail inserito è già associato a un altro utente.\");\r\n    //   }\r\n\r\n    //   // Procedi con l'aggiornamento dell'utente\r\n    //   this.aggiornaUtente(emailFieldTrimmed);\r\n    // }\r\n\r\n    // aggiornaUtente(email: string) {\r\n    //   this.utentiSrv.updateEmailUtente(this.data.matricola, email).subscribe();\r\n    //   this.utentiSrv.datiUtente$.next(null);\r\n    //   this.closeDialog();\r\n    // }\r\n\r\n    showField(valueToDisplay: string) {\r\n      if (valueToDisplay == null || valueToDisplay == undefined || valueToDisplay == '' || valueToDisplay.trim() == \"\") {\r\n        return '-';\r\n      }    \r\n      return valueToDisplay;\r\n    }\r\n\r\n    // openErrorDialog(titolo: string, message: string): void {\r\n    //   this.dialog.open(PopupErroreInserimentoComponent, {\r\n    //     data: { titolo: titolo, message: message },\r\n    //   });\r\n    // }\r\n\r\n    closeDialog() {\r\n      this.dialog.closeAll();\r\n    }\r\n\r\n  }","<div class=\"modal-container\">\r\n\r\n    <div class=\"modal-content\">\r\n\r\n        <div class=\"title\">Dettaglio Utente:&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span class=\"title-name\">{{data.nome}} {{data.cognome}}</span>\r\n            <!-- (Matricola: {{data.matricola}})  -->\r\n        </div> <br>\r\n\r\n        <div class=\"container-data\">\r\n            <div class=\"table\">\r\n                <div class=\"display-title\">\r\n                    <div>\r\n                        <h3><span class=\"top-title\">Matricola</span>\r\n                            <span class=\"sub-title\">{{data.matricola}}</span>\r\n                        </h3>\r\n                    </div>\r\n                    <div>\r\n                        <h3><span class=\"top-title\">Cognome</span>\r\n                            <span class=\"sub-title\">{{data.cognome}}</span>\r\n                        </h3>\r\n                    </div>\r\n                    <div>\r\n                        <h3><span class=\"top-title\">Nome</span>\r\n                            <span class=\"sub-title\">{{data.nome}}</span>\r\n                        </h3>\r\n                    </div>\r\n                    <div>\r\n                        <h3><span class=\"top-title\">Username</span>\r\n                            <span class=\"sub-title\">{{data.username}}</span>\r\n                        </h3>\r\n                    </div>\r\n                    <!-- <div *ngIf=\"this.idTab == 1\">\r\n                      <h3><span class=\"top-title\">Email</span>\r\n                          <span class=\"sub-title\">{{showField(data.email)}}</span>\r\n                      </h3>\r\n                    </div> -->\r\n                    <div>\r\n                        <h3><span class=\"top-title\">Email</span>\r\n                            <span class=\"sub-title\">{{showField(data.email)}}</span>\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n                <br><br>\r\n                <div class=\"display-title\">\r\n                    <div>\r\n                        <h3><span class=\"top-title\">Sedi</span>\r\n                            <span *ngFor=\"let sede of data.sedeDTO\"\r\n                                  class=\"sub-title\">{{sede.sedeCodSede}} - {{sede.sedeDesc}}</span>\r\n                        </h3>\r\n                    </div>\r\n                    <div>\r\n                        <h3><span class=\"top-title\">Ruoli</span>\r\n                            <span *ngFor=\"let ruolo of data.ruoloDTO\"\r\n                                  class=\"sub-title\">{{ruolo.ruoloDesc}}</span>\r\n                        </h3>\r\n                    </div>\r\n                    <div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        \r\n        <!--\r\n        <div *ngIf=\"this.idTab === 0\">\r\n            <form  class=\"form\" [formGroup]=\"form\" (ngSubmit)=\"modifica()\">\r\n                <div>\r\n                    <h3>\r\n                        <mat-form-field class=\"input-form\">\r\n                            <mat-label>Aggiorna indirizzo email</mat-label>\r\n                            <input class=\"sub-title\" matInput placeholder=\"nome.cognome@qualcosa.it\" value=\"\" formControlName=\"emailField\">\r\n                        </mat-form-field>\r\n                    </h3>\r\n\r\n                    <div class=\"container-buttons\">\r\n                            <button *ngIf=\"this.idTab === 0\" [disabled]=\"!form.value.emailField || form.value.emailField.trim() == ''\"\r\n                                type=\"submit\" class=\"child-buttons child-buttons-conferma\">\r\n                                Modifica\r\n                            </button>\r\n\r\n                            <button type=\"button\" (click)=\"closeDialog()\" class=\"child-buttons child-buttons-chiudi\">\r\n                                Chiudi\r\n                            </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n      -->\r\n\r\n\r\n      <!--   <div *ngIf=\"this.idTab === 1\" class=\"container-buttons\">\r\n            <br><br>\r\n            <button type=\"button\" (click)=\"closeDialog()\" class=\"child-buttons child-buttons-chiudi\">\r\n                Chiudi\r\n            </button>\r\n        </div> -->\r\n        <div class=\"container-buttons\">\r\n          <br><br>\r\n          <button type=\"button\" (click)=\"closeDialog()\" class=\"child-buttons child-buttons-chiudi\">\r\n              Chiudi\r\n          </button>\r\n      </div>\r\n    </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Sort } from '@angular/material/sort';\r\nimport { StorageService } from '@shared';\r\nimport { Utente } from '@shared/models/utente.model';\r\nimport { TerritorioService } from '@shared/services/territorio.service';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { PopupErroreInserimentoComponent } from 'app/routes/popup-errore-inserimento/popup-errore-inserimento.component';\r\nimport { map, Observable, startWith, switchMap, tap } from 'rxjs';\r\nimport { ListaUtentiModificaComponent } from '../lista-utenti-modifica/lista-utenti-modifica.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-lista-utenti',\r\n  templateUrl: './lista-utenti.component.html',\r\n  styleUrls: ['./lista-utenti.component.scss']\r\n})\r\nexport class ListaUtentiComponent implements OnInit {\r\n  @ViewChild('fileInput') fileInput: any;\r\n\r\n  constructor(  private storageService: StorageService,\r\n                private dialog: MatDialog,\r\n                private cdr: ChangeDetectorRef,\r\n                private utentiSrv: UserService,\r\n                private territorioService: TerritorioService,\r\n                public snackBar: MatSnackBar\r\n              ) { }\r\n\r\n  @ViewChild('regioneInput', { read: MatAutocompleteTrigger })\r\n  regioneAutocompleteTrigger!: MatAutocompleteTrigger;\r\n  @ViewChild('sedeInput', { read: MatAutocompleteTrigger })\r\n  sedeAutocompleteTrigger!: MatAutocompleteTrigger;\r\n  @ViewChild('ruoloInput', { read: MatAutocompleteTrigger })\r\n  ruoloAutocompleteTrigger!: MatAutocompleteTrigger;\r\n\r\n  codiceSede: any[] = [];\r\n  role: string | null = null;\r\n  ruoloSelezionato: string = \"\";\r\n  displayedColumns: string[] = ['matricola', 'cognome', 'nome', 'email', 'accountWindows', 'codiceSede', 'ruoli'];\r\n  displayedColumnsScarti: string[] = ['dataScarto', 'matricola', 'motivazioneScarto'];\r\n  dataSource: any[] = [];\r\n  dataSourceScarti: any[] = [];\r\n  dataSourceFiltered: any[] = [];\r\n\r\n  isLoading = true;\r\n  utenti: Utente[] = [];\r\n\r\n  listaRuoli: Ruolo[] = [];\r\n  sede: Sede[] = [];\r\n  regione: Sede[] = [];\r\n\r\n  matricola = new FormControl();\r\n  ruolo = new FormControl();\r\n  regioneCtrl = new FormControl();\r\n  sedeCtrl = new FormControl();\r\n  matricolaCtrl = new FormControl();  \r\n  ruoloCtrl = new FormControl();\r\n\r\n  filteredSede: Observable<Sede[]> | undefined;\r\n  filtroperSede: string | null = null;\r\n  filteredRegione: Observable<Sede[]> | undefined;\r\n  filtroperRegione: string | null = null;\r\n  filteredRuolo: Observable<Ruolo[]> | undefined;\r\n  filtroperRuolo: string | null = null;\r\n\r\n  ordinamentoColonna: string | null = null;\r\n  ordinamentoColonnaScarti: string | null = null;\r\n  selectedFile: File | null = null;\r\n\r\n  errorMessage: string | null = null;\r\n\r\n  //----------------paginazione config--------------------------\r\n  selectedTab: number = 0;  // per tenere traccia della tab selezionata (0: Gestione Utenti, 1: Lista Scarti)\r\n  pageDim = '20'; //numero di righe per pagina\r\n  pageCurr = 1; //pagina corrente\r\n  pageNum = 0; //numero di pagine\r\n  elemNum = 0; //numero di elementi totali\r\n  base = 1; //base per creazione layout\r\n  layoutDim = 6; //elementi paginazione\r\n  layoutNumbers: number[] = []; //numeri del paginatore\r\n  numPages = ['5', '10', '20', '50', '100']; //possibili righe di paginazione\r\n  //----------------paginazioneScarti config--------------------------\r\n  // selectedTab: number = 0;  // per tenere traccia della tab selezionata (0: Gestione Utenti, 1: Lista Scarti)\r\n  pageDimScarti = '20'; //numero di righe per pagina\r\n  pageCurrScarti = 1; //pagina corrente\r\n  pageNumScarti = 0; //numero di pagine\r\n  elemNumScarti = 0; //numero di elementi totali\r\n  baseScarti = 1; //base per creazione layout\r\n  layoutDimScarti = 6; //elementi paginazione\r\n  layoutNumbersScarti: number[] = []; //numeri del paginatore\r\n  numPagesScarti = ['5', '10', '20', '50', '100']; //possibili righe di paginazione\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.regioneCtrl.disable();\r\n    this.sedeCtrl.disable();\r\n    this.loadRuoli();\r\n    this.getRegioni();\r\n    this.getProvince();\r\n\r\n    this.filteredRuolo = this.ruoloCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterRuolo(value))\r\n    );\r\n\r\n    this.filteredSede = this.sedeCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterSede(value))\r\n    );\r\n\r\n    this.filteredRegione = this.regioneCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterRegione(value))\r\n    );\r\n\r\n    this.inizializzaPaginazione();  // this.popolaTabella() invocata dentro inizializzaPaginazione()\r\n    this.inizializzaPaginazioneScarti();  // this.loadScarti() invocata dentro inizializzaPaginazioneScarti()\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.regioneAutocompleteTrigger) {\r\n      this.regioneAutocompleteTrigger.panelClosingActions\r\n        .pipe(\r\n          switchMap(() => this.filteredRegione || []),\r\n          tap(filtered => {\r\n            if (this.regioneCtrl.value && !filtered.some(option => option.id === this.regioneCtrl.value)) {\r\n              this.regioneCtrl.setValue(null);\r\n            }\r\n          })\r\n        ).subscribe();\r\n    }\r\n\r\n    if (this.sedeAutocompleteTrigger) {\r\n      this.sedeAutocompleteTrigger.panelClosingActions\r\n        .pipe(\r\n          switchMap(() => this.filteredSede || []),\r\n          tap(filtered => {\r\n            if (this.sedeCtrl.value && !filtered.some(option => option.id === this.sedeCtrl.value)) {\r\n              this.sedeCtrl.setValue(null);\r\n            }\r\n          })\r\n        ).subscribe();\r\n    }\r\n  }\r\n\r\n  public _filterRuolo(value: string): Ruolo[] {\r\n    const filterValue = typeof value === 'string' ? value.toLowerCase() : '';\r\n    return this.listaRuoli.filter(option =>\r\n      option.descrizione.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  public _filterSede(value: string): Sede[] {\r\n    const filterValue = typeof value === 'string' ? value.toLowerCase() : '';\r\n    return this.sede.filter(option =>\r\n      this.showFieldSede(option.id!, option.nome).toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  public _filterRegione(value: string): Sede[] {\r\n    const filterValue = typeof value === 'string' ? value.toLowerCase() : '';\r\n    return this.regione.filter(option =>\r\n      this.showFieldSede(option.id!, option.nome).toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  sedeSelected(selectedId: number) {\r\n    const selectedSede = this.sede.find(option => option.id === selectedId);\r\n    this.sedeCtrl.setValue(this.showFieldSede(selectedSede!.id!, selectedSede!.nome) || '');\r\n    if (selectedId != null) this.filtroperSede = selectedId.toString();    \r\n    const sedeId = selectedId;\r\n    if (sedeId == null || sedeId == -1) {\r\n      this.sede = [];\r\n      this.getProvince();\r\n\r\n    } else {\r\n      this.territorioService.getRegioniByIdSede(this.formatToSixDigits(sedeId)!).subscribe((data: any) => {\r\n        for (let i = 0; i < this.regione.length; i++) {\r\n          if (data.sedeCodSede !== this.regione[i].id && this.regione[i].id != null) {\r\n            this.regione.splice(i, 1);\r\n            i--;\r\n          }\r\n        }\r\n        if (this.regione.length > 1) {\r\n          this.regioneCtrl.setValue(this.showFieldSede(this.regione[1].id!, this.regione[1].nome));\r\n        }\r\n        else /*if (this.regione.length == 1)*/{\r\n          // this.filteredSede = this.sedeCtrl.valueChanges.pipe(\r\n          //   startWith(''),\r\n          //   map(value => this._filterSede(value)));\r\n          // this.regioneCtrl.reset();\r\n          // this.regioneCtrl.setValue(this.showFieldSede(1, \"\"));\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  regioneSelected(selectedId: number) {\r\n    const selectedRegione = this.regione.find(option => option.id === selectedId);\r\n    if (selectedRegione) this.regioneCtrl.setValue(this.showFieldSede(selectedRegione!.id!, selectedRegione!.nome) || '');\r\n    this.filtroperRegione = selectedId.toString();\r\n    try {\r\n      const regioneId = selectedId;\r\n    if (regioneId == null || regioneId == -1) {\r\n      this.regione = [];\r\n      this.getRegioni();\r\n    } else {\r\n      this.territorioService.getAllProvinceByIdRegione(regioneId).subscribe((data: any) => {\r\n        if (data.length === 0) {\r\n          // alert('Nessuna sede associata a questa regione.');\r\n        } else {\r\n          for (let l = 0; l < this.sede.length; l++) {\r\n            let check = false;\r\n\r\n            for (let i = 0; i < data.length; i++) {\r\n\r\n              if (this.sede[l].nome === data[i].sedeDesc) {\r\n                check = true;\r\n              }\r\n            }\r\n\r\n            if (check == false) {\r\n              this.sede.splice(l, 1);\r\n              l--;\r\n            }\r\n          }\r\n          this.sede.unshift({ id: null, nome: \"\"})\r\n        }\r\n        this.filteredSede = this.sedeCtrl.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => this._filterSede(value))\r\n        );\r\n      }, (error) => {\r\n          this.errorMessage = 'Errore nel caricamento delle sedi associate alla regione.';\r\n      });\r\n    }\r\n    } catch (error) {\r\n      // alert('Errore nel caricamento delle sedi associate alla regione.');\r\n      this.errorMessage = 'Errore nel caricamento delle sedi associate alla regione.';\r\n    }\r\n  }\r\n\r\n  ruoloSelected(selectedValue: string) {\r\n    // Trova l'oggetto del ruolo selezionato in base al valore\r\n    const selectedRole = this.listaRuoli.find(option => option.ruolo1 === selectedValue);\r\n    \r\n    if (selectedRole) {\r\n      // Imposta il valore del FormControl con la descrizione del ruolo\r\n      this.ruoloCtrl.setValue(selectedRole.descrizione);\r\n      this.ruoloSelezionato = selectedRole.ruolo1;\r\n\r\n      // Controlla il codice del ruolo per abilitare/disabilitare Regione e Sede\r\n      if (selectedRole.ruolo1 === \"P12689\" || selectedRole.ruolo1 === \"P12690\" || selectedRole.ruolo1 === \"P12800\" || selectedRole.ruolo1 == '' ) {\r\n        this.regioneCtrl.reset();\r\n        this.sedeCtrl.reset();\r\n        this.regioneCtrl.disable();\r\n        this.sedeCtrl.disable();\r\n      } else if (selectedRole.ruolo1 === \"P12799\" || selectedRole.ruolo1 === \"P12801\" || selectedRole.ruolo1 == null) {\r\n        this.regioneCtrl.enable();\r\n        this.sedeCtrl.enable();\r\n      }\r\n    } else {\r\n      // Se il ruolo non è stato trovato o è nullo, abilita Regione e Sede di default\r\n      this.regioneCtrl.disable();\r\n      this.sedeCtrl.disable();\r\n    }\r\n  }\r\n\r\n  clearSede() {\r\n    if (this.regioneCtrl.value != null && this.regioneCtrl.value != undefined && this.regioneCtrl.value != '') {\r\n      const regioneId = parseInt(this.regioneCtrl.value.toString().split(' ')[0], 10);\r\n      this.regioneSelected(regioneId);\r\n      // this.regioneSelected(this.regioneCtrl.value.toString().split(' ')[0]);\r\n    }\r\n    this.regione = [];\r\n    this.getRegioni();\r\n    this.sedeCtrl.setValue('');\r\n    this.filteredSede = this.sedeCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterSede(value))\r\n    );\r\n  }\r\n\r\n  clearRegione() {\r\n    this.sede = [];\r\n    this.getProvince();\r\n    this.regioneCtrl.setValue('');\r\n    this.filteredRegione = this.regioneCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterRegione(value))\r\n    );\r\n  }\r\n\r\n  clearMatricola() {\r\n    this.matricolaCtrl.setValue('');\r\n  }\r\n\r\n  clearRuolo() {\r\n    this.ruoloCtrl.setValue('');\r\n    this.regioneCtrl.disable();\r\n    this.sedeCtrl.disable();\r\n  }\r\n\r\n  async getRegioni() {\r\n    this.territorioService.getRegioni().subscribe((results: any[]) => {\r\n\r\n      this.regione.push({ id: null, nome: \"\"})\r\n\r\n        for (let i = 0; i < results.length; i++) {\r\n          this.regione.push({ id: results[i].sedeCodSede, nome: results[i].sedeDesc})\r\n        }\r\n\r\n        // if (this.regione.length === 0) {\r\n        //   alert('Non ci sono sedi disponibili.');\r\n        //   return;\r\n        // }\r\n    },\r\n    (error) => {\r\n      this.errorMessage = 'Non ci sono sedi disponibili.'\r\n    });\r\n  }\r\n\r\n  async getProvince() {\r\n    this.territorioService.getProvince().subscribe((results: any[]) => {\r\n      this.sede.push({ id: null, nome: \"\"})\r\n      \r\n      for (let i = 0; i < results.length; i++) {\r\n        this.sede.push({ id: results[i].sedeCodSede, nome: results[i].sedeDesc})\r\n      }\r\n      \r\n      // if (this.sede.length === 0) {\r\n      //   alert('Non ci sono sedi provinciali disponibili.');\r\n      //   return;\r\n      // }\r\n    },\r\n    (error) => {\r\n      this.errorMessage = 'Non ci sono sedi disponibili.'\r\n    });\r\n  }\r\n\r\n  ricercaFiltrata() {\r\n\r\n    this.formatEmptyData();\r\n\r\n    if (this.matricolaCtrl.value == null && this.ruoloCtrl.value == null) {\r\n      this.openErrorDialog(\"Per effettuare la ricerca è necessario compilare il campo Matricola o il campo Ruolo.\", '')\r\n    }\r\n    else {\r\n      this.inizializzaPaginazione();\r\n    }\r\n  }\r\n\r\n  formatEmptyData() {\r\n\r\n    if (this.matricolaCtrl.value == \"\") {\r\n      this.matricolaCtrl.reset();\r\n    }\r\n    if (this.ruoloCtrl.value == \"\") {\r\n      this.ruoloCtrl.reset();\r\n    }\r\n    if (this.regioneCtrl.value == \"\") {\r\n      this.regioneCtrl.reset();\r\n    }\r\n    if (this.sedeCtrl.value == \"\") {\r\n      this.sedeCtrl.reset();\r\n    }\r\n  }\r\n\r\n  popolaTabella(){\r\n\r\n    this.isLoading = true;\r\n\r\n    this.formatEmptyData();\r\n\r\n    this.utentiSrv.getUtenti(\r\n      Number.parseInt(this.pageDim.trim()),\r\n      this.pageCurr,\r\n      this.ordinamentoColonna,\r\n      this.matricolaCtrl.value,\r\n      this.ruoloSelezionato,\r\n      this.regioneCtrl.value,\r\n      this.sedeCtrl.value\r\n    ).subscribe(\r\n        (data: any[]) => {\r\n          this.isLoading = false;\r\n          this.dataSourceFiltered = data;\r\n          this.dataSource = data;\r\n          // this.utenti = data;\r\n        },\r\n        error => {\r\n          this.errorMessage = 'Errore nel recupero degli utenti.'\r\n          console.error('Errore nel recupero degli utenti.', error);\r\n          this.isLoading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  loadRuoli() {\r\n    this.utentiSrv.getAllRuoli().subscribe(\r\n      (data: any[]) => {\r\n        this.listaRuoli = data;\r\n        this.listaRuoli.unshift(\r\n          {id: null,\r\n          ruolo1: \"\",\r\n          descrizione: \"\" }\r\n        )\r\n      },\r\n      (error: any) => {\r\n        console.error('Errore nel recupero dei ruoli.', error);\r\n        this.errorMessage = 'Errore nel recupero dei ruoli.'\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  showFieldSede(codiceSede: number, nomeSede: string): string {\r\n    if (\r\n      codiceSede != null &&\r\n      codiceSede != undefined &&\r\n      codiceSede != Number('') &&\r\n      nomeSede != null &&\r\n      nomeSede != undefined &&\r\n      nomeSede != ''\r\n    ) {\r\n      var codiceFormattato = this.formatToSixDigits(codiceSede);\r\n      return codiceFormattato + ' - ' + nomeSede;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  showField(content: string) {\r\n\r\n    if (content == null || content == undefined || content == \"\") {\r\n      return \"-\"\r\n    }\r\n    return content;\r\n  }\r\n\r\n  formatToSixDigits(value: any): string | null {\r\n    const numberValue = Number(value);\r\n    if (value == null) {\r\n      return null;\r\n    }\r\n    return numberValue.toString().padStart(6, '0');\r\n  }\r\n\r\n  displayFieldSede(sedeDTO: any[]) {\r\n    let output = \"\";\r\n\r\n    if (sedeDTO[0].sedeCodSede != null && sedeDTO[0].sedeCodSede != undefined) {\r\n      output = sedeDTO[0].sedeCodSede + ' - ' + sedeDTO[0].sedeDesc;\r\n\r\n      if (sedeDTO.length > 1) { output = output + ' ... ' }\r\n\r\n      return output\r\n    }\r\n    else return \"-\";\r\n  }\r\n\r\n  showAllFieldSedi(sedeDTO: any[]) {\r\n\r\n    if (sedeDTO.length != 1) {\r\n\r\n      let output = \"\";\r\n\r\n      for (let i = 0; i < sedeDTO.length; i++) {\r\n\r\n        if (sedeDTO[i].sedeCodSede != null && sedeDTO[i].sedeCodSede != undefined) {\r\n          const support = sedeDTO[i].sedeCodSede + ' - ' + sedeDTO[i].sedeDesc;\r\n          output = output + support + '<br>';\r\n        }\r\n      }\r\n      this.openErrorDialog(output, '');\r\n    }\r\n    // else non devo aprire il popup perché non ho informazioni aggiuntive da mostrare\r\n  }\r\n\r\n  displayFieldRuolo(ruoloDTO: any[]) {\r\n    let output = \"\";\r\n    \r\n    if (ruoloDTO[0].ruoloCod != null && ruoloDTO[0].ruoloCod != undefined) {\r\n      output = ruoloDTO[0].ruoloDesc;\r\n      // const output = ruoloDTO[0].ruoloCod + ' - ' + ruoloDTO[0].ruoloDesc;\r\n\r\n      if (ruoloDTO.length > 1) { output = output + ' ... ' }\r\n\r\n      return output\r\n    }\r\n    else return \"-\";\r\n  }\r\n\r\n  showAllFieldRuoli(ruoloDTO: any[]) {\r\n\r\n    if (ruoloDTO.length != 1) {\r\n\r\n      let output = \"\";\r\n\r\n      for (let i = 0; i < ruoloDTO.length; i++) {\r\n\r\n        if (ruoloDTO[i].ruoloCod != null && ruoloDTO[i].ruoloCod != undefined) {\r\n          const support = ruoloDTO[i].ruoloDesc;\r\n          // const support = ruoloDTO[i].ruoloCod + ' - ' + ruoloDTO[i].ruoloDesc;\r\n          output = output + support + '<br>';\r\n        }\r\n      }\r\n      this.openErrorDialog(output, '');\r\n    }\r\n    // else non devo aprire il popup perché non ho informazioni aggiuntive da mostrare\r\n  }\r\n\r\n  openErrorDialog(message: string, titolo: string): void {\r\n    this.dialog.open(PopupErroreInserimentoComponent, {\r\n      data: { message: message, titolo: titolo },\r\n    });\r\n  }\r\n\r\n  resetRicerca() {\r\n    this.matricolaCtrl.reset();\r\n    this.ruoloCtrl.reset();\r\n\r\n    this.filtroperSede = null;\r\n    this.filtroperRegione = null;\r\n    this.sedeCtrl.reset();\r\n    this.regioneCtrl.reset();\r\n\r\n    // non so se commentabili\r\n    this.filteredSede = this.sedeCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterSede(value))\r\n    );\r\n\r\n    this.filteredRegione = this.regioneCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterRegione(value))\r\n    );\r\n\r\n    this.regione = [];\r\n    this.sede = [];\r\n    this.getRegioni();\r\n    this.getProvince();\r\n\r\n    this.elemNum = 0;\r\n    this.dataSourceFiltered = [];\r\n\r\n    this.sedeCtrl.disable();\r\n    this.regioneCtrl.disable();\r\n  }\r\n\r\n  openSedePanel() {\r\n    this.sedeAutocompleteTrigger.openPanel();\r\n  }\r\n\r\n  openRegionePanel() {\r\n    this.regioneAutocompleteTrigger.openPanel();\r\n  }\r\n\r\n  openRuoloPanel() {\r\n    this.ruoloAutocompleteTrigger.openPanel();\r\n  }\r\n\r\n  onFocus(ctrl: FormControl): void {\r\n    if (!ctrl.value || ctrl.value === '') {\r\n      ctrl.setValue(' ');\r\n      setTimeout(() => ctrl.setValue(''), 1);\r\n    }\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    let ordine = \"\";\r\n    if (sort.direction) {\r\n      ordine = sort.active + '_' + sort.direction;\r\n    }\r\n    if (this.selectedTab === 0) {\r\n      this.ordinamentoColonna = ordine;\r\n      this.popolaTabella();\r\n    } else if (this.selectedTab === 1) {\r\n      this.ordinamentoColonna = ordine;\r\n      this.loadScarti();  // Per aggiornare la tabella scarti con ordinamento\r\n    }\r\n  }\r\n\r\n  handleRowClick(row: any) {\r\n    // TAB Gestione Utenti\r\n    // if (this.selectedTab === 0) {\r\n    //   this.utentiSrv.datiUtente$.next({row: row, selectedTab: this.selectedTab});\r\n    //   const dialogRef = this.dialog.open(ListaUtentiModificaComponent, {\r\n    //     disableClose: true,\r\n    // });\r\n    // // dialogRef.afterClosed().subscribe(result => {\r\n    // //   // se ho fatto modifiche ho impostato l'observable a null: lo sfrutto per ricaricare i dati aggiornati\r\n    // //   if (this.utentiSrv.datiUtente$.value == null) {\r\n    // //     this.inizializzaPaginazione();\r\n    // //   }\r\n    // //   // se non ho fatto modifiche l'observable contiene ancora l'ultimo record utente cliccato\r\n    // //   else {}\r\n    // // });\r\n    // }\r\n    // TAB Lista Scarti\r\n    // else /*if this.selectedTab === 1*/ {\r\n      this.utentiSrv.datiUtente$.next({row: row, selectedTab: this.selectedTab});\r\n      const dialogRef = this.dialog.open(ListaUtentiModificaComponent, {\r\n        disableClose: true,\r\n      });\r\n    // }\r\n  }\r\n\r\n  // FUNZIONI PAGINAZIONE TAB LISTA UTENTI\r\n  resetPaginazione() {\r\n    this.pageCurr = 1; //pagina corrente\r\n    this.base = 1; //base per creazione layout\r\n    this.layoutDim = 6; //elementi paginazione\r\n    this.layoutNumbers = []; //numeri del paginatore\r\n  }\r\n\r\n  inizializzaPaginazione() {\r\n    this.resetPaginazione();\r\n    this.utentiSrv.contaRicercaFiltrata(\r\n      this.matricolaCtrl.value,\r\n      this.ruoloSelezionato,\r\n      this.regioneCtrl.value,\r\n      this.sedeCtrl.value\r\n    ).subscribe((data: any) => {\r\n      this.elemNum = data.totale != null ? Number.parseInt(data.totale) : Number.parseInt(data.count);\r\n      // this.elemNum = Number.parseInt(data.totale);\r\n      this.pageNum = Math.ceil(this.elemNum / Number(this.pageDim)) || 1;\r\n      this.layoutNumbers = Array.from({ length: Math.min(6, this.pageNum) }, (_, i) => i + 1);\r\n      this.popolaTabella();\r\n    });\r\n  }\r\n\r\n  pageNext() {\r\n    if (this.pageCurr < this.pageNum) {\r\n      this.pageCurr++;\r\n      this.scorriLayout();\r\n      this.popolaTabella();\r\n    }\r\n  }\r\n\r\n  pagePrev() {\r\n    if (this.pageCurr > 1) {\r\n      this.pageCurr--;\r\n      this.scorriLayout();\r\n      this.popolaTabella();\r\n    }\r\n  }\r\n\r\n  setPageCurr(page: number) {\r\n    this.pageCurr = page;\r\n    this.popolaTabella();\r\n  }\r\n\r\n  //scorri layoutNumbers\r\n  scorriLayout() {\r\n    if (\r\n      this.pageCurr >= this.layoutNumbers[this.layoutNumbers.length - 1] &&\r\n      this.pageCurr < this.pageNum\r\n    ) {\r\n      this.base = this.base + (this.layoutDim - 1);\r\n      this.layoutNumbers = [];\r\n      for (let i = this.base; i < this.base + 6; i++) {\r\n        if (i <= this.pageNum) {\r\n          this.layoutNumbers.push(i);\r\n        }\r\n      }\r\n    } else if (this.pageCurr <= this.layoutNumbers[0] && this.pageCurr > 1) {\r\n      this.base = this.base - (this.layoutDim - 1);\r\n      this.layoutNumbers = [];\r\n      for (let i = this.base; i < this.base + 6; i++) {\r\n        if (i <= this.pageNum) {\r\n          this.layoutNumbers.push(i);\r\n        }\r\n      }\r\n    }\r\n    else if (this.pageCurr === 1) {\r\n      this.base = 1;\r\n    }\r\n  }\r\n\r\n  pageFirst() {\r\n    if (this.pageCurr > 1) {\r\n      this.pageCurr = 1;\r\n      this.base = 1;\r\n      this.layoutNumbers = Array.from({ length: Math.min(6, this.pageNum) }, (_, i) => i + 1);\r\n      this.popolaTabella();\r\n    }\r\n  }\r\n\r\n  pageLast() {\r\n    if (this.pageCurr < this.pageNum) {\r\n      this.pageCurr = this.pageNum;\r\n      this.base = Math.max(1, this.pageNum - 5);\r\n      this.layoutNumbers = Array.from({ length: 6 }, (_, i) => this.base + i).filter(\r\n        k => k <= this.pageNum\r\n      );\r\n      this.popolaTabella();\r\n    }\r\n  }\r\n\r\n  // FUNZIONI PAGINAZIONE TAB LISTA SCARTI\r\n  resetPaginazioneScarti() {\r\n    this.pageCurrScarti = 1; //pagina corrente\r\n    this.baseScarti = 1; //base per creazione layout\r\n    this.layoutDimScarti = 6; //elementi paginazione\r\n    this.layoutNumbersScarti = []; //numeri del paginatore\r\n  }\r\n\r\n  inizializzaPaginazioneScarti() {\r\n    this.resetPaginazioneScarti();\r\n    this.utentiSrv.contaScarti(\r\n\r\n    ).subscribe((data: any) => {\r\n      this.elemNumScarti = data.totale != null ? Number.parseInt(data.totale) : Number.parseInt(data.count)\r\n      // this.elemNumScarti = Number.parseInt(data.totale);\r\n      this.pageNumScarti = Math.ceil(this.elemNumScarti / Number(this.pageDimScarti)) || 1;\r\n      this.layoutNumbersScarti = Array.from({ length: Math.min(6, this.pageNumScarti) }, (_, i) => i + 1);\r\n      this.loadScarti();\r\n    });\r\n  }\r\n\r\n  pageNextScarti() {\r\n    if (this.pageCurrScarti < this.pageNumScarti) {\r\n      this.pageCurrScarti++;\r\n      this.scorriLayoutScarti();\r\n      this.loadScarti();\r\n    }\r\n  }\r\n\r\n  pagePrevScarti() {\r\n    if (this.pageCurrScarti > 1) {\r\n      this.pageCurrScarti--;\r\n      this.scorriLayoutScarti();\r\n      this.loadScarti();\r\n      // this.popolaTabella();\r\n    }\r\n  }\r\n\r\n  setPageCurrScarti(page: number) {\r\n    this.pageCurrScarti = page;\r\n    this.loadScarti();\r\n    // this.popolaTabella();\r\n  }\r\n\r\n  //scorri layoutNumbers\r\n  scorriLayoutScarti() {\r\n    if (\r\n      this.pageCurrScarti >= this.layoutNumbersScarti[this.layoutNumbersScarti.length - 1] &&\r\n      this.pageCurrScarti < this.pageNumScarti\r\n    ) {\r\n      this.baseScarti = this.baseScarti + (this.layoutDimScarti - 1);\r\n      this.layoutNumbersScarti = [];\r\n      for (let i = this.baseScarti; i < this.baseScarti + 6; i++) {\r\n        if (i <= this.pageNumScarti) {\r\n          this.layoutNumbersScarti.push(i);\r\n        }\r\n      }\r\n    } else if (this.pageCurrScarti <= this.layoutNumbersScarti[0] && this.pageCurrScarti > 1) {\r\n      this.baseScarti = this.baseScarti - (this.layoutDimScarti - 1);\r\n      this.layoutNumbersScarti = [];\r\n      for (let i = this.baseScarti; i < this.baseScarti + 6; i++) {\r\n        if (i <= this.pageNumScarti) {\r\n          this.layoutNumbersScarti.push(i);\r\n        }\r\n      }\r\n    }\r\n    else if (this.pageCurrScarti === 1) {\r\n      this.baseScarti = 1;\r\n    }\r\n  }\r\n\r\n  pageFirstScarti() {\r\n    if (this.pageCurrScarti > 1) {\r\n      this.pageCurrScarti = 1;\r\n      this.baseScarti = 1;\r\n      this.layoutNumbersScarti = Array.from({ length: Math.min(6, this.pageNumScarti) }, (_, i) => i + 1);\r\n      this.loadScarti();\r\n    }\r\n  }\r\n\r\n  pageLastScarti() {\r\n    if (this.pageCurrScarti < this.pageNumScarti) {\r\n      this.pageCurrScarti = this.pageNumScarti;\r\n      this.baseScarti = Math.max(1, this.pageNumScarti - 5);\r\n      this.layoutNumbersScarti = Array.from({ length: 6 }, (_, i) => this.baseScarti + i).filter(\r\n        k => k <= this.pageNumScarti\r\n      );\r\n      this.loadScarti();\r\n    }\r\n  }\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////\r\n  onFileSelected(event: any): void {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      // Controlla se il file è xls o xlsx\r\n      const extension = file.name.split('.').pop().toLowerCase();\r\n      if (extension !== 'xls' && extension !== 'xlsx') {\r\n        this.snackBar.open('Errore: puoi selezionare solo file .xlsx e .xls', 'Chiudi', {\r\n          duration: 3000,\r\n        });\r\n        this.selectedFile = null;\r\n      } else {\r\n        this.selectedFile = file;\r\n        this.snackBar.open('File inviato per l\\'elaborazione', 'Chiudi', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n    }\r\n    this.onUpload();\r\n  }\r\n\r\n  onUpload(): void {\r\n    if (this.selectedFile) {\r\n      this.utentiSrv.censimentoUtenti(this.selectedFile)\r\n        .subscribe(\r\n          (response) => {\r\n            this.openErrorDialog(response.message,'');\r\n            this.selectedFile = null;\r\n            this.inizializzaPaginazioneScarti();\r\n          },\r\n          (error) => {\r\n            this.errorMessage = 'Errore durante l\\'upload';\r\n            this.openErrorDialog(error,'Errore:');\r\n          }\r\n        );\r\n    } else {\r\n      this.snackBar.open('Nessun file selezionato o File selezionato del tipo sbagliato', 'Chiudi', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n  loadScarti() {\r\n    const ordinamento = this.ordinamentoColonna != null ? this.ordinamentoColonna : null\r\n    this.utentiSrv.getScarti(\r\n      Number.parseInt(this.pageDimScarti.trim()),\r\n      this.pageCurrScarti,\r\n      ordinamento!\r\n    ).subscribe((data: any[]) => {\r\n        this.dataSourceScarti = data;\r\n      }, error => {\r\n        this.errorMessage = 'Errore nel recupero degli scarti';\r\n      });\r\n  }\r\n\r\n  displayFieldData(content: string) {\r\n\r\n    if (content == null || content == undefined || content == '' || content.trim() == \"\") {\r\n      return \"-\"\r\n    }\r\n    else {\r\n      const data = content.split('T')[0]\r\n      const ora = content.split('T')[1]\r\n\r\n      const formatData = data.split('-').reverse().join('-').replace(/-/g, '/');\r\n      const formatOra = ora.split('.')[0]\r\n\r\n      return formatData + ' ' + formatOra;\r\n    }\r\n  }\r\n}\r\n\r\ninterface Ruolo {\r\n  id: number | null,\r\n  ruolo1: string,\r\n  descrizione: string\r\n}\r\n\r\ninterface Sede {\r\n  id: number | null;\r\n  nome: string;\r\n}\r\n","<page-header></page-header>\r\n\r\n<mat-tab-group [(selectedIndex)]=\"selectedTab\">\r\n\r\n  <!-- Tab per Gestione Utenti -->\r\n  <mat-tab label=\"Gestione Utenti\"> <br>\r\n    <form>\r\n\r\n      <div class=\"container-data\">\r\n        <!-- Settore/Materia -->\r\n        <mat-form-field class=\"child-data\">\r\n          <input matInput placeholder=\"Matricola\" [formControl]=\"matricolaCtrl\" maxlength=\"10\">\r\n          <button mat-icon-button matSuffix *ngIf=\"matricolaCtrl.value\" (click)=\"clearMatricola()\">\r\n            <mat-icon>clear</mat-icon>\r\n          </button>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"child-data\">\r\n          <input matInput placeholder=\"Ruolo\" [formControl]=\"ruoloCtrl\" [matAutocomplete]=\"autoRuolo\" (focus)=\"onFocus(ruoloCtrl)\">\r\n          <mat-autocomplete #autoRuolo=\"matAutocomplete\" (optionSelected)=\"ruoloSelected($event.option.value)\">\r\n            <mat-option *ngFor=\"let option of filteredRuolo | async\" [value]=\"option.ruolo1\">\r\n              {{option.descrizione}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <button mat-icon-button matSuffix *ngIf=\"ruoloCtrl.value\" (click)=\"clearRuolo()\">\r\n            <mat-icon>clear</mat-icon>\r\n          </button>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div class=\"container-data\">\r\n\r\n        <mat-form-field class=\"child-data\">\r\n          <input matInput placeholder=\"Regione\" [formControl]=\"regioneCtrl\" [matAutocomplete]=\"autoRegione\" (focus)=\"onFocus(regioneCtrl)\">\r\n          <mat-autocomplete #autoRegione=\"matAutocomplete\" (optionSelected)=\"regioneSelected($event.option.value)\">\r\n            <mat-option *ngFor=\"let option of filteredRegione | async\" [value]=\"option.id\">\r\n              {{showFieldSede(option.id!, option.nome)}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <button mat-icon-button matSuffix *ngIf=\"regioneCtrl.value\" (click)=\"clearRegione()\">\r\n            <mat-icon>clear</mat-icon>\r\n          </button>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"child-data\">\r\n\r\n          <input matInput placeholder=\"Province\" [formControl]=\"sedeCtrl\" [matAutocomplete]=\"autoSede\" (focus)=\"onFocus(sedeCtrl)\">\r\n\r\n          <mat-autocomplete #autoSede=\"matAutocomplete\" (optionSelected)=\"sedeSelected($event.option.value)\">\r\n            <mat-option *ngFor=\"let option of filteredSede | async \" [value]=\"option.id!\">\r\n              {{showFieldSede(option.id!, option.nome)}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n\r\n          <button mat-icon-button matSuffix *ngIf=\"sedeCtrl.value\" (click)=\"clearSede()\">\r\n            <mat-icon>clear</mat-icon>\r\n          </button>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"container-buttons\">\r\n        <div class=\"container\">\r\n          <input type=\"file\" class=\"custom-file-input\" accept=\".xls, .xlsx\" (change)=\"onFileSelected($event)\" #fileUploader style=\"display:none\">\r\n\r\n          <button mat-button class=\"btn-scarica\" (click)=\"selectedFile ? onUpload() : fileUploader.click()\">\r\n            <mat-icon>cloud_upload</mat-icon>\r\n            Censimento Utenti\r\n          </button>\r\n        </div>\r\n\r\n        <button (click)=\"ricercaFiltrata()\" mat-button class=\"child-buttons child-buttons-conferma\">\r\n          Cerca\r\n        </button>\r\n\r\n        <button (click)=\"resetRicerca()\" mat-button class=\"child-buttons child-buttons-chiudi\">\r\n          Annulla\r\n        </button>\r\n      </div>\r\n      <br>\r\n      <p class=\"section-title\">Ricerca Lista Utenti | {{dataSourceFiltered.length }} risultati su {{elemNum}}</p>\r\n      <div *ngIf=\"dataSourceFiltered.length > 0; else nessunRisultato\">\r\n        <table mat-table matSort (matSortChange)=\"sortData($event)\" [dataSource]=\"dataSourceFiltered\" class=\"mat-elevation-z8\">\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"handleRowClick(row)\"></tr>\r\n\r\n          <ng-container matColumnDef=\"matricola\">\r\n            <th mat-header-cell mat-sort-header=\"matricola\" *matHeaderCellDef> Matricola </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{showField(element.matricola)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"cognome\">\r\n            <th mat-header-cell mat-sort-header=\"cognome\" *matHeaderCellDef> Cognome </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{showField(element.cognome)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"nome\">\r\n            <th mat-header-cell mat-sort-header=\"nome\" *matHeaderCellDef> Nome </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{showField(element.nome)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell mat-sort-header=\"email\" *matHeaderCellDef> Email </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{showField(element.email)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"accountWindows\">\r\n            <th mat-header-cell mat-sort-header=\"account\" *matHeaderCellDef> Account </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{showField(element.username)}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"codiceSede\">\r\n            <th mat-header-cell mat-sort-header=\"sede\" *matHeaderCellDef> Sede </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              <span\r\n                    (click)=\"showAllFieldSedi(element.sedeDTO)\">{{displayFieldSede(element.sedeDTO)}}</span>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"ruoli\">\r\n            <th mat-header-cell mat-sort-header=\"ruolo\" *matHeaderCellDef> Ruolo </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              <span (click)=\"showAllFieldRuoli(element.ruoloDTO)\">{{displayFieldRuolo(element.ruoloDTO)}}</span>\r\n            </td>\r\n          </ng-container>\r\n        </table>\r\n      </div>\r\n\r\n      <div *ngIf=\"dataSourceFiltered.length > 0\" class=\"mat-paginator-mod\">\r\n        <div class=\"pagination\">\r\n          <a *ngIf=\"pageCurr > 1\" (click)=\"pageFirst()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">first_page</mat-icon></a>\r\n          <a (click)=\"pagePrev()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">keyboard_arrow_left</mat-icon></a>\r\n          <a *ngFor=\"let ln of layoutNumbers\" [ngClass]=\"ln === pageCurr ? 'active' : ''\" (click)=\"setPageCurr(ln)\">{{ln}}</a>\r\n          <a (click)=\"pageNext()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">keyboard_arrow_right</mat-icon></a>\r\n          <a *ngIf=\"pageCurr < pageNum\" (click)=\"pageLast()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">last_page</mat-icon></a>\r\n        </div>\r\n        <div class=\"paginator-numelem\">\r\n          <mat-select class=\"paginator-numelem-select\" name=\"numElem\" [(ngModel)]=\"pageDim\">\r\n            <mat-option *ngFor=\"let num of numPages\" value=\"{{num}}\"\r\n                        (click)=\"inizializzaPaginazione()\">{{num}}</mat-option>\r\n          </mat-select>\r\n        </div>\r\n        <div class=\"paginator-info\">Pagina {{pageCurr}} di {{pageNum}}</div>\r\n      </div>\r\n\r\n      <ng-template #nessunRisultato>\r\n        <br>\r\n        <br>\r\n        <mat-card>\r\n          <div class=\"rotation-div\">\r\n            <h1 class=\"nessuna-corr\">\r\n              <mat-icon class=\"rotation\">cached</mat-icon>\r\n            </h1>\r\n          </div>\r\n        </mat-card>\r\n      </ng-template>\r\n    </form>\r\n  </mat-tab>\r\n\r\n  <!-- Tab per Lista Scarti -->\r\n  <mat-tab label=\"Lista Scarti\"> <br>\r\n    <p class=\"section-title\">Lista Utenti Scartati | {{dataSourceScarti.length }} risultati su {{elemNumScarti}}</p>\r\n    <div *ngIf=\"dataSourceScarti.length > 0; else nessunScarto\">\r\n      <table mat-table matSort (matSortChange)=\"sortData($event)\" [dataSource]=\"dataSourceScarti\" class=\"mat-elevation-z8\">\r\n        <!-- Definizione colonne per lista scarti -->\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumnsScarti\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumnsScarti;\" (click)=\"handleRowClick(row)\"></tr>\r\n\r\n        <ng-container matColumnDef=\"dataScarto\">\r\n          <th mat-header-cell mat-sort-header=\"dataScarto\" *matHeaderCellDef> Data Scarto </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{displayFieldData(element.dataScarto)}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"matricola\">\r\n          <th mat-header-cell mat-sort-header=\"matricola\" *matHeaderCellDef> Matricola </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{showField(element.matricola)}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"motivazioneScarto\">\r\n          <th mat-header-cell mat-sort-header=\"motivazioneScarto\" *matHeaderCellDef> Motivazione Scarto </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{showField(element.motivazioneScarto)}} </td>\r\n        </ng-container>\r\n      </table>\r\n    </div>\r\n\r\n    <div *ngIf=\"dataSourceScarti.length > 0\" class=\"mat-paginator-mod\">\r\n      <div class=\"pagination\">\r\n        <a *ngIf=\"pageCurrScarti > 1\" (click)=\"pageFirstScarti()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">first_page</mat-icon></a>\r\n        <a (click)=\"pagePrevScarti()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">keyboard_arrow_left</mat-icon></a>\r\n        <a *ngFor=\"let ln of layoutNumbersScarti\" [ngClass]=\"ln === pageCurrScarti ? 'active' : ''\" (click)=\"setPageCurrScarti(ln)\">{{ln}}</a>\r\n        <a (click)=\"pageNextScarti()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">keyboard_arrow_right</mat-icon></a>\r\n        <a *ngIf=\"pageCurrScarti < pageNumScarti\" (click)=\"pageLastScarti()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">last_page</mat-icon></a>\r\n      </div>\r\n      <div class=\"paginator-numelem\">\r\n        <mat-select class=\"paginator-numelem-select\" name=\"numElemScarti\" [(ngModel)]=\"pageDimScarti\">\r\n          <mat-option *ngFor=\"let numScarti of numPagesScarti\" value=\"{{numScarti}}\"\r\n                      (click)=\"inizializzaPaginazioneScarti()\">{{numScarti}}</mat-option>\r\n        </mat-select>\r\n      </div>\r\n      <div class=\"paginator-info\">Pagina {{pageCurrScarti}} di {{pageNumScarti}}</div>\r\n    </div>\r\n\r\n    <ng-template #nessunScarto>\r\n      <br>\r\n      <br>\r\n      <mat-card>\r\n        <div class=\"rotation-div\">\r\n          <h1 class=\"nessuna-corr\">\r\n            <mat-icon class=\"rotation\">cached</mat-icon>\r\n          </h1>\r\n        </div>\r\n      </mat-card>\r\n    </ng-template>\r\n  </mat-tab>\r\n\r\n</mat-tab-group>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { error } from '@angular/compiler/src/util';\r\nimport { Component, Inject, OnInit, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { MatDialogRef} from '@angular/material/dialog';\r\nimport { Sort } from '@angular/material/sort';\r\nimport { LogsService } from '@shared/services/logs.service';\r\n@Component({\r\n  selector: 'app-log-applicativo-dialog',\r\n  templateUrl: './log-applicativo-dialog.component.html',\r\n  styleUrls: ['./log-applicativo-dialog.component.scss'],\r\n})\r\nexport class LogApplicativoDialogComponent implements OnInit {\r\n  constructor(public logSrv: LogsService,public dialogRef: MatDialogRef<LogApplicativoDialogComponent>) {}\r\n\r\n  dataSource2: any[] = [];\r\n  ordine = '';\r\n  result: any | undefined;\r\n  IsHidden= true;\r\n\r\n  ngOnInit(): void {\r\n    this.popolaRis();\r\n  }\r\n\r\n  popolaRis() {\r\n    this.logSrv.getLogsId(this.logSrv.idAttivo).subscribe(data => {\r\n      this.result = data;\r\n      this.logSrv.idAttivo = this.result.logSrv.id;\r\n    });\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.ordine = '';\r\n    if (sort.direction) this.ordine = sort.active + '_' + sort.direction;\r\n  }\r\n\r\n  vediStack(){\r\n    if(this.IsHidden==true) {\r\n      this.IsHidden=false;\r\n    }else {\r\n  this.IsHidden=true;\r\n    }\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"result; else nessunRisultato\">\r\n  <mat-dialog-content align=\"center\">\r\n    <h3>Informazioni di dettaglio</h3>\r\n\r\n    <hr>\r\n    <table class=\"table\">\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <p class=\"title\"><mat-icon>account_circle</mat-icon>&nbsp;Account</p>\r\n            <p class=\"content\">{{result.account}}</p>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <p class=\"title\"><mat-icon>person_pin_circle</mat-icon>&nbsp;Matricola</p>\r\n            <p class=\"content\">{{result.matricola}}</p>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <p class=\"title\"><mat-icon>warning</mat-icon>&nbsp;Messaggio di\r\n              Eccezione</p>\r\n            <p class=\"content\">{{result.messaggio}} </p>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <p class=\"title\"><mat-icon>date_range</mat-icon>&nbsp; Data Eccezione</p>\r\n            <p class=\"content\">{{ result.creato | date: 'dd/MM/yyyy HH:mm:ss'}}</p>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n        <td>\r\n          <p class=\"title\"><mat-icon> not_listed_location</mat-icon>&nbsp;Stack dell' Eccezione</p>\r\n          <button id=\"bottoneDrop\" type=\"btn\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\" (click)=\"vediStack()\"><mat-icon>swap_vert</mat-icon></button>\r\n          <div id=\"stack\" class=\"dropdown-content\" [hidden]=\"IsHidden\" align=\"center\">\r\n            <p class=\"content\">{{result.stacktrace}}</p>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n      <mat-dialog-actions align=\"end\">\r\n        <button mat-button mat-dialog-close class=\"btn-back\">\r\n          <mat-icon>arrow_back</mat-icon>Chiudi\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </table>\r\n  </mat-dialog-content>\r\n</div>\r\n<ng-template #nessunRisultato>\r\n  <ng-template #nessunRisultato>\r\n    <h1 class=\"nessuna-corr\"><mat-icon class=\"rotation\">cached</mat-icon></h1>\r\n   </ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Sort } from '@angular/material/sort';\r\nimport { LogsService } from '@shared/services/logs.service';\r\nimport { LogApplicativoDialogComponent } from '../log-applicativo-dialog/log-applicativo-dialog.component';\r\nimport { MtxDialog } from '@ng-matero/extensions/dialog';\r\nimport { TipiLogApplicativi } from '@shared/models/tipiLogApplicativi.model';\r\nimport * as moment from 'moment';\r\nimport { PopupErroreInserimentoComponent } from 'app/routes/popup-errore-inserimento/popup-errore-inserimento.component';\r\nimport { map, Observable, startWith } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-log-applicativo',\r\n  templateUrl: './log-applicativo.component.html',\r\n  styleUrls: ['./log-applicativo.component.scss'],\r\n})\r\nexport class LogApplicativoComponent implements OnInit {\r\n  list: any[] = [];\r\n  list2: any[] = [];\r\n  tipiLogApp: TipiLogApplicativi[] = [];\r\n  listFiltered: any[] = [];\r\n  listFiltered2: any[] = [];\r\n  isLoading = true;\r\n  isLoading2 = true;\r\n  ricercaAtt = false;\r\n  ricercaAtt2 = false;\r\n\r\n  displayedColumns: string[] = ['account', 'creato', 'matricola', 'evento', 'messaggio'];\r\n  dataSource1: any[] = [];\r\n  dataSourceFiltered: any[] = [];\r\n  filtroStringa = '';\r\n  ordine: string | null = null;\r\n  displayedColumns2: string[] = ['account', 'creato', 'matricola', 'messaggio', 'evento'];\r\n  dataSource2: any[] = [];\r\n  dataSourceFiltered2: any[] = [];\r\n  filtroStringa2 = '';\r\n  ordine2: string | null = null;\r\n\r\n  oldStartDate: any;\r\n  oldEndDate: any;\r\n  oldStartDate2: any;\r\n  oldEndDate2: any;\r\n\r\n  constructor(\r\n    public dialogAlert: MtxDialog,\r\n    private logSrv: LogsService,\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private formBuilder2: FormBuilder\r\n  ) {}\r\n\r\n  tipoLogCtrl = new FormControl();\r\n  filteredTipiLog: Observable<TipiLogApplicativi[]> | undefined;\r\n  filtroperTipiLog: string | null = null;\r\n\r\n  /*  parametri tab eccezioni */\r\n  formRicerca = this.formBuilder.group({\r\n    dataInizio: null,\r\n    dataFine: null,\r\n    dimensione: -1,\r\n    idAccount: '',\r\n    idMatricola: '',\r\n    pagina: -1,\r\n  });\r\n\r\n  /* parametri tab eventi */\r\n  formRicerca2 = this.formBuilder2.group({\r\n    dataInizio2: null,\r\n    dataFine2: null,\r\n    dimensione2: -1,\r\n    idAccount2: '',\r\n    idMatricola2: '',\r\n    tipoLog: this.tipoLogCtrl,\r\n    pagina2: -1,\r\n  });\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.ricercaAtt = false;\r\n    this.ricercaAtt2 = false;\r\n    this.isLoading = true;\r\n    this.isLoading2 = true;\r\n    this.tipiLogApplicativi();\r\n\r\n    await this.updateDates1(null, null);\r\n    await this.updateDates2(null, null);\r\n\r\n    this.inizializzaPaginazione();\r\n    this.inizializzaPaginazione2();\r\n\r\n    this.filteredTipiLog = this.tipoLogCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterTipiLog(value))\r\n    );\r\n  }\r\n\r\n  private _filterTipiLog(value: string): TipiLogApplicativi[] {\r\n    const filterValue = typeof value === 'string' ? value.toLowerCase() : '';\r\n    return this.tipiLogApp.filter(option =>\r\n      option.nome.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n    tipoLogSelected(selectedTipo: TipiLogApplicativi) {\r\n      if (selectedTipo && selectedTipo.id !== -1) {\r\n        this.tipoLogCtrl.setValue(selectedTipo);\r\n        this.formRicerca2.patchValue({\r\n          tipoLog: selectedTipo.id // Imposta solo l'ID del tipo di log\r\n        });\r\n      } else {\r\n        this.clearTipoLog();\r\n      }\r\n    }\r\n    displayTipoLog(option: TipiLogApplicativi | number): string {\r\n      // Controlla se `tipiLogApp` è definita prima di utilizzare `.find()`\r\n      if (!this.tipiLogApp || this.tipiLogApp.length === 0) {\r\n        return '';\r\n      }\r\n\r\n      if (typeof option === 'number') {\r\n        // Cerca il nome del tipo di log basato sull'ID\r\n        const selectedOption = this.tipiLogApp.find(tipo => tipo.id === option);\r\n        return selectedOption ? selectedOption.nome : '';\r\n      }\r\n\r\n      // Se viene passato un oggetto, restituisci direttamente il nome\r\n      return option ? option.nome : '';\r\n    }\r\n\r\n\r\n  clearTipoLog() {\r\n    this.tipoLogCtrl.setValue(null);\r\n    this.formRicerca2.patchValue({ tipoLog: null });\r\n  }\r\n\r\n  onFocus(ctrl: FormControl): void {\r\n    if (!ctrl.value || ctrl.value === '') {\r\n      ctrl.setValue(' ');\r\n      setTimeout(() => ctrl.setValue(''), 1);\r\n    }\r\n  }\r\n\r\n  /* / parametri */\r\n\r\n  //----------------paginazione config--------------------------\r\n  pageDim = '20'; //numero di righe per pagina\r\n  pageCurr = 1; //pagina corrente\r\n  pageNum = 0; //numero di pagine\r\n  elemNum = 0; //numero di elementi totali\r\n  base = 1; //base per creazione layout\r\n  layoutDim = 6; //elementi paginazione\r\n  layoutNumbers: number[] = []; //numeri del paginatore\r\n  numPages = ['5', '10', '20', '50', '100']; //possibili righe di paginazione\r\n\r\n  //----------------paginazione config TAB EVENTI--------------------------\r\n  pageDim2 = '20'; //numero di righe per pagina\r\n  pageCurr2 = 1; //pagina corrente\r\n  pageNum2 = 0; //numero di pagine\r\n  elemNum2 = 0; //numero di elementi totali\r\n  base2 = 1; //base per creazione layout\r\n  layoutDim2 = 6; //elementi paginazione\r\n  layoutNumbers2: number[] = []; //numeri del paginatore\r\n  numPages2 = ['5', '10', '20', '50', '100']; //possibili righe di paginazione\r\n\r\n  sortData(sort: Sort) {\r\n    this.ordine = '';\r\n    if (sort.direction) {\r\n      this.ordine = sort.active + '_' + sort.direction;\r\n    }\r\n    this.popolaRisultato();\r\n  }\r\n\r\n  resetPaginazione() {\r\n    this.pageCurr = 1; //pagina corrente\r\n    this.base = 1; //base per creazione layout\r\n    this.layoutDim = 6; //elementi paginazione\r\n    this.layoutNumbers = []; //numeri del paginatore\r\n  }\r\n\r\n  inizializzaPaginazione() {\r\n    this.resetPaginazione();\r\n\r\n    const datai = this.formatDate(this.formRicerca.value.dataInizio);\r\n    const dataf = this.formatDate(this.formRicerca.value.dataFine);\r\n    this.logSrv\r\n      .contaErrori(this.formRicerca.value.idAccount,this.formRicerca.value.idMatricola,datai,dataf).subscribe(\r\n        data => {\r\n        this.elemNum = data;\r\n        this.pageNum = Math.ceil(this.elemNum / Number(this.pageDim)) || 1;\r\n        this.layoutNumbers = Array.from({ length: Math.min(6, this.pageNum) }, (_, i) => i + 1);\r\n        this.popolaRisultato();\r\n      });\r\n  }\r\n\r\n  //scorri layoutNumbers\r\n  scorriLayout() {\r\n    if (this.pageCurr >= this.layoutNumbers[this.layoutNumbers.length - 1] && this.pageCurr < this.pageNum) {\r\n      this.base = this.base + (this.layoutDim - 1);\r\n      this.layoutNumbers = [];\r\n      for (let i = this.base; i < this.base + 6 && i <= this.pageNum; i++) {\r\n        this.layoutNumbers.push(i);\r\n      }\r\n    } else if (this.pageCurr <= this.layoutNumbers[0] && this.pageCurr > 1) {\r\n      this.base = Math.max(this.base - (this.layoutDim - 1), 1);\r\n      this.layoutNumbers = [];\r\n      for (let i = this.base; i < this.base + 6 && i <= this.pageNum; i++) {\r\n        this.layoutNumbers.push(i);\r\n      }\r\n    }\r\n    else if (this.pageCurr === 1) {\r\n      this.base = 1;\r\n    }\r\n  }\r\n\r\n  scorriLayout2() {\r\n    if (this.pageCurr2 >= this.layoutNumbers2[this.layoutNumbers2.length - 1] && this.pageCurr2 < this.pageNum2) {\r\n      this.base2 = this.base2 + (this.layoutDim2 -1)\r\n      this.layoutNumbers2 = [];\r\n      for (let i = this.base2; i < this.base2 + 6 && i <= this.pageNum2; i++) {\r\n        this.layoutNumbers2.push(i);\r\n      }\r\n    } else if (this.pageCurr2 <= this.layoutNumbers2[0] && this.pageCurr2 > 1) {\r\n      this.base2 = Math.max(this.base2 - (this.layoutDim2 - 1), 1);\r\n      this.layoutNumbers2 = [];\r\n      for (let i = this.base2; i < this.base2 + 6 && i <= this.pageNum2; i++) {\r\n        this.layoutNumbers2.push(i);\r\n      }\r\n    }\r\n    else if (this.pageCurr2 === 1) {\r\n      this.base2 = 1;\r\n    }\r\n  }\r\n\r\n  pageNext() {\r\n    if (this.pageCurr < this.pageNum) {\r\n      this.pageCurr++;\r\n      this.scorriLayout();\r\n      this.popolaRisultato();\r\n    }\r\n  }\r\n\r\n  pagePrev() {\r\n    if (this.pageCurr > 1) {\r\n      this.pageCurr--;\r\n      this.scorriLayout();\r\n      this.popolaRisultato();\r\n    }\r\n  }\r\n\r\n  pageFirst() {\r\n    if (this.pageCurr > 1) {\r\n      this.pageCurr = 1;\r\n      this.base = 1;\r\n      this.layoutNumbers = Array.from({ length: Math.min(6, this.pageNum) }, (_, i) => i + 1);\r\n      this.popolaRisultato();\r\n    }\r\n  }\r\n\r\n  pageLast() {\r\n    if (this.pageCurr < this.pageNum) {\r\n      this.pageCurr = this.pageNum;\r\n      this.base = Math.max(1, this.pageNum - 5);\r\n      this.layoutNumbers = Array.from({ length: 6 }, (_, i) => this.base + i).filter(\r\n        k => k <= this.pageNum\r\n      );\r\n      this.popolaRisultato();\r\n    }\r\n  }\r\n\r\n  setPageCurr(page: number) {\r\n    this.pageCurr = page;\r\n    this.popolaRisultato();\r\n  }\r\n\r\n  popolaTabella() {\r\n    this.logSrv.getLogsParam(this.pageDim, this.ordine, this.pageCurr - 1).subscribe(data => {\r\n      this.dataSource1 = data;\r\n      this.dataSourceFiltered = data;\r\n    });\r\n  }\r\n\r\n  azzeraFiltro() {\r\n    this.filtroStringa = '';\r\n    this.dataSourceFiltered = this.dataSource1;\r\n  }\r\n\r\n  openDialog(id: number) {\r\n    this.logSrv.idAttivo = id;\r\n    this.dialog.open(LogApplicativoDialogComponent).afterClosed().subscribe(() => {\r\n      this.popolaRisultato();\r\n    });\r\n  }\r\n\r\n  openErrorDialog(message: string, titolo: string): void {\r\n    this.dialog.open(PopupErroreInserimentoComponent, {\r\n      data: { message: message, titolo: titolo },\r\n    });\r\n  }\r\n\r\n  popolaRisultato() {\r\n    const datai = this.formatDate(this.formRicerca.value.dataInizio);\r\n    const dataf = this.formatDate(this.formRicerca.value.dataFine);\r\n\r\n    this.isLoading = true;\r\n    this.logSrv\r\n      .getLogFilterByStacktrace(\r\n        this.formRicerca.value.idAccount,\r\n        this.formRicerca.value.idMatricola,\r\n        datai,\r\n        dataf,\r\n        this.pageDim,\r\n        this.ordine,\r\n        this.pageCurr - 1\r\n      )\r\n      .subscribe((data: any) => {\r\n        this.list = data;\r\n        this.listFiltered = data;\r\n        if (!(this.listFiltered.length > 0) /*&& this.ricercaAtt*/) {\r\n          this.dialogAlert.alert(`Nessun risultato per il filtro selezionato!`);\r\n          //this.ricercaAtt = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  async resetRicerca() {\r\n    // Resetta il form ai valori iniziali\r\n    this.formRicerca.reset({\r\n      dataInizio: null,\r\n      dataFine: null,\r\n      idAccount: '',\r\n      idMatricola: '',\r\n    });\r\n\r\n    await this.updateDates1(null, null);\r\n\r\n    // Reimposta la lista e la ricerca attiva\r\n    this.list = [];\r\n    this.isLoading = true;\r\n    this.ricercaAtt = false;\r\n\r\n    // Reimposta la paginazione\r\n    this.pageCurr = 1; // Torna alla prima pagina\r\n    this.inizializzaPaginazione(); // Ripopola la tabella con i dati completi\r\n  }\r\n\r\n  filtroRicerca() {\r\n    this.listFiltered = this.list.filter(x =>\r\n      x.matricola.toLocaleLowerCase().includes(this.formRicerca.get('idMatricola')?.value.toLocaleLowerCase()) &&\r\n      x.account.toLocaleLowerCase().includes(this.formRicerca.get('idAccount')?.value.toLocaleLowerCase()));\r\n  }\r\n\r\n  //###############################################################################################\r\n  // ---------------------------- INIZIO TAB EVENTI -----------------------------------------------\r\n  //###############################################################################################\r\n\r\n  sortData2(sort2: Sort) {\r\n    this.ordine2 = '';\r\n    if (sort2.direction) {\r\n      this.ordine2 = sort2.active + '_' + sort2.direction;\r\n    }\r\n    this.popolaTabella2();\r\n  }\r\n\r\n  resetPaginazione2() {\r\n    this.pageCurr2 = 1; //pagina corrente\r\n    this.base2 = 1; //base per creazione layout\r\n    this.layoutDim2 = 6; //elementi paginazione\r\n    this.layoutNumbers2 = []; //numeri del paginatore\r\n  }\r\n\r\n  inizializzaPaginazione2() {\r\n    this.resetPaginazione2();\r\n\r\n    const formatDate = (date: any) => (date ? moment(date).format('MM/DD/YYYY') : '');\r\n    const datai2 = formatDate(this.formRicerca2.value.dataInizio2);\r\n    const dataf2 = formatDate(this.formRicerca2.value.dataFine2);\r\n    // Ottieni solo l'ID del tipo di log\r\n    const tipoLogId = this.formRicerca2.value.tipoLog;\r\n    this.logSrv\r\n      .contaEventi(\r\n        this.formRicerca2.value.idAccount2,\r\n        this.formRicerca2.value.idMatricola2,\r\n        datai2,\r\n        dataf2,\r\n        tipoLogId\r\n      )\r\n      .subscribe(data2 => {\r\n        this.elemNum2 = data2;\r\n        this.pageNum2 = Math.ceil(this.elemNum2 / Number(this.pageDim2)) || 1;\r\n        this.layoutNumbers2 = Array.from({ length: Math.min(6, this.pageNum2) }, (_, i) => i + 1);\r\n        this.popolaTabella2();\r\n      });\r\n  }\r\n\r\n  formatDate(date: any): string {\r\n    return date ? moment(date).format('MM/DD/YYYY') : '';\r\n  }\r\n\r\n  pageNext2() {\r\n    if (this.pageCurr2 < this.pageNum2) {\r\n      this.pageCurr2++;\r\n      this.scorriLayout2();\r\n      this.popolaTabella2();\r\n    }\r\n  }\r\n\r\n  pagePrev2() {\r\n    if (this.pageCurr2 > 1) {\r\n      this.pageCurr2--;\r\n      this.scorriLayout2();\r\n      this.popolaTabella2();\r\n    }\r\n  }\r\n\r\n  setPageCurr2(page2: number) {\r\n    this.pageCurr2 = page2;\r\n    this.popolaTabella2();\r\n  }\r\n\r\n  pageFirst2() {\r\n    if (this.pageCurr2 > 1) {\r\n      this.pageCurr2 = 1;\r\n      this.base2 = 1;\r\n      this.layoutNumbers2 = Array.from({ length: Math.min(6, this.pageNum2) }, (_, i) => i + 1);\r\n      this.popolaTabella2();\r\n    }\r\n  }\r\n\r\n  pageLast2() {\r\n    if (this.pageCurr2 < this.pageNum2) {\r\n      this.pageCurr2 = this.pageNum2;\r\n      this.base2 = Math.max(1, this.pageNum2 - 5);\r\n      this.layoutNumbers2 = Array.from({ length: 6 }, (_, i) => this.base2 + i).filter(\r\n        k => k <= this.pageNum2\r\n      );\r\n      this.popolaTabella2();\r\n    }\r\n  }\r\n\r\n  popolaTabella2() {\r\n\r\n    const datai2 = ((date: any) => (date ? this.formatDate(date) : ''))(this.formRicerca2.value.dataInizio2);\r\n    const dataf2 = ((date: any) => (date ? this.formatDate(date) : ''))(this.formRicerca2.value.dataFine2);\r\n\r\n    this.isLoading2 = true;\r\n    this.logSrv.getLogs(\r\n      this.formRicerca2.value.idAccount2, this.formRicerca2.value.idMatricola2,\r\n      datai2, dataf2, this.formRicerca2.value.tipoLog, this.pageDim2,\r\n      this.ordine2, this.pageCurr2 - 1).subscribe(\r\n        (data: any) => {\r\n          this.list2 = data;\r\n          this.listFiltered2 = data;\r\n          if (!(this.listFiltered2.length > 0) && this.ricercaAtt2) {\r\n            this.dialogAlert.alert(`Nessun risultato per il filtro selezionato!`);\r\n            this.ricercaAtt2 = false;\r\n          }\r\n        this.isLoading2 = false;\r\n      });\r\n  }\r\n\r\n  filtroRicercaEventi() {\r\n    this.listFiltered2 = this.list2.filter(\r\n      x =>\r\n        x.matricola.toLocaleLowerCase().includes(this.formRicerca2.get('idMatricola2')?.value.toLocaleLowerCase()) &&\r\n        x.account.toLocaleLowerCase().includes(this.formRicerca2.get('idAccount2')?.value.toLocaleLowerCase())\r\n    );\r\n  }\r\n\r\n  async resetRicercaEventi() {\r\n    // Resetta il form ai valori iniziali\r\n    this.formRicerca2.reset({\r\n      dataInizio2: null,\r\n      dataFine2: null,\r\n      idAccount2: '',\r\n      idMatricola2: '',\r\n      tipoLog: null, // Resetta anche il tipo di evento\r\n    });\r\n\r\n      await this.updateDates2(null, null);\r\n\r\n      // Reimposta la lista e la ricerca attiva\r\n      this.list2 = [];\r\n      this.isLoading2 = true;\r\n      this.ricercaAtt2 = false;\r\n\r\n      // Reimposta la paginazione\r\n      this.pageCurr2 = 1; // Torna alla prima pagina\r\n      this.inizializzaPaginazione2(); // Ripopola la tabella con i dati completi\r\n    }\r\n\r\n  tipiLogApplicativi() {\r\n    this.logSrv.getTipiLogApplicativi().subscribe((data: TipiLogApplicativi[]) => {\r\n      // Aggiungi un oggetto vuoto\r\n    const emptyObject: TipiLogApplicativi = {\r\n      id: -1, nome: '',\r\n      creato: new Date(),\r\n      aggiornato: new Date()\r\n    };\r\n      //this.tipiLogApp = data;\r\n      this.tipiLogApp = [emptyObject, ...data];\r\n    });\r\n  }\r\n\r\n  async updateDates1(dataInizio: Date | null, dataFine: Date | null): Promise<void> {\r\n    const result = await this.updateDates(\r\n      dataInizio,\r\n      dataFine,\r\n      12,\r\n      this.formRicerca,\r\n      'dataInizio',\r\n      'dataFine',\r\n      this.oldStartDate,\r\n      this.oldEndDate\r\n    );\r\n    this.oldStartDate = result.oldStartDate;\r\n    this.oldEndDate = result.oldEndDate;\r\n  }\r\n\r\n  async updateDates2(dataInizio2: Date | null, dataFine2: Date | null): Promise<void> {\r\n    const result = await this.updateDates(\r\n      dataInizio2,\r\n      dataFine2,\r\n      6,\r\n      this.formRicerca2,\r\n      'dataInizio2',\r\n      'dataFine2',\r\n      this.oldStartDate2,\r\n      this.oldEndDate2\r\n    );\r\n    this.oldStartDate2 = result.oldStartDate;\r\n    this.oldEndDate2 = result.oldEndDate;\r\n  }\r\n  private async updateDates(\r\n    dataInizio: Date | null,\r\n    dataFine: Date | null,\r\n    maxMonths: number,\r\n    form: FormGroup,\r\n    dataInizioField: string,\r\n    dataFineField: string,\r\n    oldStartDate: Date | null,\r\n    oldEndDate: Date | null\r\n  ): Promise<{ oldStartDate: Date | null; oldEndDate: Date | null }> {\r\n    const today = moment().startOf('day');\r\n    let newStartDate = dataInizio ? moment(dataInizio).startOf('day') : null;\r\n    let newEndDate = dataFine ? moment(dataFine).startOf('day') : null;\r\n\r\n    if (!newStartDate && !newEndDate) {\r\n      newEndDate = today.clone();\r\n      newStartDate = today.clone().subtract(maxMonths, 'months');\r\n      form.patchValue({\r\n        [dataInizioField]: newStartDate.toDate(),\r\n        [dataFineField]: newEndDate.toDate(),\r\n      });\r\n    } else if (!newStartDate && newEndDate) {\r\n      const oldStartDateMoment = oldStartDate ? moment(oldStartDate).startOf('day') : null;\r\n      const startDateForDiff = oldStartDateMoment || newEndDate.clone().subtract(maxMonths, 'months');\r\n      const diffDays = newEndDate.diff(startDateForDiff, 'days');\r\n      const diffMonths = newEndDate.diff(startDateForDiff, 'months', true);\r\n\r\n      if (diffDays < 0) {\r\n        form.patchValue({\r\n          [dataFineField]: oldEndDate,\r\n          [dataInizioField]: oldStartDate,\r\n        });\r\n        this.openErrorDialog('La data fine inserita è antecedente alla data inizio.', 'Errore:');\r\n      } else if (diffMonths > maxMonths) {\r\n        newStartDate = newEndDate.clone().subtract(maxMonths, 'months');\r\n        form.patchValue({\r\n          [dataInizioField]: newStartDate.toDate(),\r\n          [dataFineField]: newEndDate.toDate(),\r\n        });\r\n        this.openErrorDialog(`Range di tempo massimo visualizzabile di ${maxMonths} mesi.`, 'Errore:');\r\n      } else {\r\n        form.patchValue({\r\n          [dataFineField]: newEndDate.toDate(),\r\n        });\r\n      }\r\n    } else if (newStartDate && !newEndDate) {\r\n      const oldEndDateMoment = oldEndDate ? moment(oldEndDate).startOf('day') : null;\r\n      const endDateForDiff = oldEndDateMoment || today.clone();\r\n      const diffDays = endDateForDiff.diff(newStartDate, 'days');\r\n      const diffMonths = endDateForDiff.diff(newStartDate, 'months', true);\r\n\r\n      if (diffMonths > maxMonths) {\r\n        newEndDate = newStartDate.clone().add(maxMonths, 'months');\r\n        if (newEndDate.isAfter(today)) {\r\n          newEndDate = today.clone();\r\n        }\r\n        form.patchValue({\r\n          [dataInizioField]: newStartDate.toDate(),\r\n          [dataFineField]: newEndDate.toDate(),\r\n        });\r\n        this.openErrorDialog(`Range di tempo massimo visualizzabile di ${maxMonths} mesi.`, 'Errore:');\r\n      } else {\r\n        form.patchValue({\r\n          [dataInizioField]: newStartDate.toDate(),\r\n        });\r\n      }\r\n    } else if (newStartDate && newEndDate) {\r\n      if (newEndDate.isBefore(newStartDate)) {\r\n        form.patchValue({\r\n          [dataFineField]: oldEndDate,\r\n          [dataInizioField]: oldStartDate,\r\n        });\r\n        this.openErrorDialog('La data fine inserita è antecedente alla data inizio.', 'Errore:');\r\n      } else {\r\n        const diffMonths = newEndDate.diff(newStartDate, 'months', true);\r\n        if (diffMonths > maxMonths) {\r\n          this.openErrorDialog(`Range di tempo massimo visualizzabile di ${maxMonths} mesi.`, 'Errore:');\r\n          // ricalcola data in base a maxMonths\r\n          newStartDate = newEndDate.clone().subtract(maxMonths, 'months');\r\n          form.patchValue({\r\n            [dataInizioField]: newStartDate.toDate(),\r\n            [dataFineField]: newEndDate.toDate(),\r\n          });\r\n        } else {\r\n          // range ricalcolato\r\n          form.patchValue({\r\n            [dataInizioField]: newStartDate.toDate(),\r\n            [dataFineField]: newEndDate.toDate(),\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    const updatedOldStartDate = form.value[dataInizioField] as Date | null;\r\n    const updatedOldEndDate = form.value[dataFineField] as Date | null;\r\n\r\n    return {\r\n      oldStartDate: updatedOldStartDate,\r\n      oldEndDate: updatedOldEndDate,\r\n    };\r\n  }\r\n}\r\n","<page-header></page-header>\r\n<!-- INIZIO TAB PER LE ECCEZIONI -->\r\n<mat-tab-group>\r\n  <mat-tab label=\"Eccezioni\">\r\n    <form [formGroup]=\"formRicerca\" (ngSubmit)=\"inizializzaPaginazione()\">\r\n      <div id=\"cercaMatricolaEccezione\">\r\n        <mat-form-field appearance=\"standard\">\r\n          <input matInput=\"text\" name=\"idMatricola\" formControlName=\"idMatricola\" placeholder=\"Matricola\"/>\r\n          <mat-label>Matricola</mat-label>\r\n        </mat-form-field>\r\n      </div>\r\n      <div id=\"cercaUtenzaNtEccezione\">\r\n        <mat-form-field appearance=\"standard\">\r\n          <input matInput=\"text\" name=\"idAccount\" formControlName=\"idAccount\" [value]=\"\" placeholder=\"Account\"/>\r\n          <mat-label>Account</mat-label>\r\n        </mat-form-field>\r\n      </div>\r\n      <br />\r\n      <div id=\"dataInizio\">\r\n        <mat-form-field appearance=\"standard\">\r\n          <input matInput [matDatepicker]=\"dataInizio\" formControlName=\"dataInizio\" (dateChange)=\"updateDates1($event.value, null)\"/>\r\n          <mat-label>Data Inizio</mat-label>\r\n          <mat-datepicker-toggle matSuffix [for]=\"dataInizio\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dataInizio></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n      <div id=\"dataFine\">\r\n        <mat-form-field appearance=\"standard\">\r\n          <input matInput [matDatepicker]=\"dataFine\" formControlName=\"dataFine\" (dateChange)=\"updateDates1(null, $event.value)\"/>\r\n          <mat-label>Data Fine</mat-label>\r\n          <mat-datepicker-toggle matSuffix [for]=\"dataFine\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dataFine></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div class=\"date-range-info\">range massimo selezionabile per le date è di 12 mesi</div>\r\n      <div class=\"container-buttons\">\r\n        <button type=\"submit\" mat-button class=\"child-buttons child-buttons-conferma\">\r\n        <!-- <button type=\"submit\" mat-button class=\"child-buttons child-buttons-conferma\" (click)=\"inizializzaPaginazione(); ricercaAtt = true\"> -->\r\n          Cerca\r\n        </button>\r\n        <button type=\"button\" mat-button class=\"child-buttons child-buttons-chiudi\" (click)=\"resetRicerca()\">\r\n          Annulla\r\n        </button>\r\n      </div>\r\n      <br />\r\n    </form>\r\n\r\n    <p class=\"section-title\">Ricerca Logs Eccezioni | {{ listFiltered.length }} risultati</p>\r\n    <div class=\"section-filtro-att\" *ngIf=\"!filtroStringa\">&nbsp;su {{ elemNum }}</div>\r\n    <mat-card-content class=\"mat-card-content-with-title\">\r\n      <div *ngIf=\"list.length > 0; else nessunRisultato\">\r\n        <table mat-table matSort (matSortChange)=\"sortData($event)\" [dataSource]=\"listFiltered\" class=\"mat-elevation-z8\">\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n          <ng-container matColumnDef=\"account\">\r\n            <th mat-header-cell mat-sort-header=\"account\" *matHeaderCellDef>Account</th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">\r\n              {{ element.account }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"creato\">\r\n            <th mat-header-cell mat-sort-header=\"creato\" *matHeaderCellDef>Data evento</th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">\r\n              {{ element.creato | date : 'dd/MM/yyyy' }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"matricola\">\r\n            <th mat-header-cell mat-sort-header=\"matricola\" *matHeaderCellDef>Matricola Utente</th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">\r\n              {{ element.matricola }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"evento\">\r\n            <th mat-header-cell mat-sort-header=\"evento\" *matHeaderCellDef>Evento</th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">\r\n              {{ element.evento }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"messaggio\">\r\n            <th mat-header-cell mat-sort-header=\"messaggio\" *matHeaderCellDef>Messaggio</th>\r\n            <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">\r\n              {{ element.messaggio }}\r\n            </td>\r\n          </ng-container>\r\n        </table>\r\n        <div class=\"mat-paginator-mod\">\r\n          <div class=\"pagination\">\r\n            <a *ngIf=\"pageCurr > 1\" (click)=\"pageFirst()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">first_page</mat-icon></a>\r\n            <a (click)=\"pagePrev()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">keyboard_arrow_left</mat-icon></a>\r\n            <a *ngFor=\"let ln of layoutNumbers\" [ngClass]=\"ln === pageCurr ? 'active' : ''\" (click)=\"setPageCurr(ln)\">{{ ln }}</a>\r\n            <a (click)=\"pageNext()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">keyboard_arrow_right</mat-icon></a>\r\n            <a *ngIf=\"pageCurr < pageNum\" (click)=\"pageLast()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">last_page</mat-icon></a>\r\n          </div>\r\n          <div class=\"paginator-numelem\">\r\n            <mat-select class=\"paginator-numelem-select\" name=\"numElem\" [(ngModel)]=\"pageDim\">\r\n              <mat-option *ngFor=\"let num of numPages\" value=\"{{ num }}\" (click)=\"inizializzaPaginazione()\">\r\n                {{ num }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </div>\r\n          <div class=\"paginator-info\">Pagina {{ pageCurr }} di {{ pageNum }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <ng-template #nessunRisultato>\r\n        <br />\r\n        <div class=\"rotation-div\">\r\n          <h1 class=\"nessuna-corr\"></h1>\r\n        </div>\r\n      </ng-template> -->\r\n\r\n      <ng-template #nessunRisultato>\r\n        <br>\r\n        <br>\r\n        <mat-card>\r\n          <div class=\"rotation-div\">\r\n            <h1 class=\"nessuna-corr\">\r\n              <mat-icon class=\"rotation\">cached</mat-icon>\r\n            </h1>\r\n          </div>\r\n        </mat-card>\r\n      </ng-template>\r\n\r\n    </mat-card-content>\r\n  </mat-tab>\r\n\r\n  <!--   FINE TAB ECCEZIONI -->\r\n\r\n  <!--   ----------------------------------------------------------------------------------- -->\r\n\r\n  <!--   INIZIO TAB EVENTI APPLICATIVI -->\r\n\r\n  <mat-tab label=\"Eventi Applicativi\">\r\n    <form [formGroup]=\"formRicerca2\" (ngSubmit)=\"inizializzaPaginazione2()\">\r\n      <div id=\"tipoEventoSelect\">\r\n        <!--<mat-form-field appearance=\"standard\">\r\n          <mat-select placeholder=\"Tipo di evento\" name=\"tipoLog\" formControlName=\"tipoLog\">\r\n            <mat-option *ngFor=\"let elem of tipiLogApp\" [value]=\"elem.id\">\r\n              {{ elem.nome }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-label>Tipo di Evento</mat-label>\r\n        </mat-form-field>-->\r\n        <!--<mat-form-field appearance=\"standard\">\r\n          <input matInput placeholder=\"Tipo di evento\" [formControl]=\"tipoLogCtrl\"\r\n                 [matAutocomplete]=\"autoTipoLog\" (focus)=\"onFocus(tipoLogCtrl)\">\r\n          <mat-autocomplete #autoTipoLog=\"matAutocomplete\" [displayWith]=\"displayTipoLog\">\r\n            <mat-option *ngFor=\"let option of filteredTipiLog | async\" [value]=\"option.id\">\r\n              {{ option.nome }}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <button mat-icon-button matSuffix *ngIf=\"tipoLogCtrl.value\" (click)=\"clearTipoLog()\">\r\n            <mat-icon>clear</mat-icon>\r\n          </button>\r\n        </mat-form-field>-->\r\n        <mat-form-field appearance=\"standard\">\r\n          <input matInput placeholder=\"Tipo di evento\" [formControl]=\"tipoLogCtrl\"\r\n                 [matAutocomplete]=\"autoTipoLog\" (focus)=\"onFocus(tipoLogCtrl)\">\r\n          <mat-autocomplete #autoTipoLog=\"matAutocomplete\" (optionSelected)=\"tipoLogSelected($event.option.value)\" [displayWith]=\"displayTipoLog\">\r\n            <mat-option *ngFor=\"let option of filteredTipiLog | async\" [value]=\"option\">\r\n              {{ option.nome }}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <button mat-icon-button matSuffix *ngIf=\"tipoLogCtrl.value\" (click)=\"clearTipoLog()\">\r\n            <mat-icon>clear</mat-icon>\r\n          </button>\r\n        </mat-form-field>\r\n      </div>\r\n      <div id=\"cercaMatricola\">\r\n        <mat-form-field appearance=\"standard\">\r\n          <input matInput=\"text\" placeholder=\"Matricola\" name=\"idMatricola2\" formControlName=\"idMatricola2\"/>\r\n          <mat-label>Matricola</mat-label>\r\n        </mat-form-field>\r\n      </div>\r\n      <div id=\"cercaAccount\">\r\n        <mat-form-field appearance=\"standard\">\r\n          <input matInput=\"text\" placeholder=\"Account\" name=\"idAccount2\" formControlName=\"idAccount2\"/>\r\n          <mat-label>Account</mat-label>\r\n        </mat-form-field>\r\n      </div>\r\n      <br />\r\n      <div id=\"dataInizio2\">\r\n        <mat-form-field appearance=\"standard\">\r\n          <input matInput [matDatepicker]=\"dataInizio2\" formControlName=\"dataInizio2\" (dateChange)=\"updateDates2($event.value, null)\"/>\r\n          <mat-label>Data Inizio</mat-label>\r\n          <mat-datepicker-toggle matSuffix [for]=\"dataInizio2\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dataInizio2></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n      <div id=\"dataFine2\">\r\n        <mat-form-field appearance=\"standard\">\r\n          <input matInput [matDatepicker]=\"dataFine2\" formControlName=\"dataFine2\" (dateChange)=\"updateDates2(null, $event.value)\"/>\r\n          <mat-label>Data Fine</mat-label>\r\n          <mat-datepicker-toggle matSuffix [for]=\"dataFine2\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dataFine2></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <div class=\"date-range-info\">range massimo selezionabile per le date è di 6 mesi</div>\r\n    <div class=\"container-buttons\">\r\n      <button type=\"submit\" class=\"child-buttons child-buttons-conferma\" (click)=\"inizializzaPaginazione2(); ricercaAtt2 = true\">\r\n        Cerca\r\n      </button>\r\n      <button type=\"button\" class=\"child-buttons child-buttons-chiudi\" (click)=\"resetRicercaEventi()\">\r\n         Annulla\r\n      </button>\r\n    </div>\r\n\r\n    <p class=\"section-title\">Ricerca Logs Eventi | {{ listFiltered2.length }} risultati</p>\r\n    <div class=\"section-filtro-att\" *ngIf=\"!filtroStringa2\">&nbsp;su {{ elemNum2 }}</div>\r\n\r\n    <mat-card-content class=\"mat-card-content-with-title\">\r\n      <div *ngIf=\"list2.length > 0; else nessunRisultato2\">\r\n        <table mat-table matSort (matSortChange)=\"sortData2($event)\" [dataSource]=\"listFiltered2\" class=\"mat-elevation-z8\">\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns2\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns2\"></tr>\r\n\r\n          <ng-container matColumnDef=\"account\">\r\n            <th mat-header-cell mat-sort-header=\"account\" *matHeaderCellDef>Account</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element.account }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"creato\">\r\n            <th mat-header-cell mat-sort-header=\"creato\" *matHeaderCellDef>Data evento</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element.creato | date : 'dd/MM/yyyy' }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"matricola\">\r\n            <th mat-header-cell mat-sort-header=\"matricola\" *matHeaderCellDef>Matricola Utente</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element.matricola }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"evento\">\r\n            <th mat-header-cell mat-sort-header=\"evento\" *matHeaderCellDef>Evento</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element.evento }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"tipo\">\r\n            <th mat-header-cell mat-sort-header=\"tipo\" *matHeaderCellDef>Codice Evento</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element.tipo }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"messaggio\">\r\n            <th mat-header-cell mat-sort-header=\"messaggio\" *matHeaderCellDef>Tipo Evento</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{ element.messaggio }}\r\n            </td>\r\n          </ng-container>\r\n        </table>\r\n\r\n        <div class=\"mat-paginator-mod\">\r\n          <div class=\"pagination\">\r\n            <a *ngIf=\"pageCurr2 > 1\" (click)=\"pageFirst2()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">first_page</mat-icon></a>\r\n            <a (click)=\"pagePrev2()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">keyboard_arrow_left</mat-icon></a>\r\n            <a *ngFor=\"let ln2 of layoutNumbers2\" [ngClass]=\"ln2 === pageCurr2 ? 'active' : ''\" (click)=\"setPageCurr2(ln2)\">{{ ln2 }}</a>\r\n            <a (click)=\"pageNext2()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">keyboard_arrow_right</mat-icon></a>\r\n            <a *ngIf=\"pageCurr2 < pageNum2\" (click)=\"pageLast2()\"><mat-icon [ngClass]=\"{'first-last-page-icon': true}\">last_page</mat-icon></a>\r\n          </div>\r\n          <div class=\"paginator-numelem\">\r\n            <mat-select class=\"paginator-numelem-select\" name=\"numElem\" [(ngModel)]=\"pageDim2\">\r\n              <mat-option *ngFor=\"let num2 of numPages2\" value=\"{{ num2 }}\" (click)=\"inizializzaPaginazione2()\">{{ num2 }}</mat-option>\r\n            </mat-select>\r\n          </div>\r\n          <div class=\"paginator-info\">Pagina {{ pageCurr2 }} di {{ pageNum2 }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <ng-template #nessunRisultato2>\r\n        <br />\r\n        <div class=\"rotation-div\">\r\n          <h1 class=\"nessuna-corr\"></h1>\r\n        </div>\r\n      </ng-template> -->\r\n\r\n      <ng-template #nessunRisultato2>\r\n        <br>\r\n        <br>\r\n        <mat-card>\r\n          <div class=\"rotation-div\">\r\n            <h1 class=\"nessuna-corr\">\r\n              <mat-icon class=\"rotation\">cached</mat-icon>\r\n            </h1>\r\n          </div>\r\n        </mat-card>\r\n      </ng-template>\r\n\r\n    </mat-card-content>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n\r\n\r\n","export class RuoliComunicazioni{\r\n  id!: number;\r\n  creato!: Date;\r\n  aggiornato!: Date;\r\n  idComunicazione!: number;\r\n  ruolo: string;\r\n\r\n  constructor(){\r\n    this.id = 0;\r\n    this.creato = new Date();\r\n    this.aggiornato = new Date();\r\n    this.idComunicazione = 0;\r\n    this.ruolo = '';\r\n  }\r\n\r\n}\r\n\r\n","export class Ruolo{\r\n  amministratore!: string;\r\n  dirigenteCentrale!: string;\r\n\r\n}\r\n\r\nexport interface Ruoli {\r\n  nome: string;\r\n  codice: string;\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment.prod';\r\nimport { TipiLogApplicativi } from '@shared/models/tipiLogApplicativi.model';\r\nimport { map, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogsService {\r\n  idAttivo = 0;\r\n  json: any;\r\n\r\n  api_url = environment.MS_SIRICOAPI + environment.API_URI + 'Log/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private formatDate(date: any): string {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      const month = ('0' + (d.getMonth() + 1)).slice(-2);\r\n      const day = ('0' + d.getDate()).slice(-2);\r\n      const year = d.getFullYear();\r\n      return `${year}-${month}-${day}`;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getLogs(\r\n    account2: string,\r\n    matricola2: string,\r\n    dataInizio2: string,\r\n    dataFine2: string,\r\n    tipoLog: number,\r\n    dim2: string,\r\n    ordine2: string | null,\r\n    pagina2: number\r\n  ): Observable<any> {\r\n    let params = new HttpParams();\r\n\r\n    if (account2) params = params.set('account', account2);\r\n    if (matricola2) params = params.set('matricola', matricola2);\r\n    if (tipoLog) params = params.set('tipo', tipoLog.toString());\r\n    if (dataInizio2) params = params.set('dataInizio', this.formatDate(dataInizio2));\r\n    if (dataFine2) params = params.set('dataFine', this.formatDate(dataFine2));\r\n    if (ordine2 != null && ordine2 != '') params = params.set('ordine', ordine2);\r\n    params = params.set('dimensione', dim2);\r\n    params = params.set('pagina', pagina2.toString());\r\n\r\n    const url = this.api_url + 'cercaSoloLogEventi';\r\n    return this.http.get<any>(url, { params });\r\n  }\r\n\r\n  getLogFilterByStacktrace(\r\n    account: string,\r\n    matricola: string,\r\n    dataInizio: string,\r\n    dataFine: string,\r\n    dim: string,\r\n    ordine: string | null,\r\n    pagina: number\r\n  ): Observable<any> {\r\n    let params = new HttpParams();\r\n\r\n    if (account) params = params.set('account', account);\r\n    if (matricola) params = params.set('matricola', matricola);\r\n    if (dataInizio) params = params.set('dataInizio', this.formatDate(dataInizio));\r\n    if (dataFine) params = params.set('dataFine', this.formatDate(dataFine));\r\n    if (ordine != null && ordine != '') params = params.set('ordine', ordine);\r\n    params = params.set('dimensione', dim);\r\n    params = params.set('pagina', pagina.toString());\r\n\r\n    const url = this.api_url + 'filtraPerLogError';\r\n    return this.http.get<any>(url, { params });\r\n  }\r\n\r\n  getLogsId(id: number): Observable<any> {\r\n    return this.http.get<any>(this.api_url + 'getById/' + id);\r\n  }\r\n\r\n  conta(): Observable<number> {\r\n    return this.http.get<number>(this.api_url + 'conta');\r\n  }\r\n\r\n  contaErrori(\r\n    account: string,\r\n    matricola: string,\r\n    dataInizio: string,\r\n    dataFine: string\r\n  ): Observable<number> {\r\n    let params = new HttpParams();\r\n\r\n    if (account) params = params.set('account', account);\r\n    if (matricola) params = params.set('matricola', matricola);\r\n    if (dataInizio) params = params.set('dataInizio', this.formatDate(dataInizio));\r\n    if (dataFine) params = params.set('dataFine', this.formatDate(dataFine));\r\n\r\n    const url = this.api_url + 'contaPerLogError';\r\n\r\n    return this.http.get<{ count: number }>(url, { params }).pipe(\r\n      map(response => response.count)\r\n    );\r\n  }\r\n\r\n  getTipiLogApplicativi(): Observable<TipiLogApplicativi[]> {\r\n    let url = this.api_url + 'tipi-log-usati';\r\n    return this.http.get<TipiLogApplicativi[]>(url);\r\n  }\r\n\r\n  getLogsParam(dim: string, ordine: string | null, pagina: number): Observable<any> {\r\n    let url = `${this.api_url}getAll/?dimensione=${dim}&ordine=${ordine}&pagina=${pagina}`;\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n  contaEventi(\r\n    account: string,\r\n    matricola: string,\r\n    dataInizio: string,\r\n    dataFine: string,\r\n    tipoLog: number\r\n  ): Observable<number> {\r\n    let params = new HttpParams();\r\n\r\n    if (account) params = params.set('account', account);\r\n    if (matricola) params = params.set('matricola', matricola);\r\n    if (dataInizio) params = params.set('dataInizio', this.formatDate(dataInizio));\r\n    if (dataFine) params = params.set('dataFine', this.formatDate(dataFine));\r\n    if (tipoLog !== undefined && tipoLog !== null) params = params.set('tipo', tipoLog.toString());\r\n\r\n    const url = this.api_url + 'contaPerLogEventi';\r\n\r\n    return this.http.get<{ count: number }>(url, { params }).pipe(\r\n      map(response => response.count)\r\n    );\r\n  }\r\n}\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment.prod';\r\nimport { TipoComunicazione } from '@shared/models/tipo-comunicazione.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipiComunicazioneService {\r\n\r\n  private apiUrl = environment.MS_SIRICOAPI + environment.API_URI + 'TipiComunicazioni/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTipiComunicazioni():Observable<TipoComunicazione[]>{\r\n    return this.http.get<TipoComunicazione[]>(`${this.apiUrl}GetAllTipoComunicazioni`)\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment.prod';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Utente } from '@shared/models/utente.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\ndatiUtente!: any;\r\ndatiUtente$: BehaviorSubject<any | undefined> = new BehaviorSubject<any | undefined>(this.datiUtente);\r\n\r\n// datiUtenteScarti!: any;\r\n// datiUtenteScarti$: BehaviorSubject<any | undefined> = new BehaviorSubject<any | undefined>(this.datiUtenteScarti);\r\n\r\nprivate apiUrl = environment.MS_SIRICOAPI + environment.API_URI + 'Utenti/';\r\nprivate apiUrlCensimento = environment.MS_SIRICOAPI + environment.API_URI + 'CensimentoUtenti/';\r\n\r\n  // getUser(idMatricola: number, idNome: number, idCognome: number): Observable<UserService[]> {\r\n  //   let url = environment.MS_SIRICOAPI + environment.API_URI+'account?';\r\n  //   if (idMatricola>0) {\r\n  //     url += '&idMatricola='+idMatricola;\r\n  //   }\r\n  //   if (idNome>0) {\r\n  //     url += '&idNome='+idNome;\r\n  //   }\r\n  //   if (idCognome>0) {\r\n  //     url += '&idCognome='+idCognome;\r\n  //   }\r\n\r\n  //   return this.http.get<UserService[]>(url);\r\n  // }\r\n\r\n  // getUtente(): Observable<UserService[]> {\r\n  //   let url = environment.MS_SIRICOAPI + environment.API_URI+'account?';\r\n  //   return this.http.get<UserService[]>(url);\r\n  // }\r\n  contaScarti() {\r\n    const URL = this.apiUrlCensimento + 'scarti/count';\r\n    // console.log('URL:',URL);\r\n    return this.http.get<{ count: number }>(URL);\r\n  }\r\n\r\n  contaRicercaFiltrata(matricola: string | null, codiceRuolo: string | null, codiceRegione: string | null, codiceSede: string | null): Observable<{ count: number }> {\r\n\r\n    // console.log('DATI SERVICE:',matricola, codiceRuolo, codiceRegione, codiceSede);\r\n\r\n    let params = new HttpParams()\r\n\r\n    if (matricola) params = params.set('matricola', matricola.trim());\r\n    if (codiceRuolo) params = params.set('codiceRuolo', codiceRuolo);\r\n    if (codiceRegione) params = params.set('codiceRegione', codiceRegione.split(\" \")[0]);\r\n    if (codiceSede) params = params.set('codiceSede', codiceSede.split(\" \")[0]);\r\n\r\n    const URL = this.apiUrl + 'contaRicercaFiltrataUtenti' + '?' + params.toString();\r\n    // const URL = this.apiUrl + 'ricercaFiltrataUtenti' + '?' + params.toString();\r\n\r\n    // console.log('params:',params);\r\n    // console.log('URL:',URL);\r\n\r\n    return this.http.get<{ count: number }>(URL);\r\n    // return this.http.get<{ count: number }>(URL, { params });\r\n    // return this.http.get<Utente[]>(URL);\r\n  }\r\n\r\n   getUtenti(quantita: number | null, pagina: number | null, ordinamentoColonna: string | null, matricola: string | null, codiceRuolo: string | null, codiceRegione: string | null, codiceSede: string | null): Observable<Utente[]> {\r\n\r\n    // console.log('DATI SERVICE:',matricola, codiceRuolo, codiceRegione, codiceSede);\r\n    let params = new HttpParams()\r\n\r\n    if (quantita) params = params.set('quantita', quantita);\r\n    if (pagina) params = params.set('pagina', pagina);\r\n    if (ordinamentoColonna) params = params.set('ordinamentoColonna', ordinamentoColonna);\r\n    if (matricola) params = params.set('matricola', matricola.trim());\r\n    if (codiceRuolo) params = params.set('codiceRuolo', codiceRuolo);\r\n    if (codiceRegione) params = params.set('codiceRegione', codiceRegione.split(\" \")[0]);\r\n    if (codiceSede) params = params.set('codiceSede', codiceSede.split(\" \")[0]);\r\n\r\n    const URL = this.apiUrl + 'ricercaFiltrataUtenti' + '?' + params.toString();\r\n\r\n    // console.log('params:',params);\r\n\r\n    return this.http.get<Utente[]>(URL);\r\n  }\r\n\r\n  //  getUtenti(): Observable<Utente[]> {\r\n  //   // console.log('getUtenti()');\r\n  //   let url = this.apiUrl + 'getAllUtentiDTO' //environment.MS_SIRICOAPI + environment.API_URI+'utenti';\r\n  //   // let url = \"http://localhost:5250/api/Account/getAllUtenti\" //environment.MS_SIRICOAPI + environment.API_URI+'utenti';\r\n  //   return this.http.get<Utente[]>(url);\r\n  // }\r\n\r\n  getAllRuoli(): Observable<Utente[]> {\r\n    let url = this.apiUrl + 'getAllRuoli'\r\n    return this.http.get<Utente[]>(url);\r\n  }\r\n\r\n  censimentoUtenti(file: File): Observable<any> {\r\n    const formData: FormData = new FormData();\r\n    formData.append('file', file, file.name);\r\n\r\n    const headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'multipart/form-data');\r\n\r\n    return this.http.post(`${this.apiUrlCensimento}importaUtenti`, formData, { headers });\r\n  }\r\n\r\n  getScarti(quantita: number, pagina: number, orderBy?: string): Observable<any[]> {\r\n    let params = new HttpParams()\r\n\r\n    if (quantita) params = params.set('quantita', quantita);\r\n    if (pagina) params = params.set('pagina', pagina);\r\n    if (orderBy) params = params.set('orderBy', orderBy);\r\n\r\n    // console.log('params SERVICE:',quantita, pagina, orderBy);\r\n    const URL = `${this.apiUrlCensimento}getScarti` + '?' + params.toString();\r\n\r\n    return this.http.get<any[]>(URL);\r\n  }\r\n\r\n  // getAllEmailUtenti(matricola: string): Observable<string[]> {\r\n  //   let url = this.apiUrl + 'getAllEmail?matricola=' + matricola;\r\n  //   return this.http.get<string[]>(url);\r\n  // }\r\n\r\n  // updateEmailUtente(matricola: string, email: string) {\r\n  //   const headers = { 'content-type': 'application/json' };\r\n  //   const url = `${this.apiUrl}UpdateEmail?matricola=${matricola}&email=${email}`;\r\n\r\n  //   return this.http.put<any>(url, {}, {headers});\r\n  // }\r\n}\r\n"],"names":["ChangeDetectorRef","FormControl","MatAutocompleteTrigger","MatDialog","StorageService","TerritorioService","UserService","PopupErroreInserimentoComponent","map","startWith","switchMap","tap","ListaUtentiModificaComponent","MatSnackBar","i0","ctx_r19","ctx_r22","ctx_r25","ctx_r28","ctx_r47","ctx_r55","ctx_r58","ctx_r60","ctx_r66","ctx_r69","ctx_r71","ctx_r74","ctx_r76","ctx_r78","ctx_r89","ctx_r94","ctx_r100","ctx_r103","ctx_r105","ctx_r108","ctx_r110","ctx_r112","ListaUtentiComponent","constructor","storageService","dialog","cdr","utentiSrv","territorioService","snackBar","ngOnInit","regioneCtrl","disable","sedeCtrl","loadRuoli","getRegioni","getProvince","filteredRuolo","ruoloCtrl","valueChanges","pipe","value","_filterRuolo","filteredSede","_filterSede","filteredRegione","_filterRegione","inizializzaPaginazione","inizializzaPaginazioneScarti","ngAfterViewInit","regioneAutocompleteTrigger","panelClosingActions","filtered","some","option","id","setValue","subscribe","sedeAutocompleteTrigger","filterValue","toLowerCase","listaRuoli","filter","descrizione","includes","sede","showFieldSede","nome","regione","sedeSelected","selectedId","selectedSede","find","filtroperSede","toString","sedeId","getRegioniByIdSede","formatToSixDigits","data","i","length","sedeCodSede","splice","regioneSelected","selectedRegione","filtroperRegione","regioneId","getAllProvinceByIdRegione","l","check","sedeDesc","unshift","error","errorMessage","ruoloSelected","selectedValue","selectedRole","ruolo1","ruoloSelezionato","reset","enable","clearSede","undefined","parseInt","split","clearRegione","clearMatricola","matricolaCtrl","clearRuolo","results","push","ricercaFiltrata","formatEmptyData","openErrorDialog","popolaTabella","isLoading","getUtenti","Number","pageDim","trim","pageCurr","ordinamentoColonna","dataSourceFiltered","dataSource","console","getAllRuoli","codiceSede","nomeSede","codiceFormattato","showField","content","numberValue","padStart","displayFieldSede","sedeDTO","output","showAllFieldSedi","support","displayFieldRuolo","ruoloDTO","ruoloCod","ruoloDesc","showAllFieldRuoli","message","titolo","open","resetRicerca","elemNum","openSedePanel","openPanel","openRegionePanel","openRuoloPanel","ruoloAutocompleteTrigger","onFocus","ctrl","setTimeout","sortData","sort","ordine","direction","active","selectedTab","loadScarti","handleRowClick","row","datiUtente$","next","dialogRef","disableClose","resetPaginazione","base","layoutDim","layoutNumbers","contaRicercaFiltrata","totale","count","pageNum","Math","ceil","Array","from","min","_","pageNext","scorriLayout","pagePrev","setPageCurr","page","pageFirst","pageLast","max","k","resetPaginazioneScarti","pageCurrScarti","baseScarti","layoutDimScarti","layoutNumbersScarti","contaScarti","elemNumScarti","pageNumScarti","pageDimScarti","pageNextScarti","scorriLayoutScarti","pagePrevScarti","setPageCurrScarti","pageFirstScarti","pageLastScarti","onFileSelected","event","file","target","files","extension","name","pop","duration","selectedFile","onUpload","censimentoUtenti","response","ordinamento","getScarti","dataSourceScarti","displayFieldData","ora","formatData","reverse","join","replace","formatOra","selectors","viewQuery","ctx","_r10","_r1","_r4","_r7","_r13","_r17","FormBuilder","LogsService","LogApplicativoDialogComponent","MtxDialog","moment","ctx_r33","ctx_r36","ctx_r39","ctx_r42","ctx_r45","ctx_r50","ctx_r52","ctx_r57","ctx_r59","ctx_r63","ctx_r90","ctx_r93","ctx_r95","ctx_r98","ctx_r102","LogApplicativoComponent","dialogAlert","logSrv","formBuilder","formBuilder2","group","dataInizio","dataFine","dimensione","idAccount","idMatricola","pagina","dataInizio2","dataFine2","dimensione2","idAccount2","idMatricola2","tipoLog","tipoLogCtrl","pagina2","ricercaAtt","ricercaAtt2","isLoading2","tipiLogApplicativi","updateDates1","updateDates2","inizializzaPaginazione2","filteredTipiLog","_filterTipiLog","tipiLogApp","tipoLogSelected","selectedTipo","formRicerca2","patchValue","clearTipoLog","displayTipoLog","selectedOption","tipo","popolaRisultato","datai","formatDate","formRicerca","dataf","contaErrori","scorriLayout2","pageCurr2","layoutNumbers2","pageNum2","base2","layoutDim2","getLogsParam","dataSource1","azzeraFiltro","filtroStringa","openDialog","idAttivo","afterClosed","getLogFilterByStacktrace","list","listFiltered","alert","filtroRicerca","x","matricola","toLocaleLowerCase","get","_a","account","_b","sortData2","sort2","ordine2","popolaTabella2","resetPaginazione2","date","format","datai2","dataf2","tipoLogId","contaEventi","data2","elemNum2","pageDim2","pageNext2","pagePrev2","setPageCurr2","page2","pageFirst2","pageLast2","getLogs","list2","listFiltered2","filtroRicercaEventi","resetRicercaEventi","getTipiLogApplicativi","emptyObject","creato","Date","aggiornato","result","updateDates","oldStartDate","oldEndDate","oldStartDate2","oldEndDate2","maxMonths","form","dataInizioField","dataFineField","today","startOf","newStartDate","newEndDate","clone","subtract","toDate","oldStartDateMoment","startDateForDiff","diffDays","diff","diffMonths","oldEndDateMoment","endDateForDiff","add","isAfter","isBefore","updatedOldStartDate","updatedOldEndDate","decls","vars","consts","template","$event","_r6"],"sourceRoot":"webpack:///"}