{"version":3,"file":"src_app_routes_modellazione_modellazione_module_ts.js","mappings":"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","sources":["./src/app/routes/modellazione/modellazione-aggiorna/modellazione-aggiorna.component.ts","./src/app/routes/modellazione/modellazione-aggiorna/modellazione-aggiorna.component.html","./src/app/routes/modellazione/modellazione-nuova/modellazione-nuova.component.ts","./src/app/routes/modellazione/modellazione-nuova/modellazione-nuova.component.html","./src/app/routes/modellazione/modellazione-routing.module.ts","./src/app/routes/modellazione/modellazione.module.ts","./src/app/shared/models/areeprodotti.ts","./src/app/shared/models/settore-materia.model.ts","./src/app/shared/services/prodotti-tipologie-lavoratori.service.ts","./src/app/shared/services/sottoaree.service.ts","./src/app/shared/services/tipologie-lavoratori.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Aree } from '@shared/services/areeservice.service';\r\nimport { SottoareeService } from '@shared/services/sottoaree.service';\r\nimport { ProdottiService } from '@shared/services/prodotti.service';\r\nimport { TipologieLavoratoriService } from '@shared/services/tipologie-lavoratori.service';\r\nimport { ProdottiTipologieLavoratoriService } from '@shared/services/prodotti-tipologie-lavoratori.service';\r\nimport { Area } from '@shared/models/area.model';\r\nimport { Sottoarea } from '@shared/models/sottoarea.model';\r\nimport { Prodotto } from '@shared/models/prodotto.model';\r\nimport { TipologiaLavoratore } from '@shared/models/tipologia-lavoratore.model';\r\nimport { ProdottiTipologieLavoratori } from '@shared/models/prodotti-tipologie-lavoratori.model';\r\nimport { Router } from '@angular/router';\r\nimport { forkJoin, mergeMap } from 'rxjs';\r\nimport { Settore } from '@shared/models/settore-materia.model';\r\nimport { SettoreMateriaService } from '@shared/services/settore-materia.service';\r\nimport { AreeProdotti } from '@shared/models/areeprodotti';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\nexport interface DialogData {\r\n  formAttivo: number;\r\n  id: number\r\n}\r\n\r\n@Component({\r\n  selector: 'app-modellazione-aggiorna',\r\n  templateUrl: './modellazione-aggiorna.component.html',\r\n  styleUrls: ['./modellazione-aggiorna.component.scss']\r\n})\r\n\r\nexport class ModellazioneAggiornaComponent implements OnInit {\r\n  isInputAreaFocused: boolean = false;\r\n  isInputSettoreFocused: boolean = false;\r\n  formAttivo = 0;\r\n  area: Area = new Area();\r\n  areeProdotti: AreeProdotti = new AreeProdotti()\r\n  sottoarea: Sottoarea = new Sottoarea();\r\n  prodotto: Prodotto = new Prodotto();\r\n  tipologiaLavoratore: TipologiaLavoratore = new TipologiaLavoratore();\r\n  settore: Settore = new Settore();\r\n  buttonClicked = '';\r\n  areaCancellabile = false;\r\n  sottoareaCancellabile = false;\r\n  prodottoCancellabile = false;\r\n  tipLavCancellabile = false;\r\n  settoreCancellabile: { esitoRimuovi: boolean, messaggio: string } = { esitoRimuovi: false, messaggio: '' }; // Definizione di settoreCancellabile\r\n  deleteButton = false;\r\n  tipLavModificate = false;\r\n  listaSettori: Settore[] =[];\r\n  // listaAree: Area[] =[];\r\n  listaTipLav: TipologiaLavoratore[] = [];\r\n  tipLavSelected: ProdottiTipologieLavoratori[] = [];\r\n  idSelezionati: any[] = [];\r\n  prodottoTipLav: ProdottiTipologieLavoratori = new ProdottiTipologieLavoratori();\r\n  errorMessage: string | null = null;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private areaSrv: Aree,\r\n    private sottoAreaSrv: SottoareeService,\r\n    private prodottoSrv: ProdottiService,\r\n    private tipLavSrv: TipologieLavoratoriService,\r\n    private prodottoTipLavSrv: ProdottiTipologieLavoratoriService,\r\n    private settoreMtr : SettoreMateriaService,\r\n    private settoreSrv: SettoreMateriaService,\r\n    private router: Router,\r\n    public  dialogRef: MatDialogRef<ModellazioneAggiornaComponent>,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n  form1 = this.formBuilder.group({\r\n    inputArea: ['', [Validators.required, Validators.maxLength(50)]],\r\n    selectSettoreMateria : ['']\r\n  });\r\n  form2 = this.formBuilder.group({\r\n    inputArea: ['', Validators.required],\r\n    inputSottoarea: ['', Validators.required]\r\n  });\r\n  form3 = this.formBuilder.group({\r\n    inputArea: ['', Validators.required],\r\n    inputSottoarea: ['', Validators.required],\r\n    inputProdotto: ['', Validators.required],\r\n    tiplav: [null, Validators.required]\r\n  });\r\n  form4 = this.formBuilder.group({\r\n    inputTipologiaLavoratore: ['', Validators.required]\r\n  });\r\n  form5 = this.formBuilder.group({\r\n    inputSettore: ['', [Validators.required, Validators.maxLength(50)]]\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.formAttivo = this.data.formAttivo;\r\n    if (this.formAttivo === 0) {\r\n      this.newCaricaAreeProdotto(this.data.id);\r\n      // this.popolaAree();\r\n    } else if (this.formAttivo === 1) {\r\n      this.caricaSottoarea(this.data.id);\r\n    } else if (this.formAttivo === 2) {\r\n      this.caricaProdotto(this.data.id);\r\n    } else if (this.formAttivo === 3) {\r\n      this.caricaTipologiaLavoratore(this.data.id);\r\n    } else if (this.formAttivo === 4) {\r\n      this.caricaSettore(this.data.id);\r\n      this.popolaSettori();\r\n    }\r\n  }\r\n\r\n  onPaste(event: ClipboardEvent, maxLength: number) {\r\n    const clipboardData = event.clipboardData || (window as any).clipboardData;\r\n    const pastedText = clipboardData.getData('text');\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const currentText = inputElement.value;\r\n    const selectionStart = inputElement.selectionStart || 0;\r\n    const selectionEnd = inputElement.selectionEnd || 0;\r\n    const newText =\r\n      currentText.slice(0, selectionStart) +\r\n      pastedText +\r\n      currentText.slice(selectionEnd);\r\n\r\n    if (newText.length > maxLength) {\r\n      event.preventDefault();\r\n      this.snackBar.open(\r\n        `Non puoi inserire più di ${maxLength} caratteri`,\r\n        'Chiudi',\r\n        { duration: 3000 }\r\n      );\r\n    }\r\n  }\r\n\r\n/*   caricaArea(id: number){\r\n    forkJoin(\r\n      [this.areaSrv.getArea(id), this.areaSrv.verificaArea(id)]\r\n    ).subscribe (\r\n      data => {\r\n        this.area = data[0];\r\n        this.form1.controls.inputArea.setValue(this.area.nome);\r\n        this.areaCancellabile = data[1];\r\n      });\r\n  } */\r\n\r\n  newCaricaAreeProdotto(id: number){\r\n    forkJoin(\r\n      [this.areaSrv.newGetAreaProdotto(id), this.settoreMtr.getAllSettoriMaterie(), this.areaSrv.newVerificaAreaProdotto(id)]\r\n    ).subscribe (\r\n      data => {\r\n        this.areeProdotti = data[0];\r\n        this.listaSettori = data[1];\r\n        this.listaSettori.sort((a, b) => (a.nome > b.nome ? 1 : -1));\r\n        this.form1.controls.inputArea.setValue(this.areeProdotti.nome);\r\n        this.form1.controls.selectSettoreMateria.setValue(this.areeProdotti.idSettore)\r\n        this.areaCancellabile = data[2].esitoRimuovi;\r\n      },//);\r\n      error => {\r\n        this.errorMessage = 'Error fetching data';\r\n        // console.error('Error fetching data:', error);\r\n      });\r\n  }\r\n\r\n  caricaSottoarea(id: number){\r\n    /* forkJoin(\r\n      [this.sottoAreaSrv.getSottoArea(id), this.sottoAreaSrv.verificaSottoArea(id)]\r\n    ).subscribe (\r\n      data => {\r\n        this.sottoarea = data[0];\r\n        this.form2.controls.inputArea.setValue(this.sottoarea.area.nome);\r\n        this.form2.controls.inputSottoarea.setValue(this.sottoarea.nome);\r\n        this.sottoareaCancellabile = data[1];\r\n      }); */\r\n  }\r\n\r\n  popolaSettori(){\r\n    this.settoreMtr.getAllSettoriMaterie().subscribe({\r\n      next : (data) =>{\r\n        this.listaSettori = data;\r\n      },\r\n      error: (error) => {\r\n        this.errorMessage = 'Error fetching sectors';\r\n      }    \r\n    });\r\n  }\r\n\r\n  // popolaAree(){\r\n  //   this.areaSrv.getAllAreaProdotto().subscribe({\r\n  //     next : (data =>{\r\n  //       this.listaAree = data;\r\n  //     })\r\n  //   });\r\n  // }\r\n\r\n  caricaProdotto(id: number){\r\n    /* forkJoin(\r\n       [this.prodottoSrv.getProdotto(id),\r\n        this.prodottoSrv.verificaProdotto(id),\r\n        this.tipLavSrv.getTipologieLavoratoriAll(),\r\n        this.prodottoTipLavSrv.getTipologieLavoratori(id)]\r\n    ).subscribe (\r\n      data => {\r\n        this.prodotto = data[0];\r\n        this.form3.controls.inputArea.setValue(this.prodotto.sottoarea.area.nome);\r\n        this.form3.controls.inputSottoarea.setValue(this.prodotto.sottoarea.nome);\r\n        this.form3.controls.inputProdotto.setValue(this.prodotto.nome);\r\n        this.prodottoCancellabile = data[1];\r\n        this.listaTipLav = data[2];\r\n        //console.log('tip lav all ', this.listaTipLav);\r\n        this.tipLavSelected = data[3];\r\n        //console.log('dopo lettura tipologie selezionate');\r\n        this.tipLavSelected.forEach(el => {this.idSelezionati.push(el.tipologiaLavoratore.id)});\r\n        //console.log('tip lav selected ', this.idSelezionati);\r\n        this.form3.controls.tiplav.setValue(this.idSelezionati);\r\n      }); */\r\n  }\r\n\r\n  caricaTipologiaLavoratore(id: number){\r\n    /* forkJoin(\r\n      [this.tipLavSrv.getTipologiaLavoratore(id),\r\n      this.tipLavSrv.verificaTipologiaLavoratore(id)]\r\n    ).subscribe (\r\n      data => {\r\n        this.tipologiaLavoratore = data[0];\r\n        this.form4.controls.inputTipologiaLavoratore.setValue(this.tipologiaLavoratore.nome);\r\n        this.tipLavCancellabile = data[1];\r\n        console.log('tip lav cancellabile ', this.tipLavCancellabile, id)\r\n      }); */\r\n  }\r\n\r\n  caricaSettore(id: number) {\r\n    forkJoin(\r\n        [this.settoreSrv.getSettoriMaterieById(id), this.settoreSrv.verificaRimuoviSettoreMateria(id)]\r\n    ).subscribe(\r\n        data => {\r\n            this.settore = data[0]; // Imposta il valore di settoreCancellabile\r\n            this.form5.controls.inputSettore.setValue(this.settore.nome);\r\n            this.settoreCancellabile = data[1];\r\n        }\r\n    );\r\n  }\r\n\r\n  salvaArea(){\r\n    this.area.nome = this.form1.value.inputArea.replace(/\\s+/g,' ').trim();\r\n    /* this.areaSrv.aggiornaArea(this.area).subscribe(\r\n                  data => {\r\n                              console.log(data);\r\n                              this.dialogRef.close();\r\n                          }); */\r\n  }\r\n\r\n  newAggiornaArea() {\r\n    this.areeProdotti.nome = this.form1.value.inputArea.replace(/\\s+/g,' ').trim();\r\n    this.areeProdotti.idSettore = this.form1.value.selectSettoreMateria;\r\n    this.areaSrv.newAggiornaAreeProdotto(this.areeProdotti).subscribe({\r\n      next: () => {\r\n        this.dialogRef.close(true); // Passa 'true' per indicare che l'aggiornamento è riuscito\r\n      },\r\n      error: (error) => {\r\n        this.errorMessage = error.error.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  salvaSottoArea(){\r\n    this.sottoarea.nome = this.form2.value.inputSottoarea;\r\n    /* this.sottoAreaSrv.aggiornaSottoArea(this.sottoarea).subscribe(\r\n                  data => {\r\n                              console.log(data);\r\n                              this.dialogRef.close();\r\n                          }); */\r\n  }\r\n\r\n  salvaProdotto(){\r\n    this.prodotto.nome = this.form3.value.inputProdotto;\r\n    /* this.prodottoSrv.aggiornaProdotto(this.prodotto).subscribe(\r\n          data => {\r\n                      console.log(data);\r\n                      let i: number;\r\n                      console.log('tip lav selezionati ', this.idSelezionati);\r\n                      //se una tipologia lavoratore selezionata sul form non è presente tra quelle associate\r\n                      //al prodotto viene inserita sul db\r\n                      for (i=0; i<this.idSelezionati.length; i++)\r\n                      {\r\n                        const presente = this.tipLavSelected.some(x => x.tipologiaLavoratore.id == this.idSelezionati[i]);\r\n                        if (!presente){\r\n                          this.prodottoTipLav = new ProdottiTipologieLavoratori();\r\n                          this.prodottoTipLav.prodotto.id = this.prodotto.id;\r\n                          this.prodottoTipLav.tipologiaLavoratore.id = this.idSelezionati[i];\r\n                          console.log('this.prodottoTipLav ', this.prodottoTipLav);\r\n                          /* this.prodottoTipLavSrv.inserisciProdottoTipologiaLavoratore(this.prodottoTipLav).\r\n                              subscribe(\r\n                                data => {\r\n                                  console.log('tip lav inserita ', data);\r\n                                }\r\n                              );\r\n                          }\r\n                      }\r\n                      //se una tipologia lavoratore tra quelle associate al prodotto non è selezionata\r\n                      //sul form viene cancellata dal db\r\n                      // console.log('tipologie selezionate form',this.idSelezionati);\r\n                      // console.log('tipologie selezionate DB', this.tipLavSelected);\r\n                      for (i=0; i<this.tipLavSelected.length; i++)\r\n                      {\r\n                        const presente = this.idSelezionati.some(x => x == this.tipLavSelected[i].tipologiaLavoratore.id);\r\n                        if (!presente){\r\n                          console.log('id da cancellare ', this.tipLavSelected[i].id)\r\n                          /* this.prodottoTipLavSrv.rimuoviProdottoTipologiaLavoratore(this.tipLavSelected[i].id).\r\n                              subscribe(\r\n                                data => {\r\n                                  console.log('tip lav rimossa', data);\r\n                                }\r\n                              );\r\n                          }\r\n                        }\r\n\r\n                              this.dialogRef.close();\r\n                          }) */\r\n  }\r\n\r\n  salvaTipologiaLavoratore(){\r\n    this.tipologiaLavoratore.nome = this.form4.value.inputTipologiaLavoratore;\r\n    /* this.tipLavSrv.aggiornaTipologiaLavoratore(this.tipologiaLavoratore).subscribe(\r\n                  data => {\r\n                              console.log(data);\r\n                              this.dialogRef.close();\r\n                          }); */\r\n  }\r\n\r\n  salvaSettore() {\r\n    this.settore.nome = this.form5.value.inputSettore.replace(/\\s+/g,' ').trim();\r\n    this.settoreSrv.inserisciSettore(this.settore).subscribe({\r\n      next: () => {\r\n        this.dialogRef.close(true); // Passa 'true' per indicare che l'aggiornamento è riuscito\r\n      },\r\n      error: (error) => {\r\n        this.errorMessage = error.error.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    //console.log('evento: ', this.buttonClicked);\r\n    if(this.buttonClicked === 'modifica') {\r\n      //E' stato premuto il tasto Salva\r\n      switch (this.formAttivo){\r\n        case 0:   //Area\r\n            this.newAggiornaArea();\r\n            break;\r\n        case 1:   //SottoArea\r\n            this.salvaSottoArea();\r\n            break;\r\n        case 2:   //Prodotto\r\n            //console.log('aggiornamento prodotto: ', this.prodotto.id)\r\n            this.salvaProdotto();\r\n            break;\r\n        case 3:   //Tipologia Lavoratore\r\n            //console.log('aggiornamento prodotto: ', this.prodotto.id)\r\n            this.salvaTipologiaLavoratore();\r\n            break;\r\n        case 4:   //Settore/Materia\r\n            //console.log('aggiornamento prodotto: ', this.prodotto.id)\r\n            this.salvaSettore();\r\n            break;\r\n      }\r\n    }\r\n  }\r\n\r\n  clickDelete(){\r\n    this.deleteButton = !this.deleteButton;\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n  }\r\n\r\n  elimina(){\r\n    this.delay(1);\r\n    switch (this.formAttivo){\r\n      case 0:   //AreeProdotti\r\n          this.areaSrv.newDeleteAreeProdotti(this.areeProdotti.id).subscribe(\r\n            () => {\r\n              this.dialogRef.close();\r\n          });\r\n          break;\r\n      case 1:   //SottoArea\r\n          /* this.sottoAreaSrv.deleteSottoArea(this.sottoarea.id).subscribe(\r\n            data => {\r\n              this.dialogRef.close();\r\n          }); */\r\n          break;\r\n      case 2:   //Prodotto\r\n          /* this.prodottoTipLavSrv.rimuoviProdottoTipologieLavoratori(this.prodotto.id).subscribe(\r\n            data => {\r\n              console.log('cancellazione tip lav del prodotto');\r\n              this.prodottoSrv.deleteProdotto(this.prodotto.id).subscribe(\r\n                data => {\r\n                  this.dialogRef.close();\r\n              });\r\n            }\r\n          ) */\r\n          break;\r\n       case 3:   //Tipologia Lavoratore\r\n          /* this.tipLavSrv.deleteTipologiaLavoratore(this.tipologiaLavoratore.id).subscribe(\r\n            data => {\r\n              this.dialogRef.close();\r\n          }); */\r\n          break;\r\n       case 4:   //Settore/Materia\r\n        this.settoreSrv.deleteSettoriMaterie(this.settore.id).subscribe(\r\n          data => {\r\n            this.dialogRef.close();\r\n          }\r\n        );\r\n\r\n      break;\r\n    }\r\n  }\r\n\r\n  onTipLavSelectionChanged(idSelected: number[])\r\n  {\r\n    this.tipLavModificate = true;\r\n    this.idSelezionati=idSelected;\r\n\r\n    // this.tipLavSelected=tipLavSelected;\r\n    // console.log(tipLavSelected);\r\n  }\r\n}\r\n","<container-element [ngSwitch]=\"formAttivo\">\r\n  <!--case0: AREA-->\r\n  <div *ngSwitchCase=\"0\">\r\n    <p><mat-icon class=\"main-ico\">build</mat-icon>Aggiorna Area/Prodotto</p>\r\n    <form class=\"form\" [formGroup]=\"form1\" (ngSubmit)=\"onSubmit()\">\r\n      <!-- Settore/Materia -->\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-label>Settore/Materia</mat-label>\r\n        <mat-select\r\n          placeholder=\"Settore/Materia\"\r\n          name=\"settoreMateria\"\r\n          formControlName=\"selectSettoreMateria\">\r\n          <mat-option *ngFor=\"let listSett of listaSettori\" [value]=\"listSett.id\">{{ listSett.nome }}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <br>\r\n      <!-- Nome Area/Prodotto -->\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-label>Nome Area/Prodotto</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Es. Area1\"\r\n          formControlName=\"inputArea\"\r\n          maxlength=\"50\"\r\n          (focus)=\"isInputAreaFocused = true\"\r\n          (blur)=\"isInputAreaFocused = false\"\r\n          (paste)=\"onPaste($event, 50)\"\r\n        >\r\n        <mat-hint align=\"end\" *ngIf=\"isInputAreaFocused\">\r\n          {{ form1.get('inputArea')?.value?.length || 0 }}/50\r\n        </mat-hint>\r\n        <mat-error *ngIf=\"form1.get('inputArea')?.hasError('maxlength')\">\r\n          Il nome dell'Area/Prodotto non può superare 50 caratteri.\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n      <mat-error *ngIf=\"errorMessage\">{{ errorMessage }}</mat-error>\r\n      <br *ngIf=\"errorMessage\">\r\n      <mat-dialog-actions class=\"btn-box\" align=\"center\">\r\n        <button mat-button mat-dialog-close class=\"btn-back\"><mat-icon>arrow_back</mat-icon>Chiudi</button>\r\n        <button type=\"submit\" mat-button class=\"btn-mod\" (click)=\"buttonClicked = 'modifica'\" [disabled]=\"!form1.valid\">\r\n          <mat-icon>edit</mat-icon>Modifica\r\n        </button>\r\n        <!-- Bottone Elimina -->\r\n        <div class=\"btn-dlt-container tooltip\" matTooltip=\"L'Area/Prodotto selezionata ha delle Segnalazioni associate e non può essere eliminata\" [matTooltipDisabled]=\"form1.valid && !this.areaCancellabile\">\r\n          <button mat-button class=\"btn-dlt\" (click)=\"clickDelete()\" [disabled]=\"!form1.valid || this.areaCancellabile\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n          <span *ngIf=\"deleteButton\" class=\"tooltiptext\" [ngClass]=\"deleteButton ? 'opacity-100' : ''\">\r\n            Eliminare definitivamente?<br>\r\n            <button class=\"btn-def btn-def-yes\" (click)=\"elimina()\" [disabled]=\"!form1.valid || this.areaCancellabile\">si</button>\r\n            <button class=\"btn-def btn-def-no\" (click)=\"clickDelete()\" [disabled]=\"!form1.valid || this.areaCancellabile\">no</button>\r\n          </span>\r\n        </div>\r\n      </mat-dialog-actions>\r\n    </form>\r\n  </div>\r\n  <!--/case0-->\r\n\r\n  <!--case4: SETTORE/MATERIA-->\r\n  <div *ngSwitchCase=\"4\">\r\n    <p><mat-icon class=\"main-ico\">build</mat-icon>Aggiorna Settore/Materia</p>\r\n    <form class=\"form\" [formGroup]=\"form5\" (ngSubmit)=\"onSubmit()\">\r\n      <!-- Nome Settore/Materia -->\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-label>Nome Settore/Materia</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Es. Pensioni\"\r\n          formControlName=\"inputSettore\"\r\n          maxlength=\"50\"\r\n          (focus)=\"isInputSettoreFocused = true\"\r\n          (blur)=\"isInputSettoreFocused = false\"\r\n          (paste)=\"onPaste($event, 50)\"\r\n        >\r\n        <mat-hint align=\"end\" *ngIf=\"isInputSettoreFocused\">\r\n          {{ form5.get('inputSettore')?.value?.length || 0 }}/50\r\n        </mat-hint>\r\n        <mat-error *ngIf=\"form5.get('inputSettore')?.hasError('maxlength')\">\r\n          Il nome del Settore/Materia non può superare 50 caratteri.\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-error *ngIf=\"errorMessage\">{{ errorMessage }}</mat-error>\r\n      <br>\r\n      <mat-dialog-actions class=\"btn-box\" align=\"center\">\r\n        <button mat-button mat-dialog-close class=\"btn-back\"><mat-icon>arrow_back</mat-icon>Chiudi</button>\r\n        <button type=\"submit\" mat-button class=\"btn-mod\" (click)=\"buttonClicked = 'modifica'\" [disabled]=\"!form5.valid\">\r\n          <mat-icon>edit</mat-icon>Modifica\r\n        </button>\r\n        <!-- Bottone Elimina -->\r\n        <div class=\"btn-dlt-container tooltip\" matTooltip=\"Il Settore/Materia selezionato ha delle Segnalazioni associate e non può essere eliminato\" [matTooltipDisabled]=\"form5.valid && settoreCancellabile.esitoRimuovi\">\r\n          <button mat-button class=\"btn-dlt\" (click)=\"clickDelete()\" [disabled]=\"!form5.valid || !settoreCancellabile.esitoRimuovi\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n          <span *ngIf=\"deleteButton\" class=\"tooltiptext\" [ngClass]=\"deleteButton ? 'opacity-100' : ''\">\r\n            Eliminare definitivamente?<br>\r\n            <button class=\"btn-def btn-def-yes\" (click)=\"elimina()\" [disabled]=\"!form5.valid || !settoreCancellabile.esitoRimuovi\">si</button>\r\n            <button class=\"btn-def btn-def-no\" (click)=\"clickDelete()\" [disabled]=\"!form5.valid || !settoreCancellabile.esitoRimuovi\">no</button>\r\n          </span>\r\n        </div>\r\n      </mat-dialog-actions>\r\n    </form>\r\n  </div>\r\n  <!--/case4-->\r\n\r\n\r\n</container-element>\r\n\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Area } from '@shared/models/area.model';\r\nimport { Sottoarea } from '@shared/models/sottoarea.model';\r\nimport { Prodotto } from '@shared/models/prodotto.model';\r\nimport { TipologiaLavoratore } from '@shared/models/tipologia-lavoratore.model';\r\nimport { ProdottiTipologieLavoratori } from '@shared/models/prodotti-tipologie-lavoratori.model';\r\nimport { Aree } from '@shared/services/areeservice.service';\r\nimport { SottoareeService } from '@shared/services/sottoaree.service';\r\nimport { ProdottiService } from '@shared/services/prodotti.service';\r\nimport { TipologieLavoratoriService } from '@shared/services/tipologie-lavoratori.service';\r\nimport { ProdottiTipologieLavoratoriService } from '@shared/services/prodotti-tipologie-lavoratori.service';\r\nimport { Settore } from '@shared/models/settore-materia.model';\r\nimport { SettoreMateriaService } from '@shared/services/settore-materia.service';\r\nimport { AreeProdotti } from '@shared/models/areeprodotti';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-modellazione-nuova',\r\n  templateUrl: './modellazione-nuova.component.html',\r\n  styleUrls: ['./modellazione-nuova.component.scss']\r\n})\r\nexport class ModellazioneNuovaComponent implements OnInit {\r\n  isInputAreaFocused: boolean = false;\r\n  isInputSettoreFocused: boolean = false;\r\n  formAttivo: number=0;\r\n  listaSettoriMaterie : Settore[] = []\r\n  listaAree: Area[] = [];\r\n  listaSottoAree: Sottoarea[] = [];\r\n  sottoareeFiltered: Sottoarea[] = [];\r\n  listaTipLav: TipologiaLavoratore[] = [];\r\n  tipLavSelected: TipologiaLavoratore[] = [];\r\n  listaSettori: Settore[] =[];\r\n  idSelezionati: number[] = [];\r\n  prodotto: Prodotto = new Prodotto();\r\n  prodottoTipLav: ProdottiTipologieLavoratori = new ProdottiTipologieLavoratori();\r\n  errorMessage: string | null = null;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private areaSrv: Aree,\r\n    private sottoAreaSrv: SottoareeService,\r\n    private prodottoSrv: ProdottiService,\r\n    private tipLavSrv: TipologieLavoratoriService,\r\n    private prodottoTipLavSrv: ProdottiTipologieLavoratoriService,\r\n    private settoreSrv: SettoreMateriaService,\r\n    private settoreMtr : SettoreMateriaService,\r\n    private router: Router,\r\n    public dialogRef: MatDialogRef<ModellazioneNuovaComponent>,\r\n    private snackBar: MatSnackBar,\r\n    @Inject(MAT_DIALOG_DATA) public id: number\r\n    ) { }\r\n\r\n\r\n  form1 = this.formBuilder.group({\r\n    inputArea: ['', [Validators.required, Validators.maxLength(50)]],\r\n    selectSettoreMateria: ['', Validators.required]\r\n  });\r\n\r\n  form2 = this.formBuilder.group({\r\n    inputSottoarea: ['', Validators.required],\r\n    area: ['', Validators.required]\r\n  });\r\n\r\n  form3 = this.formBuilder.group({\r\n    inputProdotto: ['', Validators.required],\r\n    area: ['', Validators.required],\r\n    sottoarea: [{ value: \"\", disabled: true }, Validators.required],\r\n    tiplav: [null, Validators.required]\r\n  });\r\n\r\n  form4 = this.formBuilder.group({\r\n    inputTipologiaLavoratore: ['', Validators.required],\r\n  });\r\n\r\n  form5 = this.formBuilder.group({\r\n    inputSettore: ['', [Validators.required, Validators.maxLength(50)]],\r\n  });\r\n\r\n  /* popolaSettori(){\r\n    this.settoreMtr.getAllSettoriMaterie().subscribe({\r\n      next : (data =>{\r\n        this.listaSettori = data;\r\n        this.listaSettori.sort((a, b) => (a.nome > b.nome ? 1 : -1));\r\n      })\r\n    });\r\n  } */\r\n    popolaSettori() {\r\n      this.settoreMtr.getAllSettoriMaterie().subscribe({\r\n        next: (data) => {\r\n          this.listaSettori = data;\r\n          this.listaSettori.sort((a, b) => (a.nome > b.nome ? 1 : -1));\r\n        },\r\n        error: (err) => {\r\n          this.errorMessage = 'Error fetching data';\r\n        }\r\n      });\r\n    }\r\n\r\n  popolaAree(conSottoaree: boolean){\r\n    /* this.areaSrv.getAreeConSottoaree(conSottoaree).subscribe(data => {\r\n      this.listaAree = data;\r\n    }); */\r\n  }\r\n\r\n  popolaSottoAree(){\r\n    /* this.sottoAreaSrv.getSottoAreeAll(false).subscribe(data => {\r\n      this.listaSottoAree = data;\r\n    }); */\r\n  }\r\n\r\n  popolaTipologieLavoratori(){\r\n    /* this.tipLavSrv.getTipologieLavoratoriAll().subscribe(data => {\r\n      this.listaTipLav = data;\r\n    }); */\r\n  }\r\n\r\n  popolaSettore(){\r\n    this.settoreSrv.getAllSettoriMaterie().subscribe(data => {\r\n      this.listaSettori = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.formAttivo = this.id;\r\n    if (this.formAttivo == 1)\r\n      this.popolaAree(false);\r\n    else if (this.formAttivo == 2)\r\n      this.popolaAree(true);\r\n    this.popolaSettori();\r\n    if (this.formAttivo == 4)\r\n      this.popolaSettore();\r\n  }\r\n\r\n  onPaste(event: ClipboardEvent, maxLength: number) {\r\n    const clipboardData = event.clipboardData || (window as any).clipboardData;\r\n    const pastedText = clipboardData.getData('text');\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const currentText = inputElement.value;\r\n    const selectionStart = inputElement.selectionStart || 0;\r\n    const selectionEnd = inputElement.selectionEnd || 0;\r\n    const newText =\r\n      currentText.slice(0, selectionStart) +\r\n      pastedText +\r\n      currentText.slice(selectionEnd);\r\n\r\n    if (newText.length > maxLength) {\r\n      event.preventDefault();\r\n\r\n      this.snackBar.open(\r\n        `Non puoi inserire più di ${maxLength} caratteri`,\r\n        'Chiudi',\r\n        { duration: 3000 }\r\n      );\r\n    }\r\n  }\r\n\r\n  onAreaSelectionChanged(value: number) {\r\n    this.sottoareeFiltered = this.listaSottoAree.filter(\r\n                                                s => s.area.id == value);\r\n    //console.log('sottoaree filtrate: ', this.sottoareeFiltered );\r\n    if (this.sottoareeFiltered.length > 0)\r\n        this.form3.controls[\"sottoarea\"].enable();\r\n    else this.form3.controls[\"sottoarea\"].disable();\r\n\r\n    this.form3.patchValue({\r\n        sottoarea: \"\"\r\n    });\r\n  }\r\n\r\n  onTipLavSelectionChanged(idSelected: number[])\r\n  {\r\n    this.idSelezionati=idSelected;\r\n  }\r\n\r\n/*   salvaArea(){\r\n    const area = new Area();\r\n    area.nome = this.form1.value.inputArea;\r\n    this.areaSrv.inserisciArea(area).subscribe(\r\n                data => {\r\n                          this.dialogRef.close();\r\n                        });\r\n  } */\r\n\r\n  newSalvaAreeProdotto(){\r\n    const areaProdotto = new AreeProdotti()\r\n    areaProdotto.nome = this.form1.value.inputArea.replace(/\\s+/g,' ').trim();\r\n    areaProdotto.idSettore = this.form1.value.selectSettoreMateria;\r\n    this.areaSrv.newSalvaAreeProdotti(areaProdotto).subscribe({\r\n      next:() =>{\r\n        this.dialogRef.close();\r\n      },\r\n      error : (error) =>{\r\n        this.errorMessage = error.error.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  salvaSottoArea(){\r\n    const sottoarea = new Sottoarea();\r\n    sottoarea.nome = this.form2.value.inputSottoarea;\r\n    sottoarea.area.id = +this.form2.get('area')?.value;\r\n    /* this.sottoAreaSrv.inserisciSottoArea(sottoarea).subscribe(\r\n                data => {\r\n                          this.dialogRef.close();\r\n                        }); */\r\n  }\r\n\r\n  salvaProdotto(){\r\n    this.prodotto = new Prodotto();\r\n    this.prodotto.nome = this.form3.value.inputProdotto;\r\n    this.prodotto.sottoarea.id = +this.form3.get('sottoarea')?.value;\r\n    /* this.prodottoSrv.inserisciProdotto(this.prodotto).subscribe(\r\n                data => {\r\n                          this.prodotto = data;\r\n                          let i: number;\r\n                          for (i=0; i<this.idSelezionati.length; i++)\r\n                          {\r\n                            console.log('lav selected ', this.idSelezionati[i])\r\n                            this.prodottoTipLav = new ProdottiTipologieLavoratori();\r\n                            this.prodottoTipLav.prodotto.id = this.prodotto.id;\r\n                            this.prodottoTipLav.tipologiaLavoratore.id = this.idSelezionati[i];\r\n                            console.log('prodotto tip lav ', this.prodotto.id, this.idSelezionati[i])\r\n                            this.prodottoTipLavSrv.inserisciProdottoTipologiaLavoratore(this.prodottoTipLav).subscribe(\r\n                              data => {}\r\n                            );\r\n                          }\r\n                          this.dialogRef.close();\r\n                        }); */\r\n  }\r\n\r\n  salvaTipologiaLavoratore(){\r\n    const tipLav = new TipologiaLavoratore();\r\n    tipLav.nome = this.form4.value.inputTipologiaLavoratore;\r\n    /* this.tipLavSrv.inserisciTipologiaLavoratore(tipLav).subscribe(\r\n                data => {\r\n                          this.dialogRef.close();\r\n                        }); */\r\n  }\r\n\r\n  /*salvaSettore() {\r\n    if (this.form5.invalid) {\r\n      console.error('Form non valido');\r\n      return;\r\n    }\r\n    const settore = new Settore();\r\n    settore.nome = this.form5.value.inputSettore;\r\n    this.settoreSrv.insertSettoreMateria(settore).subscribe(\r\n      data => {\r\n        this.dialogRef.close();\r\n      },\r\n      error => {\r\n        console.error('Errore durante il salvataggio del settore: ', error);\r\n      }\r\n    );\r\n  }*/\r\n\r\n    salvaSettore() {\r\n      if (this.form5.invalid) {\r\n        // console.error('Form non valido');\r\n        return;\r\n      }\r\n      const settoreNome = this.form5.value.inputSettore;\r\n\r\n/*       // Controlla se il settore esiste già\r\n      const settoreEsistente = this.listaSettori.find(s => s.nome.toLowerCase() === settoreNome.toLowerCase());\r\n      if (settoreEsistente) {\r\n        this.errorMessage = `Il Settore/Materia \"${settoreNome}\" è già presente nel sistema.`;\r\n        return;\r\n      } */\r\n\r\n      // Se non esiste, procedi con l'inserimento\r\n      const settore = new Settore();\r\n      settore.nome = settoreNome.replace(/\\s+/g,' ').trim();\r\n      this.settoreSrv.insertSettoreMateria(settore).subscribe({\r\n        next: () => {\r\n          this.dialogRef.close();\r\n        },\r\n        error: (error) => {\r\n          this.errorMessage = error.error.message;\r\n        }\r\n      });\r\n    }\r\n}\r\n","<container-element [ngSwitch]=\"formAttivo\">\r\n<!-- case0: AREA -->\r\n  <div *ngSwitchCase=\"0\">\r\n    <p><mat-icon class=\"main-ico\">build</mat-icon>Nuova Area/Prodotto</p>\r\n    <form class=\"form\" [formGroup]=\"form1\" (ngSubmit)=\"newSalvaAreeProdotto()\">\r\n      <!-- Settore/Materia -->\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-label>Settore/Materia</mat-label>\r\n        <mat-select\r\n          required\r\n          placeholder=\"Settore/Materia\"\r\n          name=\"settoreMateria\"\r\n          formControlName=\"selectSettoreMateria\"\r\n        >\r\n          <mat-option *ngFor=\"let listSett of listaSettori\" [value]=\"listSett.id\">\r\n            {{ listSett.nome }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <!-- Nuova Area/Prodotto -->\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-label>Nuova Area/Prodotto</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Es. Area1\"\r\n          formControlName=\"inputArea\"\r\n          maxlength=\"50\"\r\n          (focus)=\"isInputAreaFocused = true\"\r\n          (blur)=\"isInputAreaFocused = false\"\r\n          (paste)=\"onPaste($event, 50)\"\r\n        >\r\n        <mat-hint align=\"end\" *ngIf=\"isInputAreaFocused\">\r\n          {{ form1.get('inputArea')?.value?.length || 0 }}/50\r\n        </mat-hint>\r\n        <mat-error *ngIf=\"form1.get('inputArea')?.hasError('maxlength')\">\r\n          Il nome dell'Area/Prodotto non può superare 50 caratteri.\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <!-- Messaggio di errore generale -->\r\n      <mat-error *ngIf=\"errorMessage\">{{ errorMessage }}</mat-error>\r\n      <br *ngIf=\"errorMessage\">\r\n\r\n      <!-- Azioni del dialog -->\r\n      <mat-dialog-actions class=\"btn-box\" align=\"center\">\r\n        <button mat-button mat-dialog-close class=\"btn btn-back\">\r\n          <mat-icon>arrow_back</mat-icon>Chiudi\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          mat-button\r\n          class=\"btn btn-mod\"\r\n          [disabled]=\"!form1.valid\"\r\n        >\r\n          <mat-icon>add</mat-icon>Aggiungi\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </form>\r\n  </div>\r\n<!-- /case0 -->\r\n\r\n\r\n  <!--case1: SOTTOAREA-->\r\n  <div *ngSwitchCase=\"1\">\r\n    <p><mat-icon class=\"main-ico\">build</mat-icon>Nuova Sottoarea</p>\r\n    <form class=\"form\" [formGroup]=\"form2\" (ngSubmit)=\"salvaSottoArea()\">\r\n    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n      <mat-label>Area</mat-label>\r\n      <mat-select name=\"area\" formControlName=\"area\">\r\n        <mat-option *ngFor=\"let listaaree_elem of listaAree\" value=\"{{listaaree_elem.id}}\">{{listaaree_elem.nome}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n      <mat-label>Nome Sottoarea</mat-label>\r\n      <input matInput placeholder=\"Es. Area.1\" value=\"\" formControlName=\"inputSottoarea\">\r\n    </mat-form-field>\r\n\r\n    <mat-dialog-actions class=\"btn-box\" align=\"center\">\r\n      <button mat-button mat-dialog-close class=\"btn btn-back\"><mat-icon>arrow_back</mat-icon>Chiudi</button>\r\n      <button type=\"submit\" mat-button class=\"btn btn-mod\" [disabled]=\"!form2.valid\"> <mat-icon>add</mat-icon> Aggiungi</button>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n</div>\r\n  <!--/case1-->\r\n  <!--case2: PRODOTTO-->\r\n    <div *ngSwitchCase=\"2\">\r\n\r\n      <p><mat-icon class=\"main-ico\">build</mat-icon>Nuovo Prodotto</p>\r\n      <form class=\"form\" [formGroup]=\"form3\" (ngSubmit)=\"salvaProdotto()\">\r\n\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-label>Area</mat-label>\r\n            <mat-select\r\n                    required\r\n                    placeolder=\"Area\"\r\n                    formControlName=\"area\"\r\n                    (selectionChange)=\"onAreaSelectionChanged($event.value)\">\r\n              <mat-option *ngFor=\"let listaaree_elem of listaAree\" value=\"{{listaaree_elem.id}}\">{{listaaree_elem.nome}}</mat-option>\r\n            </mat-select>\r\n            <!-- <mat-error *ngIf=\"this.hasError('areaId', 'required')\">\r\n              Area obbligatoria\r\n          </mat-error>       -->\r\n          </mat-form-field>\r\n\r\n        <br>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-label>Sottoarea</mat-label>\r\n          <mat-select name=\"sottoarea\" formControlName=\"sottoarea\">\r\n            <mat-option *ngFor=\"let listasottoaree_elem of sottoareeFiltered\" value=\"{{listasottoaree_elem.id}}\">{{listasottoaree_elem.nome}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-label>Nome Prodotto</mat-label>\r\n          <input matInput placeholder=\"Es. Prodotto.1\" value=\"\" formControlName=\"inputProdotto\">\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-label>Tipologie Lavoratori</mat-label>\r\n          <mat-select formControlName=\"tiplav\" multiple   (selectionChange)=\" onTipLavSelectionChanged($event.value)\">\r\n              <mat-option *ngFor=\"let tiplav of listaTipLav\" [value]=\"tiplav.id\">{{tiplav.nome}}</mat-option>\r\n          </mat-select>\r\n\r\n      </mat-form-field>\r\n     <!-- <p>Tipologie Lavoratori selezionate: {{tipLavSelected}}</p> -->\r\n\r\n\r\n\r\n        <mat-dialog-actions class=\"btn-box\" align=\"center\">\r\n          <button mat-button mat-dialog-close class=\"btn btn-back\"><mat-icon>arrow_back</mat-icon>Chiudi</button>\r\n          <button type=\"submit\" mat-button class=\"btn btn-mod\" [disabled]=\"!form3.valid\"> <mat-icon>add</mat-icon> Aggiungi</button>\r\n        </mat-dialog-actions>\r\n      </form>\r\n\r\n      </div>\r\n\r\n        <!--/case2-->\r\n\r\n  <!--case3: Tipologia Lavoratore-->\r\n  <div *ngSwitchCase=\"3\">\r\n\r\n    <p><mat-icon class=\"main-ico\">build</mat-icon>Nuova Tipologia Lavoratore</p>\r\n    <form class=\"form\" [formGroup]=\"form4\" (ngSubmit)=\"salvaTipologiaLavoratore()\">\r\n\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-label>Nuova Tipologia Lavoratore</mat-label>\r\n          <input matInput placeholder=\"Es. Tipologia Lavoratore 1\" value=\"\" formControlName=\"inputTipologiaLavoratore\">\r\n        </mat-form-field>\r\n\r\n        <mat-dialog-actions class=\"btn-box\" align=\"center\">\r\n          <button mat-button mat-dialog-close class=\"btn btn-back\"><mat-icon>arrow_back</mat-icon>Chiudi</button>\r\n          <button type=\"submit\" mat-button class=\"btn btn-mod\" [disabled]=\"!form4.valid\"><mat-icon>add</mat-icon>Aggiungi</button>\r\n        </mat-dialog-actions>\r\n      </form>\r\n    </div>\r\n\r\n      <!--/case3-->\r\n  <!-- case4: SETTORE/MATERIA -->\r\n  <div *ngSwitchCase=\"4\">\r\n    <p><mat-icon class=\"main-ico\">build</mat-icon>Nuovo Settore/Materia</p>\r\n    <form class=\"form\" [formGroup]=\"form5\" (ngSubmit)=\"salvaSettore()\">\r\n      <!-- Nuovo Settore/Materia -->\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-label>Nuovo Settore/Materia</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Es. Pensioni\"\r\n          formControlName=\"inputSettore\"\r\n          maxlength=\"50\"\r\n          (focus)=\"isInputSettoreFocused = true\"\r\n          (blur)=\"isInputSettoreFocused = false\"\r\n          (paste)=\"onPaste($event, 50)\"\r\n        >\r\n        <mat-hint align=\"end\" *ngIf=\"isInputSettoreFocused\">\r\n          {{ form5.get('inputSettore')?.value?.length || 0 }}/50\r\n        </mat-hint>\r\n        <mat-error *ngIf=\"form5.get('inputSettore')?.hasError('maxlength')\">\r\n          Il nome del Settore/Materia non può superare 50 caratteri.\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <!-- Messaggio di errore generale -->\r\n      <mat-error *ngIf=\"errorMessage\">{{ errorMessage }}</mat-error>\r\n\r\n      <!-- Azioni del dialog -->\r\n      <mat-dialog-actions class=\"btn-box\" align=\"center\">\r\n        <button mat-button mat-dialog-close class=\"btn btn-back\">\r\n          <mat-icon>arrow_back</mat-icon>Chiudi\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          mat-button\r\n          class=\"btn btn-mod\"\r\n          [disabled]=\"!form5.valid\"\r\n        >\r\n          <mat-icon>add</mat-icon>Aggiungi\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </form>\r\n  </div>\r\n  <!-- /case4 -->\r\n\r\n\r\n</container-element>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from '@core';\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      redirectTo: 'settore-materia',\r\n      pathMatch: 'full'\r\n    },\r\n    {\r\n      path: 'area-prodotto',\r\n      canActivate: [AuthGuard],\r\n      data:{role: [\"P12689\",\r\n                  \"P12689; P12690\",\r\n                  \"P12689; P12690; P12799\",\r\n                  \"P12689; P12690; P12799; P12800\",\r\n                  \"P12689; P12690; P12799; P12800; P12801\",\r\n                  \"P12689; P12690; P12799; P12801\",\r\n                  \"P12689; P12690; P12800\",\r\n                  \"P12689; P12690; P12800; P12801\",\r\n                  \"P12689; P12690; P12801\",\r\n                  \"P12689; P12799\",\r\n                  \"P12689; P12799; P12800\",\r\n                  \"P12689; P12799; P12800; P12801\",\r\n                  \"P12689; P12799; P12801\",\r\n                  \"P12689; P12800\",\r\n                  \"P12689; P12800; P12801\",\r\n                  \"P12689; P12801\",\r\n                  \"P12690; P12799; P12800\",\r\n                  \"P12690; P12799; P12800; P12801\",\r\n                  \"P12690; P12800\",\r\n                  \"P12690; P12800; P12801\",\r\n                  \"P12799; P12800\",\r\n                  \"P12799; P12800; P12801\",\r\n                  \"P12800\",\r\n                  \"P12800; P12801\"]},\r\n      loadChildren: () => import('./aree/aree.module').then(m => m.AreeModule),\r\n    },\r\n    {\r\n    path: 'settore-materia',\r\n    canActivate: [AuthGuard],\r\n      data:{role: [\"P12689\",\r\n                  \"P12689; P12690\",\r\n                  \"P12689; P12690; P12799\",\r\n                  \"P12689; P12690; P12799; P12800\",\r\n                  \"P12689; P12690; P12799; P12800; P12801\",\r\n                  \"P12689; P12690; P12799; P12801\",\r\n                  \"P12689; P12690; P12800\",\r\n                  \"P12689; P12690; P12800; P12801\",\r\n                  \"P12689; P12690; P12801\",\r\n                  \"P12689; P12799\",\r\n                  \"P12689; P12799; P12800\",\r\n                  \"P12689; P12799; P12800; P12801\",\r\n                  \"P12689; P12799; P12801\",\r\n                  \"P12689; P12800\",\r\n                  \"P12689; P12800; P12801\",\r\n                  \"P12689; P12801\",\r\n                  \"P12690; P12799; P12800\",\r\n                  \"P12690; P12799; P12800; P12801\",\r\n                  \"P12690; P12800\",\r\n                  \"P12690; P12800; P12801\",\r\n                  \"P12799; P12800\",\r\n                  \"P12799; P12800; P12801\",\r\n                  \"P12800\",\r\n                  \"P12800; P12801\"]},\r\n    loadChildren: () => import('./settore-materia/settore-materia.module').then(m => m.SettoreMateriaModule)\r\n    },\r\n  ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ModellazioneRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ModellazioneRoutingModule } from './modellazione-routing.module';\r\nimport { ModellazioneNuovaComponent } from './modellazione-nuova/modellazione-nuova.component';\r\nimport { ModellazioneAggiornaComponent } from './modellazione-aggiorna/modellazione-aggiorna.component';\r\n\r\n\r\nconst COMPONENTS: any[] = [];\r\nconst COMPONENTS_DYNAMIC: any[] = [];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, ModellazioneRoutingModule],\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC, ModellazioneNuovaComponent, ModellazioneAggiornaComponent],\r\n})\r\nexport class ModellazioneModule {}\r\n","export class AreeProdotti\r\n{\r\n  id!: number;\r\n  creato!: Date;\r\n  aggiornato!: Date;\r\n  nome!: string;\r\n  idSettore!: number;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.creato = new Date();\r\n    this.aggiornato = new Date();\r\n    this.nome = '';\r\n    this.idSettore = 0;\r\n  }\r\n}\r\n\r\n","export class Settore {\r\n    id!: number;\r\n    creato!: Date;\r\n    aggiornato!: Date;\r\n    nome!: string;\r\n  \r\n    constructor() {\r\n      this.id = 0;\r\n      this.creato = new Date();\r\n      this.aggiornato = new Date();\r\n      this.nome = '';\r\n    }\r\n  }","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '@env/environment.prod';\r\nimport { ProdottiTipologieLavoratori } from '@shared/models/prodotti-tipologie-lavoratori.model';\r\nimport { Observable } from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProdottiTipologieLavoratoriService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n /*  getProdottiTipologieLavoratoriAll(): Observable<ProdottiTipologieLavoratori[]> {\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify('');\r\n    return this.http.get<ProdottiTipologieLavoratori[]>(environment.MS_SIRICOAPI + environment.API_URI+'prodotti-tipologie-lavoratori');\r\n  }\r\n\r\n  inserisciProdottoTipologiaLavoratore(prodottoTiplav: ProdottiTipologieLavoratori): Observable<ProdottiTipologieLavoratori> {\r\n    //console.log(prodottoTiplav);\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify(prodottoTiplav);\r\n    return this.http.post<ProdottiTipologieLavoratori>(environment.MS_SIRICOAPI + environment.API_URI+'prodotti-tipologie-lavoratori', body, {headers});\r\n  }\r\n\r\n  rimuoviProdottoTipologiaLavoratore(id: number): Observable<ProdottiTipologieLavoratori> {\r\n    //console.log(ruoloComunic);\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify('');\r\n    return this.http.post<ProdottiTipologieLavoratori>(environment.MS_SIRICOAPI + environment.API_URI+'prodotti-tipologie-lavoratori/'+id as string + '/rimuovi', body, {headers});\r\n  }\r\n\r\n  // estrae le tipologie di lavoratori associate ad un prodotto\r\n  getTipologieLavoratori(id: number): Observable<ProdottiTipologieLavoratori[]> {\r\n    //console.log('leggo le tipologie lavoratori associate al prodotto per l id:', id)\r\n    //catchError(this.handleError)\r\n    return this.http.get<ProdottiTipologieLavoratori[]>(environment.MS_SIRICOAPI + environment.API_URI+'prodotti-tipologie-lavoratori/'+id+'/prodotti');\r\n  }\r\n\r\n  rimuoviProdottoTipologieLavoratori(idProdotto: number): Observable<ProdottiTipologieLavoratori> {\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify('');\r\n    return this.http.post<ProdottiTipologieLavoratori>(environment.MS_SIRICOAPI + environment.API_URI+'prodotti-tipologie-lavoratori/'+idProdotto as string + '/prodotto/rimuovi', body, {headers});\r\n  } */\r\n}\r\n","/* eslint-disable quote-props */\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment.prod';\r\nimport { Sottoarea } from '@shared/models/sottoarea.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SottoareeService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSottoAree(id: number, soloConTipLav: boolean): Observable<Sottoarea[]> {\r\n    return this.http.get<Sottoarea[]>(environment.MS_SIRICOAPI + environment.API_URI+'aree/'+id+'/sottoaree?soloTipLav='+soloConTipLav);\r\n  }\r\n\r\n  getSottoArea(id: number): Observable<Sottoarea> {\r\n    return this.http.get<Sottoarea>(environment.MS_SIRICOAPI + environment.API_URI+'sottoaree/'+id as string);\r\n  }\r\n\r\n  getSottoAreeAll(soloConTipLav = false): Observable<Sottoarea[]> {\r\n    return this.http.get<Sottoarea[]>(environment.MS_SIRICOAPI + environment.API_URI+'sottoaree?soloConTipLav='+soloConTipLav);\r\n  }\r\n\r\n  getSottoareeConPaginazione(dimensione: number, ordine: string, pagina: number): Observable<Sottoarea[]> {\r\n    return this.http.get<Sottoarea[]>(environment.MS_SIRICOAPI + environment.API_URI+'sottoaree?dimensione='+dimensione as string+'&ordine='+ordine+'&pagina='+pagina as string);\r\n  }\r\n\r\n  contaSottoaree(): Observable<number> {\r\n    return this.http.get<number>(environment.MS_SIRICOAPI + environment.API_URI+'sottoaree/conta');\r\n  }\r\n\r\n  inserisciSottoArea(sottoarea: Sottoarea): Observable<any> {\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify(sottoarea);\r\n    return (this.http.post(environment.MS_SIRICOAPI + environment.API_URI+'sottoaree', body, {headers}));\r\n  }\r\n\r\n  aggiornaSottoArea(sottoarea: Sottoarea): Observable<any> {\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify(sottoarea);\r\n    //console.log('body: ', body);\r\n    return (this.http.post(environment.MS_SIRICOAPI + environment.API_URI+'sottoaree'  + '/aggiorna', body, {headers}));\r\n  }\r\n\r\n  verificaSottoArea(id: number): Observable<boolean> {\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify('');\r\n    return this.http.post<boolean>(environment.MS_SIRICOAPI + environment.API_URI+'sottoaree/'+id as string + '/verificaRimuovi', body, {headers});\r\n  }\r\n\r\n  deleteSottoArea(id: number): Observable<Sottoarea> {\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify('');\r\n    return this.http.post<Sottoarea>(environment.MS_SIRICOAPI + environment.API_URI+'sottoaree/'+id as string + '/rimuovi', body, {headers});\r\n  } \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '@env/environment.prod';\r\nimport { TipologiaLavoratore } from '@shared/models/tipologia-lavoratore.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipologieLavoratoriService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /* getTipologieLavoratoriAll(): Observable<TipologiaLavoratore[]> {\r\n    return this.http.get<TipologiaLavoratore[]>(environment.MS_SIRICOAPI + environment.API_URI+'tipologie-lavoratori');\r\n  }\r\n\r\n  getTipologieLavoratoriConPaginazione(dimensione: number, ordine: string, pagina: number): Observable<TipologiaLavoratore[]> {\r\n    return this.http.get<TipologiaLavoratore[]>(environment.MS_SIRICOAPI + environment.API_URI+'tipologie-lavoratori?dimensione='+dimensione as string+'&ordine='+ordine+'&pagina='+pagina as string);\r\n  }\r\n\r\n  contaTipologieLavoratori(): Observable<number> {\r\n    return this.http.get<number>(environment.MS_SIRICOAPI + environment.API_URI+'tipologie-lavoratori/conta');\r\n  }\r\n\r\n  getTipologiaLavoratore(id: number): Observable<TipologiaLavoratore> {\r\n    return this.http.get<TipologiaLavoratore>(environment.MS_SIRICOAPI + environment.API_URI+'tipologie-lavoratori/'+id);\r\n  }\r\n\r\n  verificaTipologiaLavoratore(id: number): Observable<boolean> {\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify('');\r\n    return this.http.post<boolean>(environment.MS_SIRICOAPI + environment.API_URI+ 'tipologie-lavoratori/'+id as string + '/verificaRimuovi', body, {headers});\r\n  }\r\n\r\n  inserisciTipologiaLavoratore(tipLav: TipologiaLavoratore): Observable<TipologiaLavoratore> {\r\n    //console.log(tipLav);\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify(tipLav);\r\n    return this.http.post<TipologiaLavoratore>(environment.MS_SIRICOAPI + environment.API_URI+'tipologie-lavoratori', body, {headers});\r\n  }\r\n\r\n  aggiornaTipologiaLavoratore(tipLav: TipologiaLavoratore): Observable<TipologiaLavoratore> {\r\n    //console.log(TipologiaLavoratore);\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify(tipLav);\r\n    console.log('body: ', body);\r\n    return this.http.post<TipologiaLavoratore>(environment.MS_SIRICOAPI + environment.API_URI+'tipologie-lavoratori' + '/aggiorna', body, {headers});\r\n  }\r\n\r\n  deleteTipologiaLavoratore(id: number): Observable<TipologiaLavoratore> {\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify('');\r\n    return this.http.post<TipologiaLavoratore>(environment.MS_SIRICOAPI + environment.API_URI+'tipologie-lavoratori/'+id as string + '/rimuovi', body, {headers});\r\n  } */\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}