{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/shared/models/area.model.ts","./src/app/shared/models/prodotti-tipologie-lavoratori.model.ts","./src/app/shared/models/prodotto.model.ts","./src/app/shared/models/sottoarea.model.ts","./src/app/shared/models/tipologia-lavoratore.model.ts","./src/app/shared/services/areeservice.service.ts","./src/app/shared/services/prodotti.service.ts","./src/app/shared/services/settore-materia.service.ts","./src/app/shared/services/territorio.service.ts"],"sourcesContent":["export class Area {\r\n  id!: number;\r\n  creato!: Date;\r\n  aggiornato!: Date;\r\n  nome!: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.creato = new Date();\r\n    this.aggiornato = new Date();\r\n    this.nome = '';\r\n  }\r\n}\r\n","import { Prodotto } from \"./prodotto.model\";\r\nimport { TipologiaLavoratore } from \"./tipologia-lavoratore.model\";\r\n\r\nexport class ProdottiTipologieLavoratori {\r\n\r\n  id!: number;\r\n  creato!: Date;\r\n  aggiornato!: Date;\r\n  prodotto!: Prodotto;\r\n  tipologiaLavoratore!: TipologiaLavoratore;\r\n\r\n  constructor(){\r\n    this.id = 0;\r\n    this.creato = new Date();\r\n    this.aggiornato = new Date();\r\n    this.prodotto = new Prodotto();\r\n    this.tipologiaLavoratore = new TipologiaLavoratore();\r\n  }\r\n\r\n}\r\n\r\n","import { Sottoarea } from './sottoarea.model';\r\n\r\nexport class Prodotto{\r\n  id!: number;\r\n  creato!: Date;\r\n  aggiornato!: Date;\r\n  ordine!: number;\r\n  nome!: string;\r\n  sottoarea!: Sottoarea;\r\n\r\n  constructor(){\r\n    this.id = 0;\r\n    this.creato = new Date();\r\n    this.aggiornato = new Date();\r\n    this.ordine = 0;\r\n    this.nome = '';\r\n    this.sottoarea = new Sottoarea();\r\n  }\r\n}\r\n","import { Area } from './area.model';\r\n\r\nexport class Sottoarea{\r\n  id!: number;\r\n  creato!: Date;\r\n  aggiornato!: Date;\r\n  ordine!: number;\r\n  nome!: string;\r\n  area!: Area;\r\n\r\n  constructor(){\r\n    this.id = 0;\r\n    this.creato = new Date();\r\n    this.aggiornato = new Date();\r\n    this.ordine = 0;\r\n    this.nome = '';\r\n    this.area = new Area();\r\n  }\r\n}\r\n","export class TipologiaLavoratore{\r\n  id!: number;\r\n  creato!: Date;\r\n  aggiornato!: Date;\r\n  nome!: string;\r\n\r\n  constructor(){\r\n    this.id = 0;\r\n    this.creato = new Date();\r\n    this.aggiornato = new Date();\r\n    this.nome = '';\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment.prod';\r\nimport { Area } from '@shared/models/area.model';\r\nimport { AreeProdotti } from '@shared/models/areeprodotti';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class Aree {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private apiUrl = environment.MS_SIRICOAPI + environment.API_URI + 'AreaProdotti/';\r\n\r\n  newDeleteAreeProdotti(id: number) : Observable<void>{\r\n    return this.http.delete<void>(`${this.apiUrl}EliminaAreeProdotti/${id}`)\r\n  }\r\n\r\n  newSalvaAreeProdotti(areaProdotto: AreeProdotti){\r\n    const headers = { 'content-type': 'application/json' };\r\n    return this.http.post<AreeProdotti>(`${this.apiUrl}InsertAreeProdotti`, areaProdotto, {headers})\r\n  }\r\n\r\n  newContaAreeProdotto(searchText: string) {\r\n    let params = new HttpParams();\r\n    params = searchText == null ? params : params.set('searchText', searchText);\r\n\r\n    return this.http.get<{ count: number }>(`${this.apiUrl}GetCountVistaAreeProdotti`, { params });\r\n  }\r\n\r\n  newGetAreeConPaginazione(pageSize: number, orderBy: string, pageNumber: number, searchText: string) {\r\n    let params = new HttpParams()\r\n      .set('dimensione', pageSize.toString())\r\n      .set('pagina', pageNumber.toString());\r\n      params = orderBy == null ? params : params.set('ordine', orderBy);\r\n      params = searchText == null ? params : params.set('searchText', searchText);\r\n\r\n    return this.http.get<any[]>(`${this.apiUrl}GetAreeProdottiPaginazione`, { params });\r\n  }\r\n\r\n  newGetAreaProdotto(id: number) : Observable<AreeProdotti>{\r\n    return this.http.get<AreeProdotti>(`${this.apiUrl}GetAreeProdottiById/${id}`)\r\n  }\r\n\r\n  newVerificaAreaProdotto(id: number): Observable<{ esitoRimuovi: boolean }>{\r\n    return this.http.get<{ esitoRimuovi: boolean }>(`${this.apiUrl}VerificaRimuovi/${id}`)\r\n  }\r\n\r\n  newAggiornaAreeProdotto(areaProdotto: AreeProdotti) : Observable<AreeProdotti>{\r\n    return this.http.post<AreeProdotti>(`${this.apiUrl}UpdateAreeProdotto`, areaProdotto)\r\n  }\r\n\r\n  newGetAllByIdSettore(idSettore: number) : Observable<AreeProdotti>{\r\n    return this.http.get<AreeProdotti>(`${this.apiUrl}getAllByIdSettore/${idSettore}`);\r\n  }\r\n\r\n  getAllAreaProdotto(): Observable<AreeProdotti[]> {\r\n    return this.http.get<AreeProdotti[]>(`${this.apiUrl}getAllAreeProdotti`);\r\n  }\r\n\r\n  newGetAllByidArea(idSettore: number) : Observable<AreeProdotti>{\r\n    return this.http.get<AreeProdotti>(`${this.apiUrl}GetAreeProdottiById/${idSettore}`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment.prod';\r\nimport { Prodotto } from '@shared/models/prodotto.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProdottiService {\r\n\r\n  private apiUrl = environment.MS_SIRICOAPI + environment.API_URI;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // getProdotti(id: number): Observable<Prodotto[]> {\r\n  //   return this.http.get<Prodotto[]>(environment.API_URI+'sottoaree/'+id+'/prodotti');\r\n  // }\r\n\r\n  getAspettiEDescrizioni(tipo: string): Observable<any[]> {\r\n\r\n    const prodotto = 'Prodotto';\r\n    const contenzioso = 'Contenzioso';\r\n\r\n    switch(tipo) {\r\n\r\n      case prodotto: {\r\n        return this.http.get<any[]>(this.apiUrl+'AspettiProdotti/getAll');\r\n        // break;\r\n      }\r\n\r\n      case contenzioso: {\r\n        return this.http.get<any[]>(this.apiUrl + 'AspettiContenziosi/getAll');\r\n        // break;\r\n      }\r\n    }\r\n    return this.http.get<any[]>(this.apiUrl+'AspettiProdotti/getAll');\r\n  }\r\n\r\n  // getAspettiEDescrizioniProdotti(): Observable<any[]> {\r\n  //   return this.http.get<any[]>(this.apiUrl+'getAll');\r\n  // }\r\n\r\n  /*  getProdotti(id: number, soloConTipLav: boolean): Observable<Prodotto[]> {\r\n    //console.log('soloConTipLav ' + soloConTipLav);\r\n    return this.http.get<Prodotto[]>(environment.API_URI+'sottoaree/'+id+'/prodotti?soloConTipLav='+soloConTipLav);\r\n  }\r\n\r\n   getProdottiAll(soloConTipLav: boolean): Observable<Prodotto[]> {\r\n    return this.http.get<Prodotto[]>(environment.API_URI+'prodotti?soloConTipLav='+soloConTipLav);\r\n  }\r\n\r\n  getProdottiConPaginazione(dimensione: number, ordine: string, pagina: number): Observable<Prodotto[]> {\r\n    return this.http.get<Prodotto[]>(environment.API_URI+'prodotti?dimensione='+dimensione as string+'&ordine='+ordine+'&pagina='+pagina as string);\r\n  }\r\n\r\n  contaProdotti(): Observable<number> {\r\n    return this.http.get<number>(environment.API_URI+'prodotti/conta');\r\n  }\r\n\r\n  getProdotto(id: number): Observable<Prodotto> {\r\n    return this.http.get<Prodotto>(environment.API_URI+'prodotti/'+id);\r\n  }\r\n\r\n  inserisciProdotto(prodotto: Prodotto): Observable<Prodotto> {\r\n    //console.log(prodotto);\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify(prodotto);\r\n    return this.http.post<Prodotto>(environment.API_URI+'prodotti', body, {headers});\r\n  }\r\n\r\n  aggiornaProdotto(prodotto: Prodotto): Observable<Prodotto> {\r\n    //console.log(prodotto);\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify(prodotto);\r\n    //console.log('body: ', body);\r\n    return this.http.post<Prodotto>(environment.API_URI+'prodotti'  + '/aggiorna', body, {headers});\r\n  }\r\n\r\n  verificaProdotto(id: number): Observable<boolean> {\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify('');\r\n    return this.http.post<boolean>(environment.API_URI+'prodotti/'+id as string + '/verificaRimuovi', body, {headers});\r\n  }\r\n\r\n  deleteProdotto(id: number): Observable<number> {\r\n    const headers = {'content-type': 'application/json'};\r\n    const body=JSON.stringify('');\r\n    return this.http.post<number>(environment.API_URI+'prodotti/'+id as string + '/rimuovi', body, {headers});\r\n  } */\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment.prod';\r\nimport { Settore } from '@shared/models/settore-materia.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettoreMateriaService {\r\n\r\n  private apiUrl = environment.MS_SIRICOAPI + environment.API_URI + 'SettoreMaterie';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllSettoriMaterie(): Observable<Settore[]> {\r\n    return this.http.get<Settore[]>(`${this.apiUrl}/getAllSettoriMaterie`);\r\n  }\r\n\r\n  getSettoriConAreeProdotti(): Observable<Settore[]> {\r\n    return this.http.get<Settore[]>(`${this.apiUrl}/getSettoriConAreaCollegata`);\r\n  }\r\n\r\n  getSettoriMaterieById(id: number): Observable<Settore> {\r\n    return this.http.get<Settore>(`${this.apiUrl}/getSettoriMaterieById/${id}`);\r\n  }\r\n\r\n/*   getSettoriMaterieByNome(nome: string): Observable<Settore[]> {\r\n    return this.http.get<Settore[]>(`${this.apiUrl}/getSettoriMaterieByNome/${nome}`);\r\n  } */\r\n\r\n  inserisciSettore(settoreMaterie: { id: number | null, nome: string }): Observable<Settore> {\r\n    return this.http.post<Settore>(`${this.apiUrl}/aggiornaSettoriMaterie`, settoreMaterie);\r\n  }\r\n\r\n  deleteSettoriMaterie(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/eliminaSettoriMaterie/${id}`);\r\n  }\r\n\r\n  contaSettoriMaterie(searchText: string) {\r\n    let params = new HttpParams();\r\n    params = searchText == null ? params : params.set('searchText', searchText);\r\n\r\n    return this.http.get<{ count: number }>(`${this.apiUrl}/countSettoriMaterie`, { params });\r\n  }\r\n\r\n  newGetSettoriConPaginazione(pageSize: number, orderBy: string, pageNumber: number, searchText: string) {\r\n    let params = new HttpParams()\r\n      .set('dimensione', pageSize.toString())\r\n      .set('pagina', pageNumber.toString());\r\n      params = orderBy == null ? params : params.set('ordine', orderBy);\r\n      params = searchText == null ? params : params.set('searchText', searchText);\r\n\r\n    return this.http.get<any[]>(`${this.apiUrl}/GetSettoriMateriePaginazione`, { params });\r\n  }\r\n\r\n  getFilteredSettoriMaterie(pageSize: number, orderBy: string | null, pageNumber: number): Observable<Settore[]> {\r\n    let params = new HttpParams()\r\n      .set('pageSize', pageSize.toString())\r\n      .set('pageNumber', pageNumber.toString());\r\n      params = orderBy == null ? params : params.set('orderBy', orderBy);\r\n\r\n    return this.http.get<Settore[]>(`${this.apiUrl}/getFiltrataBy`, { params });\r\n  }\r\n\r\n  insertSettoreMateria(settoreMaterie: { nome: string }): Observable<Settore> {\r\n    return this.http.post<Settore>(`${this.apiUrl}/InsertSettoreMateria`, settoreMaterie);\r\n  }\r\n\r\n  verificaRimuoviSettoreMateria(id: number): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/VerificaRimuoviSettoreMateria/${id}`,{});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { environment } from '@env/environment.prod';\r\n\r\nexport interface SedeDto {\r\n  sedeCodSede: string;\r\n  sedeDesc: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TerritorioService {\r\n  private apiUrl = environment.MS_SIRICOAPI + environment.API_URI + 'Territorio/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllSediSorted(): Observable<any> {\r\n    return this.http\r\n      .get<{ sedeCodSede: string; sedeDesc: string }[]>(`${this.apiUrl}getAllSediSorted`)\r\n      .pipe(map(sedi => sedi.map(s => ({ id: parseInt(s.sedeCodSede, 10), nome: s.sedeDesc }))));\r\n  }\r\n\r\n  getSediSortedRegione(regCodSede: string | null): Observable<any> {\r\n    return this.http\r\n      .get<{ sedeCodSede: string; sedeDesc: string }[]>(\r\n        `${this.apiUrl}getSediSortedRegione/${regCodSede}`\r\n      )\r\n      .pipe(map(sedi => sedi.map(s => ({ id: parseInt(s.sedeCodSede, 10), nome: s.sedeDesc }))));\r\n  }\r\n\r\n  getSediSortedProvincia(provCodSede: string | null): Observable<any> {\r\n    return this.http\r\n      .get<{ sedeCodSede: string; sedeDesc: string }[]>(\r\n        `${this.apiUrl}getSediSortedProvincia/${provCodSede}`\r\n      )\r\n      .pipe(map(sedi => sedi.map(s => ({ id: parseInt(s.sedeCodSede, 10), nome: s.sedeDesc }))));\r\n  }\r\n\r\n  listaCodiciProvinciali: string[] = [];\r\n  listaCodiciRegionali: string[] = [];\r\n\r\n  getSedi(role: string, codiceSede: any[] | null | undefined, pagina: string, ruoloRegionale: string, ruoloProvinciale: string): Observable<any[]> {\r\n\r\n    let observables: Observable<any>[] = [];\r\n    this.listaCodiciProvinciali = [];\r\n    this.listaCodiciRegionali = [];\r\n\r\n    for (let i=0; i<codiceSede!.length; i++) {\r\n      if (codiceSede![i].role == ruoloRegionale) {\r\n        this.listaCodiciRegionali.push(codiceSede![i].sedeCode);\r\n      }\r\n      if (codiceSede![i].role == ruoloProvinciale) {\r\n        this.listaCodiciProvinciali.push(codiceSede![i].sedeCode);\r\n      }\r\n    }\r\n\r\n    const fetchSediProv = (method: (listaCodiciProvinciali: string) => any) => {\r\n      return (this.listaCodiciProvinciali ?? []).map(codice => method(codice).pipe(catchError(() => of([]))));\r\n    };\r\n\r\n    const fetchSediReg = (method: (listaCodiciRegionali: string) => any) => {\r\n      return (this.listaCodiciRegionali ?? []).map(codice => method(codice).pipe(catchError(() => of([]))));\r\n    };\r\n\r\n    if (role!.split(';').map(ruolo => ruolo.trim()).includes(\"P12689\")) {\r\n    // if ( (role!.split(';').map(ruolo => ruolo.trim()).includes(\"P12690\")) ||\r\n    //       (role!.split(';').map(ruolo => ruolo.trim()).includes(\"P12689\")) ) {\r\n\r\n      observables = [this.getAllSediSorted().pipe(catchError(() => of([])))];\r\n\r\n    } else if (role == \"P12800\") {\r\n\r\n      observables = [];\r\n\r\n    } else {\r\n\r\n      // nel caso di inserimento devo sempre mappare le sedi, l'utente amministrativo non incide\r\n      // nel caso di gestione devo mappare le sedi solo se il (multi)ruolo non contiene l'utente amministrativo\r\n      if (pagina == 'Gestione' && role.includes('P12690')) {\r\n        observables = [this.getAllSediSorted().pipe(catchError(() => of([])))];\r\n      }\r\n      else {\r\n        if (this.listaCodiciRegionali.length != 0) {\r\n          observables = fetchSediReg(codice => this.getSediSortedRegione(codice));\r\n        }\r\n\r\n        if (this.listaCodiciProvinciali.length != 0) {\r\n            observables.push(...fetchSediProv(codice => this.getSediSortedProvincia(codice)));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Inserisci un elemento vuoto tra le chiamate per leggibilità\r\n    const spacedObservables = [];\r\n    for (let i = 0; i < observables.length; i++) {\r\n      spacedObservables.push(observables[i]);\r\n      if (i < observables.length - 1) {\r\n        spacedObservables.push(of([{ id: null, nome: '' }]));\r\n      }\r\n    }\r\n\r\n    return forkJoin(spacedObservables).pipe(\r\n      map(results => results.flat())\r\n    );\r\n  }\r\n\r\n  getRegioni(): Observable<any[]> {\r\n    let url = this.apiUrl + 'getAllRegioniSorted'\r\n    return this.http.get<any[]>(url);\r\n  }\r\n\r\n  getProvince(): Observable<any[]> {\r\n    let url = this.apiUrl + 'getAllProvinceSorted'\r\n    return this.http.get<any[]>(url);\r\n  }\r\n\r\n  getAllSediByIdRegione(codiceRegione: number): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}getSediSortedRegione/${codiceRegione}`);\r\n  }\r\n\r\n  getAllProvinceByIdRegione(codiceRegione: number): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}getProvinceRegionebyRegCodSede/${codiceRegione}`);\r\n  }\r\n\r\n  verificaSediIntegrazioneRegionale(descSedeSegnalazione: string, sediUtente: string[]): Observable<{risultato: boolean}>{\r\n    let params = new HttpParams()\r\n    .set('descSedeSegnalazione', descSedeSegnalazione)\r\n    sediUtente.forEach(sedi =>{\r\n      params = params.append('sediUtente', sedi)\r\n    });\r\n\r\n    return this.http.get<{risultato: boolean}>(`${this.apiUrl}VerificaSediIntegrazioneRegionale`, { params })\r\n  }\r\n\r\n  getRegioniByIdSede(codiceSede: string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}getRegioneByCodSede/${codiceSede}`);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}